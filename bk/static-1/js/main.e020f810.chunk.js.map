{"version":3,"sources":["pages/Dashboard.tsx","components/table/Head.tsx","config.ts","api/fetch.ts","pages/NewOrder/NewOrderContext.tsx","components/AutoComplete.tsx","components/table/NewRow.tsx","components/table/Table.tsx","constants.ts","pages/Orders/components/OrderOptions.tsx","pages/Orders/components/DatePickers.tsx","context/BranchesContext.tsx","pages/NewOrder/components/Branches.tsx","components/BackToMenu.tsx","pages/Orders/Orders.tsx","pages/NewOrder/components/ColorSelections.tsx","pages/NewOrder/components/OrderOptions.tsx","pages/NewOrder/Dialog.tsx","pages/NewOrder/NewOrder.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","dashboard","display","alignItems","height","justifyContent","textAlign","button","minWidth","marginBottom","link","textDecoration","Dashboard","props","classes","className","Grid","container","item","xs","lg","to","Button","variant","color","Typography","root","width","paper","spacing","table","visuallyHidden","border","clip","margin","overflow","padding","position","top","EnhancedTableHead","headCells","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","TableCell","sortDirection","id","TableSortLabel","active","direction","onClick","property","event","label","url","document","getElementById","afmValue","value","console","log","domain","groupBy","keys","array","reduce","objectsByKeyValue","obj","key","join","concat","generatedKey","constructApi","params","encodeURIComponent","JSON","stringify","getData","a","short","fetch","response","json","data","groupFincodeStatus","fechOrders","result","fechGroups","Company","getbranches","afm","AFM","defaults","bOption","trdr","trdbranch","comments","mtrl","commentS1","qtY1","qtY2","method","headers","body","downloadPdf","payload","code","pdf","linkSource","downloadLink","createElement","fileName","href","download","click","Error","message","getItems","BOption","SearchValue","defaultValues","NewOrderContext","createContext","Asynchronous","useState","loading","setLoading","handleChange","e","v","target","length","setValue","useContext","selectedInfo","handleSetSelectedValue","actions","orderColor","fincode","search","getSelection","open","setOpen","options","setOptions","useEffect","DFrom","DTo","TakeRecs","Id","LastId","list","name","filterOptions","createFilterOptions","option","Autocomplete","style","onOpen","onClose","onChange","filter","d","getOptionSelected","renderOption","sku","renderInput","TextField","InputProps","endAdornment","CircularProgress","size","NewRow","saveOrder","setWeight","setComments","setFinCode","mtrlname","xdocname","groups","setGroups","group","setGroup","getGroups","useCallback","Qty1","toLocaleString","FormControl","Select","val","resetSelection","i","MenuItem","Input","disabled","title","type","alt","src","IconButton","alert","component","SaveRounded","descendingComparator","b","getComparator","stableSort","comparator","stabilizedThis","el","index","sort","DataTable","onRowclick","rows","clearCell","maxCols","add","orderCol","pagination","stickyHeader","getRows","selectedRow","rowsPerPagenum","getPdf","React","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","tableRows","setRow","addRow","setAddwRow","status","Math","min","TableContainer","Table","aria-labelledby","aria-label","rowCount","TableBody","slice","row","hover","rowData","preventDefault","handleRowClick","tabIndex","selected","r","moment","format","imagefile","path","fontSize","newtableRows","handleRemoveOrder","push","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","PENDING","profilColors","radios","GreenRadio","withStyles","palette","primary","main","checked","Radio","OrderOptions","optionValue","RadioGroup","FormControlLabel","control","borderRadius","shape","backgroundColor","alpha","common","white","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","date","DatePickers","getDateFrom","getDateTo","getSearchData","text","setText","Date","selectedDateFrom","setSelectedDateFrom","selectedDateTo","setSelectedDateTo","dateFormat","utils","DateFnsUtils","DatePicker","autoOk","disableToolbar","from","BranchesContext","Branches","branch","selectedBranch","setSelectBranch","fullWidth","InputLabel","find","address","BackToMenu","startIcon","flexGrow","secondary","marginTop","table_wrapper","Orders","defaultData","orderDetails","setDetails","orders","setOrders","query","setQuery","dateFrom","setDateFrom","dateto","setDateTo","master","Object","getDetails","getOrders","TrdrBranch","sm","numeric","ficomments","remarks","ColorSelections","setColorValue","colorValue","setSelectedColorCompany","selectedColorCompany","colorTypes","setColorTypes","colorType","setColorType","manifacturer","setManifacturer","colorCompany","setColorCompany","selectedManifacturer","setSelectedManifacturer","colorData","setColorData","handleGetCollorData","boption","data30","data60","data40","handleChangeCompany","handleChangeManifacturer","handleInputChange","newInputValue","handleChangeColor","newValue","handleGetColor","Number","md","maxWidth","labelId","freeSolo","onInputChange","getOptionLabel","isDisabled","setOrderColor","BootstrapDialog","styled","Dialog","OrderDialog","finDoc","window","location","reload","DialogTitle","DialogContent","dividers","gutterBottom","DialogActions","autoFocus","qtY1Def","NewOrder","useHistory","setRows","setSelectedInfo","remarkValue","setRemarkValue","isopen","setDialog","setFindoc","pdfCode","setPdfCode","SetColorValue","selectionData","u5NAME","mU21","kg","parseFloat","toFixed","newNum","num","convertedNum","qt1converted","stateData","Provider","multiline","maxRows","orderData","orderItem","company","ccCPOUDRAID","CCCBAFIOID","postData","then","statusText","findoc","createTheme","error","App","setAfm","setBranch","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4RASMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,OAAQ,OACRC,eAAgB,SAChBC,UAAW,UAEbC,OAAO,CACLC,SAAS,QACTC,aAAa,QAGfC,KAAK,CACHC,eAAgB,aAKTC,EAAY,SAACC,GACxB,IAAMC,EAAUjB,IAEhB,OACE,qBAAKkB,UAAWD,EAAQb,UAAxB,SACE,eAACe,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CAAML,UAAWD,EAAQJ,KAAMW,GAAG,UAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUT,UAAWD,EAAQP,OAA/D,SACE,cAACkB,EAAA,EAAD,8IAIN,cAACT,EAAA,EAAD,CAAME,MAAI,EAAEC,GAAI,GAAIC,GAAI,EAAxB,SACE,cAAC,IAAD,CAAML,UAAWD,EAAQJ,KAAMW,GAAG,OAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUT,UAAWD,EAAQP,OAA/D,SACE,cAACkB,EAAA,EAAD,0G,6KC9BI3B,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPlB,aAAcV,EAAM8B,QAAQ,IAE9BC,MAAO,CACLtB,SAAU,KAEZuB,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACN7B,OAAQ,EACR8B,QAAS,EACTC,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLX,MAAO,QAkBE,SAASY,EAAkB1B,GAA4B,IAC7D2B,EAAsD3B,EAAtD2B,UAAW1B,EAA2CD,EAA3CC,QAAS2B,EAAkC5B,EAAlC4B,MAAOC,EAA2B7B,EAA3B6B,QAASC,EAAkB9B,EAAlB8B,cAM3C,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGL,EAAUM,KAAI,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,CAEEC,cAAeP,IAAYK,EAASG,IAAKT,EAF3C,SAIE,eAACU,EAAA,EAAD,CACEC,OAAQV,IAAYK,EAASG,GAC7BG,UAAWX,IAAYK,EAASG,GAAKT,EAAQ,MAC7Ca,SAfTC,EAeoCR,EAASG,GAfhC,SAACM,GACbb,EAAca,EAAOD,KAWf,UAKGR,EAASU,MACTf,IAAYK,EAASG,GACpB,sBAAMnC,UAAWD,EAAQiB,eAAzB,SACa,SAAVU,EAAmB,oBAAsB,qBAE1C,SAbDM,EAASG,IATtB,IAACK,S,qECzDCG,EAAWC,SAASC,eAAe,UAGnCC,EAAQ,UAAIF,SAASC,eAAe,kBAA5B,aAAG,EACbE,MACJC,QAAQC,IAAI,UAAWH,GAChB,IAAMI,EACE,cAAbJ,EAA2B,mCAA3B,OAAgEH,QAAhE,IAAgEA,OAAhE,EAAgEA,EAAKI,M,2BCNjEI,EAAU,SAACC,GAAD,OAAe,SAACC,GAAD,OAC7BA,EAAMC,QAAO,SAACC,EAAwBC,GACpC,IAAMT,EAAQK,EAAKrB,KAAI,SAAC0B,GAAD,OAAcD,EAAIC,MAAMC,KAAK,KAMpD,OALAH,EAAkBR,IAAUQ,EAAkBR,IAAU,IAAIY,OAAhC,2BACvBH,GADsB,IAEzBI,aAAcb,KAGTQ,IACN,MAECM,GAAe,SAAClB,EAAKmB,GAEzB,OAAOnB,EADaoB,mBAAmBC,KAAKC,UAAUH,KAIjD,SAAeI,KAAtB,gC,8CAAO,kDAAAC,EAAA,6DAAuBxB,EAAvB,+BAA6B,GAAImB,EAAjC,+BAA+C,GAAIM,EAAnD,yCACkBC,MAAMR,GAAalB,EAAKmB,IAD1C,cACCQ,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,OAGCC,EAAqBtB,EAAQ,CACjC,UACA,UACA,SACA,aAPG,kBASEiB,EAAQK,EAAmBD,GAAQA,GATrC,6C,sBAaA,IAAME,GAAU,uCAAG,WAAOF,GAAP,eAAAL,EAAA,sEACHD,GAAQ,GAAD,OACvBhB,EADuB,+BAE1BsB,GACA,GAJsB,cAClBG,EADkB,yBAMjBA,GANiB,2CAAH,sDASVC,GAAU,uCAAG,8BAAAT,EAAA,6DAClBK,EAAO,CACXK,QAAS,GAFa,SAKHX,GAAQ,GAAD,OAAIhB,EAAJ,2BAAqCsB,GALzC,cAKlBG,EALkB,gBAMXA,EANW,mFAAH,qDAWVG,GAAW,uCAAG,WAAOC,GAAP,iBAAAZ,EAAA,6DACnBK,EAAO,CACXK,QAAS,EACTG,IAAKD,GAHkB,SAMJb,GAAQ,GAAD,OAAIhB,EAAJ,iCAA2CsB,GAN9C,cAMnBG,EANmB,OAOzB3B,QAAQC,IAAI,cAAe0B,GAPF,kBAQlBA,GARkB,2CAAH,sDAWlBM,GAAW,CACf,CACEJ,QAAS,EACTK,QAAS,EACTC,KAAM,KACNC,UAAW,IACXC,SAAU,QACVC,KAAM,MACNC,UAAW,QACXC,KAAM,EACNC,KAAM,GAER,CACEZ,QAAS,EACTK,QAAS,EACTC,KAAM,KACNC,UAAW,IACXC,SAAU,QACVC,KAAM,MACNC,UAAW,QACXC,KAAM,EACNC,KAAM,GAER,CACEZ,QAAS,EACTK,QAAS,EACTC,KAAM,KACNC,UAAW,IACXC,SAAU,QACVC,KAAM,MACNC,UAAW,SACXC,KAAM,EACNC,KAAM,I,8CAKH,4CAAAtB,EAAA,6DAAwBxB,EAAxB,+BAA8B,GAAI6B,EAAlC,+BAAyCS,GAAzC,SAEkBZ,MAAM1B,EAAK,CAChC+C,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM5B,KAAKC,UAAUO,KAPlB,cAECF,EAFD,YAUIA,EAVJ,SAU0BA,EAASC,OAVnC,6CAUID,SAVJ,KAUcE,KAVd,oD,sBAgBA,SAAeqB,GAAtB,qC,8CAAO,WAA2BC,EAAcC,GAAzC,6BAAA5B,EAAA,sEAEGxB,EAFH,UAEYO,EAFZ,wCAIoBmB,MAAMR,GAAalB,EAAK,CAAEkC,QAAS,EAAG1C,GAAI4D,IAAS,CACxEJ,QAAS,CACP,eAAgB,sBANjB,cAIGrB,EAJH,gBASeA,EAASC,OATxB,OASGyB,EATH,OAUGC,EAVH,sCAU+CD,GAC5CE,EAAetD,SAASuD,cAAc,KACtCC,EAZH,UAYiBN,EAZjB,QAaHI,EAAaG,KAAOJ,EACpBC,EAAaI,SAAWF,EACxBF,EAAaK,QAfV,wDAiBG,IAAIC,OAAM,2CAAKlC,gBAAL,mBAAeE,YAAf,eAAqBuB,OAAQ,KAAIU,SAjB9C,2D,sBAyDA,IAAMC,GAAQ,uCAAG,WAAOZ,GAAP,+BAAA3B,EAAA,6DACdU,EAA8CiB,EAA9CjB,QAAS8B,EAAqCb,EAArCa,QAAS3B,EAA4Bc,EAA5Bd,IADJ,EACgCc,EAAvBc,mBADT,MACuB,KADvB,EAEhB9C,EAFgB,aAGpBe,UACA8B,UACA3B,MACA4B,eACGd,GAECnD,EATgB,UASPO,EATO,uCAUCmB,MAAMR,GAAalB,EAAKmB,IAVzB,cAUhBQ,EAVgB,gBAWHA,EAASC,OAXN,cAWhBC,EAXgB,yBAYfA,GAZe,4CAAH,sDCzKRqC,GAAqB,GACrBC,GAAkBC,wBAAcF,ICY9B,SAASG,KAAgB,IAAD,EACPC,oBAAS,GADF,mBAC9BC,EAD8B,KACrBC,EADqB,KAG/BC,EAAe,SAACC,GACpB,IAAMC,EAAID,EAAEE,OAAOxE,MACfuE,EAAEE,OAAS,IACbL,GAAW,GACXM,EAASH,KAPwB,EAWnCI,qBAAWZ,IADLa,EAV6B,EAU7BA,aAAcC,EAVe,EAUfA,uBAAwBC,EAVT,EAUSA,QAASC,EAVlB,EAUkBA,WAVlB,EAYTH,EAAanD,KAAjCuD,EAZ6B,EAY7BA,QAASC,EAZoB,EAYpBA,OAETC,EAAiBJ,EAAjBI,aAd6B,EAgBbhB,oBAAS,GAhBI,mBAgB9BiB,EAhB8B,KAgBxBC,EAhBwB,OAiBPlB,mBAAwB,IAjBjB,mBAiB9BmB,EAjB8B,KAiBrBC,EAjBqB,OAkBXpB,mBAAS,IAlBE,mBAkB9BlE,EAlB8B,KAkBvB0E,EAlBuB,KAqBrCa,qBAAU,WACR,IAAIjG,GAAS,EAEb,GAAK6E,EAmCL,OA/BA,sBAAC,gCAAA/C,EAAA,0DACKpB,EADL,uBAESyB,EAAO,CACXK,QAAS,EACT+B,YAAa7D,EACb4D,QAASmB,EACTS,MAAO,KACPC,IAAK,KACLC,SAAU,KACVC,GAAI,KACJC,OAAQ,KACR3D,IAAK+C,GAXV,SAc+B7D,GAAQ,GAAD,OAC9BhB,EAD8B,8BAEjCsB,GAhBL,OAcSF,EAdT,OAoBSsE,EAAYtE,EAASvC,KAAI,SAAC5B,GAC9B,MAAO,CAAE0I,KAAM1I,EAAK0I,KAAM9F,MAAO5C,EAAK4F,KAAMvB,KAAMrE,MAGhDkC,IACFgG,EAAWO,GAAc,IACzBzB,GAAW,IA1BhB,0CAAD,GA+BO,WACL9E,GAAS,KAEV,CAACU,IAEJuF,qBAAU,WACHJ,GACHG,EAAW,MAEZ,CAACH,IAQJ,IAAMY,EAAgBC,YAAoB,CACxC9E,UAAW,SAAC+E,GAAD,OAAiBA,EAAOjG,SAErC,OACE,mCACE,cAACkG,EAAA,EAAD,CACEH,cAAeA,EACf3G,GAAG,oBACH+G,MAAO,CAAEtI,MAAO,KAChBsH,KAAMA,EACNiB,OAAQ,WACNhB,GAAQ,IAEViB,QAAS,WACPjB,GAAQ,IAEVkB,SAAU,SAAChC,EAAGC,GACRA,EACmBc,EAAQkB,QAC3B,SAACC,GAAD,OAAYA,EAAExG,QAAUuE,EAAEvE,UAEZkF,EAAaX,EAAE9C,MAE/BoD,EAAuB,KAG3B4B,kBAAmB,SAACR,EAAQjG,GAAT,OAAmBiG,EAAOjD,OAAShD,EAAMgD,MAC5D0D,aAAc,SAACT,GAAD,uBACH,OAANA,QAAM,IAANA,GAAA,UAAAA,EAAQxE,YAAR,eAAckF,MAAOV,EAAOxE,KAAKuB,KADxB,eACmCiD,EAAOH,OAExDT,QAASA,EACTlB,QAASA,EACTnE,MAAOiF,EACP2B,YAAa,SAAC7F,GAAD,OACX,cAAC8F,EAAA,EAAD,2BACM9F,GADN,IAEEtD,QAAQ,WACR6I,SAAUjC,EACVyC,WAAU,2BACL/F,EAAO+F,YADF,IAERC,aACE,eAAC,WAAD,WACG5C,EACC,cAAC6C,EAAA,EAAD,CAAkBtJ,MAAM,UAAUuJ,KAAM,KACtC,KACHlG,EAAO+F,WAAWC,0BCjH9B,IAAMG,GAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAuB,EAE5CxC,qBAAWZ,IADLa,EADsC,EACtCA,aAAcwC,EADwB,EACxBA,UAAWtC,EADa,EACbA,QAASuC,EADI,EACJA,YAAaC,EADT,EACSA,WADT,EAK5C1C,EAAanD,KADP8F,EAJsC,EAItCA,SAAU9E,EAJ4B,EAI5BA,KAAMC,EAJsB,EAItBA,KAAM8E,EAJgB,EAIhBA,SAAUhF,EAJM,EAINA,UAAWyC,EAJL,EAIKA,OAJL,EAOlBf,mBAAS,IAPS,mBAOvCuD,EAPuC,KAO/BC,EAP+B,OAQpBxD,mBAASU,EAAanD,KAAKuD,SARP,mBAQvC2C,EARuC,KAQhCC,EARgC,KA2BxCC,EAAYC,sBAAW,sBAAC,4BAAA1G,EAAA,sEACFS,KADE,OACtB4F,EADsB,OAE5BC,EAAUD,GAGVG,EAASH,EAAO,GAAG3B,MACnBwB,EAAWG,EAAO,GAAG3B,MANO,2CAO3B,IAEHP,qBAAU,WACRsC,MACC,CAACA,IAEJ,IAWME,EAAOtF,EAAKuF,eAAe,SAQjC,OANAzC,qBAAU,WACK,MAAT7C,GACF0E,EAAU1E,KAEX,CAACA,IAGF,eAAC3D,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,UACE,cAAC+I,EAAA,EAAD,UACGR,EAAOhD,OAAS,GACf,cAACyD,EAAA,EAAD,CAAQ5B,SA5CU,SAAChC,GAC3B,IAAI6D,EAAM7D,EAAEE,OAAOxE,MACnB8E,EAAQsD,iBACRR,EAASO,GACTb,EAAWa,IAwCoCrC,KAAK,UAAU9F,MAAO2H,EAA7D,SACGF,EAAOzI,KAAI,SAACuF,EAAQ8D,GAAT,OACV,cAACC,EAAA,EAAD,CAAUtI,MAAOuE,EAAEuB,KAAnB,SAA0BvB,EAAEuB,gBAMtC,cAAC5G,EAAA,EAAD,UACE,cAAC,GAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAACqJ,EAAA,EAAD,CAAOvI,MAAOuH,EAAUiB,UAAQ,EAACC,MAAOlB,MAE1C,cAACrI,EAAA,EAAD,UACE,cAAC2H,EAAA,EAAD,CACEzH,GAAG,SACH0G,KAAK,OACL9F,MAAO0C,EACP4D,SAzEa,SAAChC,GACpB,IAAI6D,EAAM7D,EAAEE,OAAOxE,MACnBoH,EAAUe,IAwEJO,KAAK,aAGT,cAACxJ,EAAA,EAAD,UACE,cAACqJ,EAAA,EAAD,CAAOzC,KAAK,OAAO9F,MAAO+H,EAAMS,UAAQ,MAE1C,cAACtJ,EAAA,EAAD,UACGsI,EACC,qBACEmB,IAAI,WACJC,IAAG,wEAAmEpB,GACtElL,OAAO,OAGT,cAAC,IAAD,MAGJ,cAAC4C,EAAA,EAAD,UACE,cAACqJ,EAAA,EAAD,CACEzC,KAAK,YACL9F,MAAOwC,EACP8D,SA1FqB,SAAChC,GAC5B,IAAI6D,EAAM7D,EAAEE,OAAOxE,MACnBqH,EAAYc,QA2FTlD,GACC,cAAC/F,EAAA,EAAD,UACE,cAAC2J,EAAA,EAAD,CAAYrJ,QAtED,WAEjB,GADAS,QAAQC,IAAI,eAAgB0E,EAAanD,MACrCmD,EAAanD,KAAKiB,KAAO,EAC3B,OAAOoG,MACL,8SAGJ3B,EAAUvC,EAAanD,MACvBqD,EAAQsD,kBA8D+B1K,MAAM,UAAUqL,UAAU,OAA3D,SACE,cAACC,EAAA,EAAD,YCjHZ,SAASC,GAAwB7H,EAAM8H,EAAMtK,GAC3C,OAAIsK,EAAEtK,GAAWwC,EAAExC,IACT,EAENsK,EAAEtK,GAAWwC,EAAExC,GACV,EAEF,EAKT,SAASuK,GACPxK,EACAC,GAKA,MAAiB,SAAVD,EACH,SAACyC,EAAG8H,GAAJ,OAAUD,GAAqB7H,EAAG8H,EAAGtK,IACrC,SAACwC,EAAG8H,GAAJ,OAAWD,GAAqB7H,EAAG8H,EAAGtK,IAG5C,SAASwK,GAAc9I,EAAY+I,GACjC,IAAMC,EAAiBhJ,EAAMtB,KAAI,SAACuK,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACrI,EAAG8H,GACtB,IAAMvK,EAAQ0K,EAAWjI,EAAE,GAAI8H,EAAE,IACjC,OAAc,IAAVvK,EAAoBA,EACjByC,EAAE,GAAK8H,EAAE,MAEXI,EAAetK,KAAI,SAACuK,GAAD,OAAQA,EAAG,MAGvC,IAAMxN,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPlB,aAAcV,EAAM8B,QAAQ,IAE9BC,MAAO,CAELE,OAAQ,QAEVD,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACN7B,OAAQ,EACR8B,QAAS,EACTC,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLX,MAAO,QAsBE,SAAS6L,GAAU3M,GAAoB,IAElD4M,EAcE5M,EAdF4M,WACAC,EAaE7M,EAbF6M,KACAlL,EAYE3B,EAZF2B,UACAoH,EAWE/I,EAXF+I,KALiD,EAgB/C/I,EAVF8M,iBANiD,YAgB/C9M,EATF+M,QASE/M,EARFgN,YARiD,WAgB/ChN,EAPFiN,gBATiD,MAStC,GATsC,IAgB/CjN,EANFkN,kBAViD,SAWjDC,EAKEnN,EALFmN,aACAC,EAIEpN,EAJFoN,QAZiD,EAgB/CpN,EAHFqN,mBAbiD,MAanC,KAbmC,IAgB/CrN,EAFFsN,sBAdiD,MAchC,GAdgC,EAejDC,EACEvN,EADFuN,OAEItN,EAAUjB,KAjBmC,EAkBzBwO,IAAMrG,SAAgB,OAlBG,mBAkB5CvF,EAlB4C,KAkBrC6L,EAlBqC,OAmBrBD,IAAMrG,SAAqB8F,GAnBN,mBAmB5CpL,EAnB4C,KAmBnC6L,EAnBmC,OAoB3BF,IAAMrG,SAAS,GApBY,mBAoB5CwG,EApB4C,KAoBtCC,EApBsC,OAqBbJ,IAAMrG,SAASmG,GArBF,mBAqB5CO,EArB4C,KAqB/BC,EArB+B,OAuBvB3G,mBAAS0F,GAvBc,oBAuB5CkB,GAvB4C,MAuBjCC,GAvBiC,SAwBtB7G,oBAAS,GAxBa,qBAwB5C8G,GAxB4C,MAwBpCC,GAxBoC,MA2B/CC,GAAS,KAgDb3F,qBAAU,YACPwE,GAAOgB,GAAOnB,KACd,CAACA,EAAMG,IAGMoB,KAAKC,IAAIR,EAAahB,EAAKnF,OAASiG,EAAOE,GAE3D,OACE,sBAAK3N,UAAWD,EAAQY,KAAxB,UACE,iCACE,cAACyN,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEpB,aAAcA,EACdjN,UAAWD,EAAQgB,MACnBuN,kBAAgB,aAChBtE,KAAM,SACNuE,aAAW,iBALb,UAOE,cAAC/M,EAAD,CACEzB,QAASA,EACT2B,MAAOA,EACPC,QAASA,EACTC,cApEc,SACxBa,EACAD,GAGA+K,EADc5L,IAAYa,GAAsB,QAAVd,EACrB,OAAS,OAC1B8L,EAAWhL,IA+DDgM,SAAU7B,EAAKnF,OACf/F,UAAWA,IAEb,eAACgN,EAAA,EAAD,WACGtC,GAAW0B,GAAW3B,GAAcxK,EAAOC,IACzC+M,MAAMjB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C5L,KAAI,SAAC4M,EAAUpC,GACd,OACE,eAACzK,EAAA,EAAD,CACE8M,OAAK,EACLrM,QAAS,SAACE,GAAD,OAjDN,SAACA,EAAkCoM,GACxDpM,EAAMqM,iBACNpC,EAAW,CAACmC,IA+C0BE,CAAetM,EAAOkM,IAC1CK,UAAW,EAEXC,SAAUN,EAAI5G,WAAJ,OAAgBoF,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAapF,SALzC,UAOGtG,EAAUM,KAAI,SAACmN,EAAQ9D,GACtB,IAAI5G,EAAYmK,EAAIO,EAAE/M,IAUtB,GARa,YAAT+M,EAAE/M,KACJqC,EAAO2K,IAAOR,EAAIO,EAAE/M,KAAKiN,OAAO,aAGrB,SAATF,EAAE/M,KACJqC,EAAOA,EAAKuG,eAAe,UAGhB,aAATmE,EAAE/M,GAAmB,CACvB,IAAMkN,EAAYV,EAAIO,EAAE/M,IAClBmN,EAAI,wEAAoED,GAE9E7K,EAAO6K,EACL,qBAAK3D,IAAI,WAAWC,IAAK2D,EAAMjQ,OAAO,OAEtC,cAAC,IAAD,IAYJ,MARa,WAAT6P,EAAE/M,KACJa,QAAQC,IAAI0L,EAAG,QACfV,GACoB,OAAlBU,EAAG,OACC,kBACA,aAGD,cAAC1M,EAAA,EAAD,UAAoBuC,GAAJ4G,MAEf,WAATvC,GACC,cAAC5G,EAAA,EAAD,CAAWiH,MAAO,CAAE7H,QAAS,OAA7B,SACE,cAACd,EAAA,EAAD,CACEgC,QAAS,kBACP8K,EAAOsB,EAAG,QAAaA,EAAG,SAF9B,SAKE,cAAC,IAAD,CACEzF,MAAO,CAAEzI,MAAO,MAAO8O,SAAU,cAKxC3C,GACC,cAAC3K,EAAA,EAAD,UACE,cAAC,IAAD,CACExB,MAAM,QACN8B,QAAS,kBAhHT,SAACgK,GACzB,IAAMiD,EAAe3B,GAAUvE,QAAO,SAAC9E,EAAM4G,GAAP,OAAamB,IAAUnB,KAC7D8B,EAAQsC,GAER1B,GAAO0B,GAEPxB,IAAW,GA0G4ByB,CAAkBlD,OAHrC,UAAmBA,EAAnB,cAjDGA,MA2DZwB,IAAU,cAAC,GAAD,CAAQ7D,UA/HP,SAACxI,GACvBmM,GAAU6B,KAAKhO,GACfwL,EAAQW,IAERC,GAAOD,IAEPG,IAAW,MA0HAlB,GACC,qBAAK5D,MAAO,CAAE/H,OAAQ,UAAtB,SACE,cAACZ,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN8B,QA1IQ,SAACE,GACzBA,EAAMqM,iBACNd,IAAYD,KAqIE,SAKGA,GAAS,6CAAY,gBAYjCf,GACC,cAAC2C,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5B9D,UAAU,MACV+D,MAAOlD,EAAKnF,OACZmG,YAAaA,EACbF,KAAMA,EACNqC,aApIe,SAACrN,EAAgBsN,GACxCrC,EAAQqC,IAoIAC,oBAjIsB,SAC9BvN,GAEAmL,EAAeqC,SAASxN,EAAM8E,OAAOxE,MAAO,KAC5C2K,EAAQ,SAiILO,IAAmB,YAATpF,GACT,qBACE7I,UAAU,SACV0L,IAAI,WACJC,IAAG,wEAAmEsC,SChTzE,IACMiC,GAAU,UACVC,GACJ,IADIA,GAEJ,IAFIA,GAGJ,I,sCCaHrR,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmR,OAAQ,CACN7Q,UAAW,aAKX8Q,GAAaC,cAAW,gBAAGC,EAAH,EAAGA,QAAH,MAAkB,CAC9C5P,KAAM,CACJF,MAAO8P,EAAQC,QAAQC,KACvB,YAAa,CACXhQ,MAAO8P,EAAQC,QAAQC,OAI3BC,QAAS,MARQJ,EASf,SAACxQ,GAAD,OAAuB,cAAC6Q,GAAA,EAAD,aAAOlQ,MAAM,WAAcX,OAyCvC8Q,GAvCM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAChB9Q,EAAUjB,KAD+B,EAGrBmI,mBAASiJ,IAHY,mBAGxCnN,EAHwC,KAGjC0E,EAHiC,KAU/C,OACE,cAACuD,EAAA,EAAD,CAAac,UAAU,WAAvB,SACE,cAACgF,GAAA,EAAD,CACEvC,aAAW,SACX1F,KAAK,SACL9F,MAAOA,EACPsG,SAXe,SAAC5G,GACpB,IAAM6E,EAAK7E,EAAM8E,OAA4BxE,MAC7C0E,EAASH,GACTuJ,EAAYvJ,IAIV,SAME,eAACrH,EAAA,EAAD,CAAMC,WAAS,EAACF,UAAWD,EAAQqQ,OAAnC,UACE,cAACnQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC2Q,GAAA,EAAD,CACEhO,MAAOmN,GACPc,QAAS,cAACX,GAAD,IACT3N,MAAM,kJAGV,cAACzC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC2Q,GAAA,EAAD,CACEhO,MDjEa,aCkEbiO,QAAS,cAACX,GAAD,IACT3N,MAAM,gH,mEC9Cd5D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+I,OAAO,cACL/G,OAAQ,YACRK,SAAU,WACV2P,aAAcjS,EAAMkS,MAAMD,aAC1BE,gBAAiBC,aAAMpS,EAAMuR,QAAQc,OAAOC,MAAO,KACnD,UAAW,CACTH,gBAAiBC,aAAMpS,EAAMuR,QAAQc,OAAOC,MAAO,MAErDC,WAAY,EACZ3Q,MAAO,QACN5B,EAAMwS,YAAYC,GAAG,MAAQ,CAC5BF,WAAYvS,EAAM8B,QAAQ,GAC1BF,MAAO,SAGX8Q,WAAY,CACVrQ,QAASrC,EAAM8B,QAAQ,EAAG,GAC1BzB,OAAQ,OACRiC,SAAU,WACVqQ,cAAe,OACfxS,QAAS,OACTC,WAAY,SACZE,eAAgB,UAElBsS,UAAW,CACTnR,MAAO,WAEToR,WAAW,cACTxQ,QAASrC,EAAM8B,QAAQ,EAAG,EAAG,EAAG,GAEhCgR,YAAY,cAAD,OAAgB9S,EAAM8B,QAAQ,GAA9B,OACXiR,WAAY/S,EAAMgT,YAAYC,OAAO,SACrCrR,MAAO,QACN5B,EAAMwS,YAAYC,GAAG,MAAQ,CAC5B7Q,MAAO,OACP,UAAW,CACTA,MAAO,UAIbsR,KAAM,CACJ3S,UAAW,aA2FF4S,GAtFK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,cACvCvS,EAAUjB,KADwD,EAGhDmI,mBAAS,IAHuC,mBAGjEsL,EAHiE,KAG3DC,EAH2D,OAMxBvL,mBAC9C,IAAIwL,MAPkE,mBAMjEC,EANiE,KAM/CC,EAN+C,OAS5B1L,mBAAsB,IAAIwL,MATE,mBASjEG,EATiE,KASjDC,EATiD,KA+BlEC,EAAa,aAEnB,OACE,cAAC,KAAD,CAAyBC,MAAOC,KAAhC,SACE,eAAC/S,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,aAA3C,UACE,eAACW,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGJ,UAAWD,EAAQmS,KAArC,SACE,cAACe,GAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACd/D,OAAQ0D,EACR3R,OAAO,SACPgB,GAAG,OACHO,MAAM,qBACNK,MAAO2P,EACPrJ,SApCiB,SAAC6I,GAC5BS,EAAoBT,GACpBE,EAAYF,QAqCN,cAACjS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGJ,UAAWD,EAAQmS,KAArC,SACE,cAACe,GAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACdhS,OAAO,SACPgB,GAAG,qBACHO,MAAM,qBACN0M,OAAQ0D,EACR/P,MAAO6P,EACPvJ,SA5Ce,SAAC6I,GAC1BW,EAAkBX,GAClBG,EAAUH,WA8CN,eAACjS,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,WAAvC,UACE,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,EAAGhB,WAAW,WAAvC,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACyJ,EAAA,EAAD,CACEzH,GAAG,uBACHkH,SAhDO,SAAChC,GACpBmL,EAAQnL,EAAEE,OAAOxE,QAgDLL,MAAM,oDAGV,cAACzC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,KAAD,SAGJ,cAACF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAU8B,QArDjC,WACnB,IAAM6Q,EAAOjE,IAAOuD,GAAkBtD,OAAO,YACvC9O,EAAK6O,IAAOyD,GAAgBxD,OAAO,YAGzCkD,EADe,CAAEc,OAAM9S,KAAIiS,UAiDnB,mEACY,kB,oBChJX1L,GAAqB,GACrBwM,GAAkBtM,wBAAcF,ICG9B,SAASyM,GAAT,GAA4C,sBAEvD5L,qBAAW2L,IADLE,EADgD,EAChDA,OAAQC,EADwC,EACxCA,eAAgBC,EADwB,EACxBA,gBAShC,OACE,eAACzI,EAAA,EAAD,CAAa0I,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,CAAY3T,UAAU,SAASmC,GAAG,2BAAlC,oEAGCoR,EAAO/L,OAAS,GACf,cAACyD,EAAA,EAAD,CACE5B,SAbmB,SAAChC,GAC1B,IAAI6D,EAAM7D,EAAEE,OAAOxE,MACbkM,EAAWsE,EAAOK,MAAK,SAACpP,GAAD,OAAUA,EAAKuB,OAASmF,KACrDuI,EAAgBxE,IAWVpG,KAAK,UACL9F,MAAOyQ,EAAezN,KAHxB,SAKGwN,EAAOxR,KAAI,SAACuF,EAAQ8D,GAAT,OACV,cAACC,EAAA,EAAD,CAAUtI,MAAOuE,EAAEvB,KAAnB,SAA0BuB,EAAEuM,kB,yBClBlC/U,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXU,KAAK,CACHC,eAAgB,aAkBPkU,GAbwC,SAAChU,GAEvD,IAAMC,EAAUjB,KAEhB,OACG,cAAC,IAAD,CAAMkB,UAAWD,EAAQJ,KAAMW,GAAG,KAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUsT,UAAW,cAAC,KAAD,IAAvD,qBCPAjV,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJqT,SAAU,GAEZnT,MAAO,CACLQ,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,SACXkB,MAAOzB,EAAMuR,QAAQgC,KAAK0B,WAE5BlT,MAAO,CACLK,SAAU,OACV8S,UAAWlV,EAAM8B,QAAQ,IAE3BqT,cAAe,CACb9S,QAASrC,EAAM8B,QAAQ,GACvBG,OAAQ,oBACRgQ,aAAc,OAEhBzF,MAAO,CACLnK,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,UAEbI,KAAM,CACJC,eAAgB,aAKTwU,GAAS,SAAC,GAAkB,IAAD,IAAfrP,EAAe,EAAfA,IACjBsP,EAAc,CAClBxP,QAAS,EACT+B,YAAa,KACbD,QAAS,EACT4B,MAAO,KACPC,IAAK,KACLC,SAAU,KACVC,GAAI,KACJC,OAAQ,KACR3D,IAAKD,GAV+B,EAaH2C,qBAAW2L,IAAtCG,EAb8B,EAa9BA,eAAgBD,EAbc,EAadA,OAClBxT,EAAUjB,KAdsB,EAeZmI,mBAASiJ,IAfG,mBAe/BnN,EAf+B,KAexB0E,EAfwB,OAgBHR,mBAAS,IAhBN,mBAgB/BqN,EAhB+B,KAgBjBC,EAhBiB,OAiBVtN,mBAAS,IAjBC,mBAiB/BuN,EAjB+B,KAiBvBC,EAjBuB,OAkBZxN,mBAASoN,GAlBG,mBAkB/BK,EAlB+B,KAkBxBC,EAlBwB,OAoBN1N,mBAAsB,MApBhB,mBAoB/B2N,EApB+B,KAoBrBC,EApBqB,OAqBV5N,mBAAsB,MArBZ,mBAqB/B6N,EArB+B,KAqBvBC,EArBuB,KAuBhCC,EAASC,OAAO7R,KAAKoR,GAAQzS,KAAI,SAAC0B,GACtC,OAAO+Q,EAAO/Q,GAAK,MASfyR,EAAa,SAAC1Q,GAAe,IACzBZ,EAAiBY,EAAK,GAAtBZ,aACR2Q,EAAWC,EAAO5Q,KA+BduR,EAAS,uCAAG,WAAO3Q,GAAP,eAAAL,EAAA,sEACUO,GAAWF,GADrB,OACVgQ,EADU,OAEhBC,EAAUD,GAFM,2CAAH,sDAkBf,OAbAlM,qBAAU,WACJvD,GAAyB,IAAlBwO,EAAO/L,QAChB2N,EAAU,2BAAKT,GAAN,IAAa1P,IAAKD,KAEzByO,EAAepO,WACjB+P,EAAU,2BACLT,GADI,IAEP1P,IAAKD,EACLqQ,WAAY5B,EAAepO,eAG9B,CAACL,EAAK2P,EAAOlB,EAAgBD,IAG9B,eAACtT,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,UACE,cAAC,GAAD,IAEA,cAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACM,EAAA,EAAD,CAAYV,UAAWD,EAAQyL,MAA/B,yIAEF,eAACvL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,SACE,cAACW,EAAA,EAAD,CAAME,MAAI,EAAV,SAAYoT,EAAO/L,OAAS,GAAK,cAAC8L,GAAD,QAEnC,eAACrT,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,UACE,cAACW,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CAAc0Q,YAtEJ,SAAC9N,GACnBA,IAAUmN,IAAWyE,EAASN,GAC9B5M,EAAS1E,GACTwR,EAAW,SAqEL,cAACtU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIiV,GAAI,EAAvB,SACGtS,IAAUmN,IACT,cAAC,GAAD,CACEoC,cAhEQ,SAAC9N,GAAU,IACvB+N,EAAmB/N,EAAnB+N,KAAmB/N,EAAb4O,KAAa5O,EAAPlE,GAEpBqU,EAAS,2BAAKD,GAAN,IAAa9N,YAAa2L,EAAMhK,MAAOqM,EAAUpM,IAAKsM,MA8DlD1C,YAAayC,EACbxC,UAAW0C,YAMrB,cAAC9U,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,EAAGgV,GAAI,GAAIrV,UAAWD,EAAQgB,MAA7C,SACE,qBAAKf,UAAWD,EAAQoU,cAAxB,SACE,cAAC1H,GAAD,CACE5D,KAAK,SACL6D,WAAYwI,EACZvI,KAAM6H,GAAUQ,EAChBvT,UAxEoB,CAC5B,CAAEU,GAAI,UAAWmT,SAAS,EAAO5S,MAAO,gEACxC,CAAEP,GAAI,UAAWmT,SAAS,EAAO5S,MAAO,mCAExC,CAAEP,GAAI,WAAYmT,SAAS,EAAO5S,MAAO,qDAsEjCyK,YAAamH,EAAa,GAC1BjH,OAAQxH,SAKd,cAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,eAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAIgV,GAAI,GAAIrV,UAAWD,EAAQgB,MAA9C,UACE,cAACd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACM,EAAA,EAAD,CAAYV,UAAWD,EAAQyL,MAA/B,8HAED,UAAA8I,EAAa,UAAb,eAAiBiB,aAChB,kGACejB,EAAa,GAAGiB,WAD/B,2BAMD,UAAAjB,EAAa,UAAb,eAAiBkB,UAChB,8GAAqBlB,EAAa,GAAGkB,WAGvC,cAAC/I,GAAD,CACE5D,KAAK,UACL6D,WAAYwI,EACZvI,KAAM2H,EACN7S,UA7FsB,CAC5B,CAAEU,GAAI,UAAWmT,SAAS,EAAO5S,MAAO,gEACxC,CAAEP,GAAI,UAAWmT,SAAS,EAAO5S,MAAO,mCACxC,CAAEP,GAAI,SAAUmT,SAAS,EAAO5S,MAAO,iHACvC,CAAEP,GAAI,MAAOmT,SAAS,EAAO5S,MAAO,8CACpC,CAAEP,GAAI,WAAYmT,SAAS,EAAO5S,MAAO,0DACzC,CAAEP,GAAI,OAAQmT,SAAS,EAAM5S,MAAO,wCACpC,CAAEP,GAAI,OAAQmT,SAAS,EAAM5S,MAAO,4BACpC,CAAEP,GAAI,UAAWmT,SAAS,EAAM5S,MAAO,iHACvC,CAAEP,GAAI,UAAWmT,SAAS,EAAM5S,MAAO,iHAEvC,CAAEP,GAAI,WAAYmT,SAAS,EAAO5S,MAAO,4BACzC,CAAEP,GAAI,cAAemT,SAAS,EAAO5S,MAAO,sFCzFjC,SAAS+S,KAAmB,IAAD,IAMpC/N,qBAAWZ,IAJb4O,EAFsC,EAEtCA,cACAC,EAHsC,EAGtCA,WACAC,EAJsC,EAItCA,wBACAC,EALsC,EAKtCA,qBALsC,EAQJ5O,mBAAS,IARL,mBAQjC6O,EARiC,KAQrBC,EARqB,OASN9O,mBAAS,MATH,mBASjC+O,EATiC,KAStBC,EATsB,OAUAhP,mBAAS,IAVT,mBAUjCiP,EAViC,KAUnBC,EAVmB,OAWAlP,mBAAS,IAXT,mBAWjCmP,EAXiC,KAWnBC,EAXmB,OAYgBpP,mBAAS,IAZzB,mBAYjCqP,EAZiC,KAYXC,EAZW,OAaNtP,mBAAuB,IAbjB,mBAajCuP,EAbiC,KAatBC,EAbsB,KAelCC,EAAmB,uCAAG,WAAOC,GAAP,mBAAAxS,EAAA,2DAClBwS,EADkB,OAEnB,KAFmB,OAWnB,KAXmB,OAoBnB,KApBmB,wCAGDjQ,GAAS,CAAEC,QAAS,GAAI9B,QAAS,EAAGG,IAAK,KAHxC,cAGhB4R,EAHgB,OAItBb,EACEa,EAAO7U,KAAI,SAAC5B,GAAD,MAAyC,CAClDgC,GAAIhC,EAAKgC,GACT0G,KAAM1I,EAAK0I,UAPO,6CAYDnC,GAAS,CAAEC,QAAS,GAAI9B,QAAS,EAAGG,IAAK,KAZxC,eAYhB6R,EAZgB,OAatBR,EACEQ,EAAO9U,KAAI,SAAC5B,GAAD,MAA2C,CACpDgF,KAAMhF,EAAKgF,KACX0D,KAAM1I,EAAK0I,UAhBO,8CAqBDnC,GAAS,CAAEC,QAAS,GAAI9B,QAAS,EAAGG,IAAK,KArBxC,eAqBhB8R,EArBgB,OAsBtBX,EACEW,EAAO/U,KAAI,SAAC5B,GAAD,MAAyC,CAClDgF,KAAMhF,EAAKgC,GACX0G,KAAM1I,EAAK4F,UAzBO,qGAAH,sDAkCnBqB,EAAeyD,uBACnB,SAACpI,GAECiT,EAAc,MACdS,EAAgB,IAChBE,EAAgB,IAChBI,EAAa,IACbb,EAAwB,IACxBW,EAAwB,IACxBN,EAAaxT,EAAM8E,OAAOxE,SAE5B,CAAC2S,IAGGqB,EAAsBlM,uBAC1B,SAACpI,GACCiT,EAAc,MACdE,EAAwBnT,EAAM8E,OAAOxE,SAEvC,CAAC6S,EAAyBF,IAGtBsB,EAA2BnM,uBAC/B,SAACpI,GACCiT,EAAc,MACda,EAAwB9T,EAAM8E,OAAOxE,SAEvC,CAAC2S,IAGGuB,EAAoBpM,uBACxB,SAACpI,EAA6ByU,GAC5BxB,EAAcwB,KAEhB,CAACxB,IAGGyB,EAAoBtM,uBACxB,SAACpI,EAA6B2U,GAC5B1B,EAAa,OAAC0B,QAAD,IAACA,IAAY,MAE5B,CAAC1B,IAGG2B,EAAiBxM,sBAAW,uCAChC,WAAO1I,GAAP,eAAAgC,EAAA,sEACmCuC,GAAS,CACxCC,QAAS,GACT9B,QAAS,EACTG,IAAK,GAEL7C,GAA0B,IAAtBmV,OAAOtB,GAAmB,GAAKsB,OAAOhB,GAC1C3N,OAAQ2O,OAAOtB,GACfpP,YAAa+O,IARjB,OACQnR,EADR,OAWEiS,EAAajS,GAXf,2CADgC,sDAchC,CAACwR,EAAWL,EAAYW,IA6B1B,OA1BAhO,qBAAU,WACRoO,EAAoB,MACnB,IAEHpO,qBAAU,WACU,MAAd0N,EAIAA,GACFU,EAAoB,IAJpBA,EAAoB,MAMrB,CAACV,IAEJ1N,qBAAU,WACJuN,GACFa,EAAoB,MAErB,CAACb,IAEJvN,qBAAU,YACJgO,GAAsC,IAAdN,IAC1BqB,EAAe,MAEhB,CAACrB,EAAWqB,EAAgBf,IAG7B,eAACrW,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAzB,UACE,cAACb,EAAA,EAAD,CAAME,MAAI,EAACoX,GAAI,EAAf,SACE,eAACvM,EAAA,EAAD,CAAa0I,WAAS,EAACxK,MAAO,CAAEsO,SAAU,KAA1C,UACE,cAAC7D,GAAA,EAAD,CAAYxR,GAAG,2BAAf,gGAGA,cAAC8I,EAAA,EAAD,CACEwM,QAAQ,2BACRtV,GAAG,qBACHY,MAAOiT,EACPtT,MAAM,MACN2G,SAAUjC,EALZ,SAOG0O,EAAW/T,KAAI,SAACiU,GAAD,OACd,cAAC3K,EAAA,EAAD,CAA6BtI,MAAOiT,EAAU7T,GAA9C,SACG6T,EAAUnN,MADEmN,EAAU7T,cAOhC6T,GACC,cAAC/V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,EAAvB,SACE,eAACvM,EAAA,EAAD,CAAa0I,WAAS,EAACxK,MAAO,CAAEsO,SAAU,KAA1C,UACE,cAAC7D,GAAA,EAAD,CAAYxR,GAAG,2BAAf,mGAGA,cAAC8I,EAAA,EAAD,CACEwM,QAAQ,mCACRtV,GAAG,6BACHY,MAAO8S,EACPnT,MAAM,2FACN2G,SAAU0N,EALZ,SAOGX,EAAarU,KACZ,SAACqU,GAAD,OACE,cAAC/K,EAAA,EAAD,CAAkCtI,MAAOqT,EAAajR,KAAtD,SACGiR,EAAavN,MADDuN,EAAajR,gBASvC0Q,GAAsC,IAAdG,GACvB,cAAC/V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,EAAvB,SACE,eAACvM,EAAA,EAAD,CAAa0I,WAAS,EAACxK,MAAO,CAAEsO,SAAU,KAA1C,UACE,cAAC7D,GAAA,EAAD,CAAYxR,GAAG,2BAAf,iIAGA,cAAC8I,EAAA,EAAD,CACEwM,QAAQ,wCACRtV,GAAG,kCACHY,MAAOuT,EACP5T,MAAM,yHACN2G,SAAU2N,EALZ,SAOGd,EAAanU,KACZ,SAACmU,GAAD,OACE,cAAC7K,EAAA,EAAD,CAAkCtI,MAAOmT,EAAa/Q,KAAtD,SACG+Q,EAAarN,MADDqN,EAAa/Q,iBAStCmR,GAAsC,IAAdN,IACxB,cAAC/V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,EAAvB,SACE,cAACtX,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,SAAvC,SACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,GAAInY,WAAW,SAAtC,SACE,cAAC6J,EAAA,EAAD,CACEC,MAAO,CAAEsO,SAAU,KACnBE,UAAQ,EACR3U,MAAK,iBAAE4S,QAAF,IAAEA,OAAF,EAAEA,EAAY5S,aAAd,QAAuB,GAC5BsG,SAAU8N,EACVQ,cAAeV,EACf7O,QAASoO,EACToB,eAAgB,SAAC5O,GAAD,MACI,kBAAXA,EAAsBA,EAASA,EAAOU,KAE/CC,YAAa,SAAC7F,GAAD,OACX,cAAC7D,EAAA,EAAD,CACEC,WAAS,EACTd,WAAW,SACXE,eAAe,gBACfgD,UAAU,MAJZ,SAME,cAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,GAAvB,SACE,eAACtX,EAAA,EAAD,CAAMC,WAAS,EAACd,WAAW,WAA3B,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACwJ,EAAA,EAAD,yBAAW8J,WAAS,GAAK5P,GAAzB,IAAiCpB,MAAM,qDAEzC,cAACzC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,KAAD,yBCrORpB,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmR,OAAQ,CACN7Q,UAAW,aAHjB,IAQM8Q,GAAaC,cAAW,gBAAGC,EAAH,EAAGA,QAAH,MAAkB,CAC9C5P,KAAM,CACJF,MAAO8P,EAAQC,QAAQC,KACvB,YAAa,CACXhQ,MAAO8P,EAAQC,QAAQC,OAI3BC,QAAS,MARQJ,EASf,SAACxQ,GAAD,OAAuB,cAAC6Q,GAAA,EAAD,aAAOlQ,MAAM,WAAcX,OAuFvC8Q,GArFM,SAAC,GAA2B,IAAzBiH,EAAwB,EAAxBA,WAAwB,EAS1CnQ,qBAAWZ,IAPba,EAF4C,EAE5CA,aACAmQ,EAH4C,EAG5CA,cAEAhQ,GAL4C,EAI5C4N,cAJ4C,EAK5C5N,YACAD,EAN4C,EAM5CA,QACAwC,EAP4C,EAO5CA,WAP4C,EAQ5CsL,WAEmBhO,EAAanD,KAA1Ba,SA0BR,OACE,cAAC2F,EAAA,EAAD,CAAac,UAAU,WAAW4H,WAAS,EAA3C,SACE,eAACzT,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,SAAvC,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC2Q,GAAA,EAAD,CACEvC,aAAW,SACXI,KAAG,EACH9F,KAAK,SACL9F,MAAO+E,EACPuB,SAjCe,SAAC5G,GACxBoF,EAAQsD,iBACR,IAAM7D,EAAK7E,EAAM8E,OAA4BxE,MAE7C+U,EAAcxQ,GACd+C,EAAW1C,EAAanD,KAAKuD,UAuBvB,SAOE,eAAC9H,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,WAAvC,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC4Q,GAAA,EAAD,CACEhO,MAAOoN,GACPa,QAAS,cAAC,GAAD,IACTtO,MAAM,iCACN6I,SAAUsM,MAId,cAAC5X,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC4Q,GAAA,EAAD,CACEhO,MAAOoN,GACP5E,SAAUsM,EACV7G,QAAS,cAAC,GAAD,IACTtO,MAAM,qCAIV,cAACzC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC4Q,GAAA,EAAD,CACEhO,MAAOoN,GACP5E,SAAUsM,EACV7G,QAAS,cAAC,GAAD,IACTtO,MAAM,4CAMhB,cAACzC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,GAAvB,SACGzP,IAAeqI,IAAsB,cAACsF,GAAD,Y,kDC7G1CsC,GAAkBC,aAAOC,KAAPD,EAAe,gBAAGhZ,EAAH,EAAGA,MAAH,MAAgB,CACrD,2BAA4B,CAC1BqC,QAASrC,EAAM8B,QAAQ,IAEzB,2BAA4B,CAC1BO,QAASrC,EAAM8B,QAAQ,QAUZ,SAASoX,GAAYpY,GAAQ,IAClCsJ,EAAkCtJ,EAAlCsJ,QAASiE,EAAyBvN,EAAzBuN,OAAQnF,EAAiBpI,EAAjBoI,KAAMiQ,EAAWrY,EAAXqY,OAa/B,OACE,8BACE,eAACJ,GAAD,CACErE,WAAW,EACXtK,QAdc,WAClBgP,OAAOC,SAASC,SAEhBlP,GAAQ,IAYJkF,kBAAgB,0BAChBpG,KAAMA,EAJR,UAME,cAACqQ,GAAA,EAAD,CACEpW,GAAG,0BACH+G,MAAO,CAAE7H,QAAS,aAFpB,+GAMA,cAACmX,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,eAAC/X,EAAA,EAAD,CAAYgY,cAAY,EAAxB,0EAAqCP,OAEvC,eAACQ,GAAA,EAAD,CAAezP,MAAO,CAAE5J,eAAgB,iBAAxC,UACE,cAACiB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNmY,WAAS,EACTrW,QA1BY,WACpB6V,OAAOC,SAASC,UAqBV,8DAQA,cAAC/X,EAAA,EAAD,CAAQgC,QAAS8K,EAAjB,SACE,cAAC,IAAD,CAAkBnE,MAAO,CAAEzI,MAAO,MAAO8O,SAAU,oBClD/D,IAAMzQ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJqT,SAAU,GAEZnT,MAAO,CACLQ,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,SACXkB,MAAOzB,EAAMuR,QAAQgC,KAAK0B,WAE5BlT,MAAO,CACLK,SAAU,OACV8S,UAAWlV,EAAM8B,QAAQ,IAE3B0K,MAAO,CACLnK,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,eAKXsH,GAAqB,CACzBrC,KAAM,CACJwD,OAAQ,KACRD,QAAS,IACT2B,IAAK,GACLY,SAAU,GACV7E,KAAM,GACND,KAAM,GACN+E,SAAU,GACVhF,UAAW,GACXF,SAAU,GACVwT,QAAS,KAIAC,GAAW,WACRC,cAAd,IAD4B,EAG1BrR,qBAAW2L,IADLG,EAFoB,EAEpBA,eAAgBD,EAFI,EAEJA,OAAQE,EAFJ,EAEIA,gBAFJ,EAKJxM,mBAAS,IALL,mBAKrB0F,EALqB,KAKfqM,EALe,OAMQ/R,mBAAS,KANjB,mBAMrBa,EANqB,KAMTgQ,EANS,OAQY7Q,mBAASJ,IARrB,mBAQrBc,EARqB,KAQPsR,EARO,KAStB/L,EAAUrC,uBAAY,SAAC8B,GAC3B3J,QAAQC,IAAI,YAAa0J,GACzBqM,EAAQrM,KACP,IAZyB,EAcU1F,mBAAS,IAdnB,mBAcrBiS,EAdqB,KAcRC,EAdQ,OAeAlS,oBAAS,GAfT,mBAerBmS,EAfqB,KAebC,EAfa,OAgBApS,mBAAS,MAhBT,mBAgBrBkR,EAhBqB,KAgBbmB,EAhBa,OAiBErS,mBAAS,MAjBX,mBAiBrBsS,EAjBqB,KAiBZC,EAjBY,OAkBQvS,mBAAS,MAlBjB,mBAkBrB0O,EAlBqB,KAkBT8D,EAlBS,OAmB4BxS,mBAAS,MAnBrC,mBAmBrB4O,EAnBqB,KAmBCD,EAnBD,KAyB5BtN,qBAAU,WACJiL,EAAO/L,OAAS,GAAGiM,EAAgB,MACtC,IAEH,IAAMxL,EAAe4C,uBACnB,SAAC6O,GACCT,EAAgB,2BACXtR,GADU,IAEbnD,KAAK,2BACAmD,EAAanD,MADd,IAEFwD,OAAQ0R,EAAchQ,IACtB3B,QAAS2R,EAAcC,OACvBjQ,IAAKgQ,EAAchQ,IACnBY,SAAUoP,EAAc7Q,KACxBvD,KAAMoU,EAAcpU,KACpBE,KAAMkU,EAAcE,KACpBnU,KAAM,IACN8E,SAAUmP,EAAcnP,SACxBsO,QAASa,EAAcE,YAI7B,CAACjS,IAGGyC,EAAcS,uBAClB,SAACtF,GACC0T,EAAgB,2BACXtR,GADU,IAEbnD,KAAK,2BACAmD,EAAanD,MADd,IAEFe,UAAWA,SAIjB,CAACoC,IAGGwC,EAAYU,uBAChB,SAAC6O,GACC,IAAMG,GACJC,WAAWJ,GAAiBI,WAAWnS,EAAanD,KAAKqU,UACzDkB,QAAQ,GAEJC,EAAS,IAAI1C,OAAOuC,GACpBI,EAAMD,EAAOjP,eAAe,SAC5BmP,EAAeF,EAAOjP,eAAe,SAC3CkO,EAAgB,2BACXtR,GADU,IAEbnD,KAAK,2BACAmD,EAAanD,MADd,IAEFgB,KAAMyU,EACNE,aAAcD,EACdzU,KAAMiU,SAIZ,CAAC/R,IAOGE,GAAU,CACdI,eACAkD,eANqBN,uBAAY,WACjCoO,EAAgBpS,MACf,KAOG9G,GAAUjB,KAaV4W,GAAgB7K,uBAAY,SAACK,GACjCuO,EAAcvO,KACb,IA0DGkP,GAAY,CAChBzS,eACAE,WACAC,aACA6N,aACA/N,uBAxE6B,SAACsD,GAC9B+N,EAAgB,2BACXtR,GADU,IAEbnD,KAAK,2BAAMmD,EAAanD,MAApB,IAA0BwD,OAAQkD,QAsExCf,YACAC,cACA0N,gBACApC,iBACArL,WAlEiB,SAACa,GAClB+N,EAAgB,2BACXtR,GADU,IAEbnD,KAAK,2BAAMmD,EAAanD,MAApB,IAA0BuD,QAASmD,QAgEzC0K,0BACAC,wBAKF,OAFA7S,QAAQC,IAAI,YAAamX,IAGvB,eAACtT,GAAgBuT,SAAjB,CAA0BtX,MAAOqX,GAAjC,UACE,eAACna,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,UACE,cAAC,GAAD,IACA,cAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACM,EAAA,EAAD,CAAYV,UAAWD,GAAQyL,MAA/B,+FAEF,cAACvL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAzB,SACE,cAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImX,GAAI,GAAvB,SACE,cAAC,GAAD,CAAcM,WAAYlL,EAAKnF,OAAS,UAI9C,cAACvH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAIgV,GAAI,GAAIrV,UAAWD,GAAQgB,MAA9C,SACE,cAAC0L,GAAD,CACE5D,KAAK,UACL6D,WAAY,kBAAM,GAClBjL,UArFoB,CAC5B,CAAEU,GAAI,UAAWmT,SAAS,EAAO5S,MAAO,kCACxC,CAAEP,GAAI,MAAOmT,SAAS,EAAO5S,MAAO,8CACpC,CAAEP,GAAI,WAAYmT,SAAS,EAAO5S,MAAO,0DACzC,CAAEP,GAAI,OAAQmT,SAAS,EAAM5S,MAAO,wCACpC,CAAEP,GAAI,OAAQmT,SAAS,EAAM5S,MAAO,4BACpC,CAAEP,GAAI,WAAYmT,SAAS,EAAO5S,MAAO,4BACzC,CAAEP,GAAI,YAAamT,SAAS,EAAO5S,MAAO,4EAC1C,CAAEP,GAAI,SAAUmT,SAAS,EAAO5S,MAAO,KA8E/BkK,WAAS,EACTD,KAAM,GACNG,KAAG,EACHI,QAASA,EACTF,YAAY,EACZI,eAAgB,QAGpB,cAACnN,EAAA,EAAD,CAAMC,WAAS,EAACZ,eAAe,SAA/B,SACE,cAACW,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACyJ,EAAA,EAAD,CACEpJ,QAAQ,WACR2B,GAAG,8BACHO,MAAM,2EACN4X,WAAS,EACTC,QAAS,EACTxX,MAAOmW,EACP7P,SAvMe,SAAC5G,GAC1B0W,EAAe1W,EAAM8E,OAAOxE,QAuMlBmG,MAAO,CAAEtI,MAAO,WAItB,cAACX,EAAA,EAAD,CAAME,MAAI,EAACb,eAAe,SAA1B,SACE,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,SACGqN,EAAKnF,OAAS,GACb,qCACE,cAACvH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAId,eAAe,SAAlC,SACE,qBAAK4J,MAAO,CAAE3J,UAAW,UAAzB,SACGgU,EAAO/L,OAAS,GAAK,cAAC8L,GAAD,QAG1B,eAACrT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAId,eAAe,SAAlC,UACG0D,QAAQC,IAAI,iBAAkBsQ,GAC9BC,GACC,qBAAKtK,MAAO,CAAE3J,UAAW,UAAzB,SACE,cAACgB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN8B,QA3GC,WAMrB,IAAMiY,EAAiB7N,EAAK5K,KAAI,SAAC0Y,GAC/B,MAAO,CACLC,QAAS,GACT/D,QAAS7O,EACT3C,KAAMqO,EAAerO,KACrBC,UAC+B,IAA7BoO,EAAepO,UAAkB,KAAOoO,EAAepO,UACzDC,SAAUsQ,GAAcA,EAAWgF,YACnCrV,KAAMmV,EAAUnV,KAChBC,UAAWkV,EAAUlV,UACrBC,KAAMiV,EAAUN,aAChB1U,KAAMgV,EAAUhV,KAChB+P,QAAS0D,EACT0B,WAAY/E,EACZ8E,YAAahF,GAAcA,EAAWgF,iBf9GvC,WAAP,iCekHIE,CAAS,GAAD,OAAI3X,EAAJ,oBAA8BsX,GAAWM,MAAK,SAACtW,GACpB,OAA7BA,EAAKF,SAASyW,aAChB1B,GAAU,GACVC,EAAU9U,EAAKA,KAAKwW,QACpBxB,EAAWhV,EAAKA,KAAKuD,UAEvB/E,QAAQC,IAAIuB,OA0EI,gJAehB,cAAC0T,GAAD,CACEhQ,KAAMkR,EACNjB,OAAQoB,EACRnQ,QAAS,kBAAMiQ,GAAWD,IAC1B/L,OAjIiB,WACrBxH,GAAY0T,EAASpB,U,6BC5KnBnZ,GAAQic,aAAY,CACxB1K,QAAS,CACPC,QAAS,CAEPC,KAAM,WAERwD,UAAW,CAETxD,KAAM,WAERyK,MAAO,CAELzK,KAAM,cAuDG0K,OAlDf,WAAgB,IAAD,EACSlU,mBAAS,MADlB,mBACNlC,EADM,KACDqW,EADC,OAEenU,mBAAS,IAFxB,mBAENsM,EAFM,KAEE8H,EAFF,OAG6BpU,mBAAS,IAHtC,mBAGNuM,EAHM,KAGUC,EAHV,KAqBb,OAdAnL,qBAAU,WACRtF,QAAQC,IAAI,QACZ,IAAMH,EAAgBF,SAASC,eAAe,WAC1CC,GACFgC,GAAYhC,EAASC,OAAO+X,MAAK,SAACtW,GAChC6W,EAAU7W,GACW,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMgD,SACRiM,EAAgBjP,EAAK,IAEvB4W,EAAOtY,EAASC,YAGnB,CAACgC,IAGF,cAACuW,GAAA,EAAD,CAAetc,MAAOA,GAAtB,SACE,cAACqU,GAAgBgH,SAAjB,CACEtX,MAAO,CAAEwQ,SAAQ8H,YAAW7H,iBAAgBC,mBAD9C,SAIE,qBAAKzT,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOub,OAAK,EAACjM,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOiM,OAAK,EAACjM,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,CAAQvK,IAAKA,MAEf,cAAC,IAAD,CAAOuK,KAAK,OAAZ,SACE,cAAC,GAAD,kBCtDDkM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFtZ,SAASC,eAAe,SAM1B2Y,O","file":"static/js/main.e020f810.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface Props {}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dashboard: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"75vh\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n    },\n    button:{\n      minWidth:\"250px\",\n      marginBottom:\"20px\"\n\n    },\n    link:{\n      textDecoration: \"none\",\n    }\n  })\n);\n\nexport const Dashboard = (props: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.dashboard}>\n      <Grid container >\n        <Grid item xs={12} lg={6} >\n          <Link className={classes.link} to=\"/orders\">\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n              <Typography>ΑΝΑΖΗΤΗΣΗ ΠΑΡΑΓΓΕΛΙΑΣ</Typography>\n            </Button>\n          </Link>\n        </Grid>\n        <Grid item  xs={12} lg={6}>\n          <Link className={classes.link} to=\"/new\">\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n              <Typography>ΝΕΑ ΠΑΡΑΓΓΕΛΙΑ</Typography>\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n    createStyles,\n    makeStyles,\n    Theme,\n  } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {HeadCell,Data} from '../../types'\n\ntype Order = \"asc\" | \"desc\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  })\n);\n\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property\n  ) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n  headCells: HeadCell[]\n}\n\nexport default function EnhancedTableHead(props: EnhancedTableProps) {\n  const {headCells, classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler =\n    (property) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\n","const url: any = document.getElementById(\"apiUrl\");\n//Property 'value' does not exist on type 'HTMLElement'.  TS2339\n\nconst afmValue = (document.getElementById(\"userAfm\") as HTMLInputElement)\n  ?.value;\nconsole.log(\"amValue\", afmValue);\nexport const domain =\n  afmValue === \"777777777\" ? \"http://apipda.sertorius.gr:19581\" : url?.value;\n","import { domain } from \"../config\";\nconst groupBy = (keys: any) => (array: any) =>\n  array.reduce((objectsByKeyValue: any, obj: any) => {\n    const value = keys.map((key: any) => obj[key]).join(\"-\");\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat({\n      ...obj,\n      generatedKey: value,\n    });\n\n    return objectsByKeyValue;\n  }, {});\n\nconst constructApi = (url, params) => {\n  const queryString = encodeURIComponent(JSON.stringify(params));\n  return url + queryString;\n};\n\nexport async function getData(url = \"\", params: any = {}, short = false) {\n  const response = await fetch(constructApi(url, params));\n  const data = await response.json(); // parses JSON response into native JavaScript objects\n  const groupFincodeStatus = groupBy([\n    \"trndate\",\n    \"fincode\",\n    \"status\",\n    \"comments\",\n  ]);\n  return short ? groupFincodeStatus(data) : data;\n}\n\n// returs client orders\nexport const fechOrders = async (data) => {\n  const result = await getData(\n    `${domain}/erpapi/getorders/obj?pars=`,\n    data,\n    true\n  );\n  return result;\n};\n\nexport const fechGroups = async () => {\n  const data = {\n    Company: 1,\n  };\n\n  const result = await getData(`${domain}/erpapi/getgroups?pars=`, data);\n  return await result;\n};\n\n//GET /erpapi/getbranches/obj\n\nexport const getbranches = async (afm: string) => {\n  const data = {\n    Company: 1,\n    AFM: afm,\n  };\n\n  const result = await getData(`${domain}/erpapi/getbranches/obj?pars=`, data);\n  console.log(\"getbranches\", result);\n  return result;\n};\n//put order\nconst defaults = [\n  {\n    Company: 1,\n    bOption: 0,\n    trdr: 3975,\n    trdbranch: 125,\n    comments: \"test1\",\n    mtrl: 10069,\n    commentS1: \"test1\",\n    qtY1: 0,\n    qtY2: 0,\n  },\n  {\n    Company: 1,\n    bOption: 0,\n    trdr: 3975,\n    trdbranch: 125,\n    comments: \"test2\",\n    mtrl: 10069,\n    commentS1: \"test2\",\n    qtY1: 0,\n    qtY2: 0,\n  },\n  {\n    Company: 1,\n    bOption: 0,\n    trdr: 3975,\n    trdbranch: 125,\n    comments: \"test3\",\n    mtrl: 10069,\n    commentS1: \"test13\",\n    qtY1: 0,\n    qtY2: 0,\n  },\n];\n\n// Example POST method implementation:\nexport async function postData(url = \"\", data = defaults) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n\n  return { response, data: await response.json() }; // parses JSON response into native JavaScript objects\n}\n\n// /erpapi/putorder\n//${domain}/erpapi/getorders/pdf?pars=%7B%22Company%22%3A1%2C%22Id%22%3A%22179631%22%7D//\n\nexport async function downloadPdf(payload: any, code) {\n  try {\n    const url = `${domain}/erpapi/getorders/pdf?pars=`;\n\n    const response = await fetch(constructApi(url, { Company: 1, id: code }), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const pdf = await response.json();\n    const linkSource = `data:application/pdf;base64,${pdf}`;\n    const downloadLink = document.createElement(\"a\");\n    const fileName = `${payload}.pdf`;\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  } catch (err: any) {\n    throw new Error(err?.response?.data?.code || err.message);\n  }\n}\n\n//curl -X GET --header 'Accept: application/json' 'https://alfaeorders.com:19580/erpapi/getitems/obj?pars=%7BCompany%3A%201%2C%20SearchValue%3A%20%222500%22%2C%20BOption%3A%201%2C%20AFM%3A%22%CE%A3%CE%A5%CE%A3%CE%A4%CE%97%CE%9C%CE%91%CE%A4%CE%91%20ALFA%22%7D'\n\n// - Returns a list of Items matching the given BOption,AFM(as ΟΜΑΔΑ),SearchValue ---\n// Required fields (Company:, BOption:, AFM:\"\")\n// Here is a sample {Company: 1, SearchValue: \"22500\", BOption: 1, AFM:\"ΣΥΣΤΗΜΑΤΑ ALFA\"}.\n// BOption: 1 = Άβαφο(Default), 2 = Λευκό, 3 = Χρώμα\n// AFM(as ΟΜΑΔΑ(πχ Προφίλ, Γωνιά κλπ)\n// SearchValue: > 4 ψηφίων...\n// (Post params) and get Items to fill DropDownList ΚΩΔΙΚΟΣ\n// Other sample for POUDRES\n// BOption: 30 -> Get with {BOption: 30, Company: 1, AFM:\"\"} Return {\"ID\": f.MTRMANFCTR, \"Code\": f.MANFCTRCODE}\n// get list of MTRMANFCTR (WHERE ITEM.MTRGROUP = 11009 GROUPBY ITEM.MTRMANFCTR)\n// BOption: 40 -> Get with {BOption: 40, Company: 1, AFM:\"\"} Return {\"ID\": f.UTBL04, \"NAME\": f.f.U4NAME}\n// get list of UTBL04 (WHERE ITEM.MTRGROUP = 11009 GROUPBY mx.UTBL04)\n// BOption: 50 -> Get with {BOption: 50, Company: 1, SearchValue: \"tes*\", id: 16, LastId:1, AFM:\"\"} id = MTRMANFCTR(ID), LastId = mx.UTBL04 result from previous get -- Return {\"ccCPOUDRAID\": f.MTRL, \"SKU\": f.SKU}\n// get list of POUDRES ITEEXTRA.VARCHAR05 WHERE ITEM.MTRGROUP = 11009 AND ITEM.MTRMANFCTR\n// BOption: 60 -> Get with {BOption: 60, Company: 1, AFM:\"\"} Return {\"CCCBAFEIOID\": f.TRDR, \"NAME\": f.NAME}\n// ΠΡΟΜΗΘΕΥΤΕΣ (ΕΞΩΤΕΡΙΚΑ ΒΑΦΕΙΑ) : επιλέξτε TRDR,NAME WHERE SUPPLIER.TRDPGROUP = 1\n// Fields \"ccCPOUDRAID\": , \"CCCBAFEIOID\": must return for each line with post put /erpapi/putorder\n\nexport interface IGetItems {\n  Company: number;\n  BOption: number;\n  AFM?: string | null;\n  SearchValue?: string;\n  id?: any;\n  LastId?: any;\n  trdr?: any;\n  trdbranch?: any;\n  comments?: any;\n  mtrl?: any;\n  commentS1?: any;\n  qtY1?: any;\n  qtY2?: any;\n}\n\nexport const getItems = async (payload: IGetItems) => {\n  const { Company, BOption, AFM, SearchValue = \"  \" } = payload;\n  const params = {\n    Company,\n    BOption,\n    AFM,\n    SearchValue,\n    ...payload,\n  };\n  const url = `${domain}/erpapi/getitems/obj?pars=`;\n  const response = await fetch(constructApi(url, params));\n  const data = await response.json();\n  return data;\n};\n","import {createContext} from \"react\";\nexport interface IAppProps {}\nexport const defaultValues: any = {};\nexport const NewOrderContext = createContext(defaultValues);\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport { domain } from \"../config\";\nimport { Fragment, useContext, useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getData } from \"../api/fetch\";\nimport { NewOrderContext } from \"../pages/NewOrder/NewOrderContext\";\n\ninterface CountryType {\n  name: string;\n  data: any;\n}\n\nexport default function Asynchronous() {\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => {\n    const v = e.target.value;\n    if (v.length > 2) {\n      setLoading(true);\n      setValue(v);\n    }\n  };\n  const { selectedInfo, handleSetSelectedValue, actions, orderColor } =\n    useContext(NewOrderContext);\n  const { fincode, search } = selectedInfo.data;\n\n  const { getSelection } = actions;\n\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<CountryType[]>([]);\n  const [value, setValue] = useState(\"\");\n  // const [selectedValue, setSelectedValue] = useState(searchValue);\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      if (value) {\n        const data = {\n          Company: 1,\n          SearchValue: value,\n          BOption: orderColor,\n          DFrom: null,\n          DTo: null,\n          TakeRecs: null,\n          Id: null,\n          LastId: null,\n          AFM: fincode,\n        };\n\n        const response: any = await getData(\n          `${domain}/erpapi/getitems/obj?pars=`,\n          data\n        );\n        //await sleep(1e3); // For demo purposes.\n\n        const list: any = response.map((item: any) => {\n          return { name: item.name, value: item.code, data: item };\n        });\n\n        if (active) {\n          setOptions(list ? list : []);\n          setLoading(false);\n        }\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [value]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  // useEffect(() => {\n  //   if(!search){\n  //   setSelectedValue(search)\n  //   }\n  // },[search]);\n\n  const filterOptions = createFilterOptions({\n    stringify: (option: any) => option.value,\n  });\n  return (\n    <>\n      <Autocomplete\n        filterOptions={filterOptions}\n        id=\"asynchronous-demo\"\n        style={{ width: 300 }}\n        open={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        onChange={(e, v) => {\n          if (v) {\n            const selectedData = options.filter(\n              (d: any) => d.value === v.value\n            );\n            selectedData && getSelection(v.data);\n          } else {\n            handleSetSelectedValue(\"\");\n          }\n        }}\n        getOptionSelected={(option, value) => option.code === value.code}\n        renderOption={(option) =>\n          `${option?.data?.sku || option.data.code} -- ${option.name}`\n        }\n        options={options}\n        loading={loading}\n        value={search}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            onChange={handleChange}\n            InputProps={{\n              ...params.InputProps,\n              endAdornment: (\n                <Fragment>\n                  {loading ? (\n                    <CircularProgress color=\"inherit\" size={20} />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </Fragment>\n              ),\n            }}\n          />\n        )}\n      />\n    </>\n  );\n}\n","import { useEffect, useState, useCallback, useContext } from \"react\";\nimport {\n  TableRow,\n  Input,\n  TableCell,\n  IconButton,\n  FormControl,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport Select from \"@material-ui/core/Select\";\nimport { SaveRounded } from \"@material-ui/icons\";\n\nimport Autocomplete from \"../AutoComplete\";\n\nimport { fechGroups } from \"../../api/fetch\";\nimport { NewOrderContext } from \"../../pages/NewOrder/NewOrderContext\";\n\ninterface Props {\n  saveOrder: (values: any) => void;\n}\n\nexport const NewRow = ({ saveOrder }: Props) => {\n  const { selectedInfo, setWeight, actions, setComments, setFinCode } =\n    useContext(NewOrderContext);\n\n  const { mtrlname, qtY1, qtY2, xdocname, commentS1, search } =\n    selectedInfo.data;\n\n  const [groups, setGroups] = useState([]);\n  const [group, setGroup] = useState(selectedInfo.data.fincode);\n\n  const handleChange = (e: any) => {\n    let val = e.target.value;\n    setWeight(val);\n  };\n\n  const handleChangeComments = (e: any) => {\n    let val = e.target.value;\n    setComments(val);\n  };\n\n  const handleSelectFincode = (e: any) => {\n    let val = e.target.value;\n    actions.resetSelection();\n    setGroup(val);\n    setFinCode(val);\n  };\n\n  const getGroups = useCallback(async () => {\n    const groups: any = await fechGroups();\n    setGroups(groups);\n\n    //sets default value\n    setGroup(groups[0].name);\n    setFinCode(groups[0].name);\n  }, []);\n\n  useEffect(() => {\n    getGroups();\n  }, [getGroups]);\n\n  const handleSave = () => {\n    console.log(\"selectedInfo\", selectedInfo.data);\n    if (selectedInfo.data.qtY2 < 1) {\n      return alert(\n        \"Δεν έχει συμπληρωθεί το πεδίο – βέργες έλαχιστη ποσότητα 1\"\n      );\n    }\n    saveOrder(selectedInfo.data);\n    actions.resetSelection();\n  };\n\n  const Qty1 = qtY1.toLocaleString(\"el-GR\");\n\n  useEffect(() => {\n    if (qtY2 === \"1\") {\n      setWeight(qtY2);\n    }\n  }, [qtY2]);\n\n  return (\n    <TableRow>\n      <TableCell>\n        <FormControl>\n          {groups.length > 0 && (\n            <Select onChange={handleSelectFincode} name=\"fincode\" value={group}>\n              {groups.map((v: any, i) => (\n                <MenuItem value={v.name}>{v.name}</MenuItem>\n              ))}\n            </Select>\n          )}\n        </FormControl>\n      </TableCell>\n      <TableCell>\n        <Autocomplete />\n      </TableCell>\n      <TableCell>\n        <Input value={mtrlname} disabled title={mtrlname} />\n      </TableCell>\n      <TableCell>\n        <TextField\n          id=\"number\"\n          name=\"qtY2\"\n          value={qtY2}\n          onChange={handleChange}\n          type=\"number\"\n        />\n      </TableCell>\n      <TableCell>\n        <Input name=\"qtY1\" value={Qty1} disabled />\n      </TableCell>\n      <TableCell>\n        {xdocname ? (\n          <img\n            alt=\"xdocname\"\n            src={`https://alfa-press.gr/wp-content/themes/porto-child/erp/icons/${xdocname}`}\n            height=\"90\"\n          />\n        ) : (\n          <ImageIcon />\n        )}\n      </TableCell>\n      <TableCell>\n        <Input\n          name=\"commentS1\"\n          value={commentS1}\n          onChange={handleChangeComments}\n        />\n      </TableCell>\n      {search && (\n        <TableCell>\n          <IconButton onClick={handleSave} color=\"primary\" component=\"span\">\n            <SaveRounded />\n          </IconButton>\n        </TableCell>\n      )}\n    </TableRow>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport moment from \"moment\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\n\nimport EnhancedTableHead from \"./Head\";\nimport { NewRow } from \"./NewRow\";\n\nimport { HeadCell, Data } from \"../../types\";\nimport { AnyTxtRecord } from \"dns\";\nimport { Button } from \"@material-ui/core\";\nimport { SignalCellularConnectedNoInternet0BarTwoTone } from \"@material-ui/icons\";\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = \"asc\" | \"desc\";\n\nfunction getComparator<Key extends keyof Data>(\n  order: Order,\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      // minWidth: 750,\n      border: \"none\",\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  })\n);\n\ntype TableProps = {\n  onRowclick: (data: any) => void;\n  rows: Data[];\n  headCells: any;\n  name: string;\n  clearCell?: boolean;\n  maxCols?: number;\n  add?: boolean;\n  orderCol?: any;\n  getRows?: (data: any) => void;\n  pagination?: boolean;\n  stickyHeader?: boolean;\n  selectedRow?: any;\n  rowsPerPagenum?: number;\n  getPdf?: any;\n};\n\nexport default function DataTable(props: TableProps) {\n  const {\n    onRowclick,\n    rows,\n    headCells,\n    name,\n    clearCell = false,\n    maxCols = 100,\n    add = false,\n    orderCol = \"\",\n    pagination = true,\n    stickyHeader,\n    getRows,\n    selectedRow = null,\n    rowsPerPagenum = 25,\n    getPdf,\n  } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState<keyof Data>(orderCol);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rowsPerPagenum);\n\n  const [tableRows, setRow] = useState(rows);\n  const [addRow, setAddwRow] = useState(false);\n  // const [status, setStatus] = useState(null);\n\n  let status = null;\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  const handleAddRowClick = (event: React.MouseEvent<unknown>) => {\n    event.preventDefault();\n    setAddwRow(!addRow);\n  };\n\n  const handleSaveOrder = (order: any) => {\n    tableRows.push(order);\n    getRows(tableRows);\n\n    setRow(tableRows);\n\n    setAddwRow(false);\n  };\n  const handleRemoveOrder = (index: any) => {\n    const newtableRows = tableRows.filter((data, i) => index !== i);\n    getRows(newtableRows);\n\n    setRow(newtableRows);\n\n    setAddwRow(false);\n  };\n\n  const handleRowClick = (event: React.MouseEvent<unknown>, rowData: Data) => {\n    event.preventDefault();\n    onRowclick([rowData]);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    !add && setRow(rows);\n  }, [rows, add]);\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <form>\n        <TableContainer>\n          <Table\n            stickyHeader={stickyHeader}\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {stableSort(tableRows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: any, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleRowClick(event, row)}\n                      tabIndex={-1}\n                      key={index}\n                      selected={row.fincode === selectedRow?.fincode}\n                    >\n                      {headCells.map((r: any, i: number) => {\n                        let data: any = row[r.id];\n\n                        if (r.id === \"trndate\") {\n                          data = moment(row[r.id]).format(\"DD/MM/YY\");\n                        }\n\n                        if (r.id === \"qtY1\") {\n                          data = data.toLocaleString(\"el-GR\");\n                        }\n\n                        if (r.id === \"xdocname\") {\n                          const imagefile = row[r.id];\n                          const path = `https://alfa-press.gr/wp-content/themes/porto-child/erp/icons/${imagefile}`;\n\n                          data = imagefile ? (\n                            <img alt=\"xdocname\" src={path} height=\"90\" />\n                          ) : (\n                            <ImageIcon />\n                          );\n                        }\n\n                        if (r.id === \"status\") {\n                          console.log(row[\"series\"]);\n                          status =\n                            row[\"series\"] === 9021\n                              ? \"AVAFO_LEYKO.jpg\"\n                              : \"XRWMA.jpg\";\n                        }\n\n                        return <TableCell key={i}>{data}</TableCell>;\n                      })}\n                      {name === \"master\" && (\n                        <TableCell style={{ padding: \"0px\" }}>\n                          <Button\n                            onClick={() =>\n                              getPdf(row[\"fincode\"], row[\"findoc\"])\n                            }\n                          >\n                            <PictureAsPdfIcon\n                              style={{ color: \"red\", fontSize: \"40px\" }}\n                            />\n                          </Button>\n                        </TableCell>\n                      )}\n                      {clearCell && (\n                        <TableCell key={`${index}-cancel`}>\n                          <CancelIcon\n                            color=\"error\"\n                            onClick={() => handleRemoveOrder(index)}\n                          />\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  );\n                })}\n              {addRow && <NewRow saveOrder={handleSaveOrder} />}\n              {add && (\n                <div style={{ margin: \"20px 0\" }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleAddRowClick}\n                  >\n                    {addRow ? \"ΑΚΥΡΩΣΗ\" : \"+\"}\n                  </Button>\n                </div>\n              )}\n              {/* {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {pagination && (\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        )}\n      </form>\n      {status && name === \"details\" && (\n        <img\n          className=\"status\"\n          alt=\"xdocname\"\n          src={`https://alfa-press.gr/wp-content/themes/porto-child/erp/icons/${status}`}\n        />\n      )}\n    </div>\n  );\n}\n","export const DATE_SEARCH = \"dateSearch\";\nexport const PENDING = \"pending\";\nexport const profilColors = {\n  BLANK: \"1\",\n  WHITE: \"2\",\n  COLOR: \"3\",\n};\n\nexport const companies = {\n  ALFA: \"ALFA\",\n  ALOUSYSTEM: \"ALOUSYSTEM\",\n};\n","import React, { useState } from \"react\";\nimport {\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  withStyles,\n  Grid,\n  createStyles,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\n\nimport { PENDING, DATE_SEARCH } from \"../../../constants\";\n\ntype Props = {\n  optionValue: (value: string) => void;\n};\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    radios: {\n      textAlign: \"left\",\n    },\n  })\n);\n\nconst GreenRadio = withStyles(({ palette }) => ({\n  root: {\n    color: palette.primary.main,\n    \"&$checked\": {\n      color: palette.primary.main,\n    },\n  },\n\n  checked: {},\n}))((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst OrderOptions = ({ optionValue }: Props) => {\n  const classes = useStyles();\n\n  const [value, setValue] = useState(PENDING);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = (event.target as HTMLInputElement).value;\n    setValue(v);\n    optionValue(v);\n  };\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        aria-label=\"orders\"\n        name=\"orders\"\n        value={value}\n        onChange={handleChange}\n      >\n        <Grid container className={classes.radios}>\n          <Grid item xs={12}>\n            <FormControlLabel\n              value={PENDING}\n              control={<GreenRadio />}\n              label=\"Ανεκτέλεστες Παραγγελίες\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel\n              value={DATE_SEARCH}\n              control={<GreenRadio />}\n              label=\"Σύνθετη Αναζήτηση\"\n            />\n          </Grid>\n        </Grid>\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default OrderOptions;\n","import React, { ReactNode, useState } from \"react\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  alpha,\n  Button,\n  createStyles,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport moment from \"moment\";\n\ntype Props = {\n  getDateFrom: (date: Date | null) => void;\n  getDateTo: (date: Date | null) => void;\n  getSearchData: (data: {}) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    search: {\n      border: \"solid 1px\",\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n    date: {\n      textAlign: \"left\",\n    },\n  })\n);\n\nconst DatePickers = ({ getDateFrom, getDateTo, getSearchData }: Props) => {\n  const classes = useStyles();\n\n  const [text, setText] = useState(\"\");\n\n  // The first commit of Material-UI\n  const [selectedDateFrom, setSelectedDateFrom] = useState<Date | null>(\n    new Date()\n  );\n  const [selectedDateTo, setSelectedDateTo] = useState<Date | null>(new Date());\n  const handleDateChangeFrom = (date: Date | null) => {\n    setSelectedDateFrom(date);\n    getDateFrom(date);\n  };\n  const handleDateChangeTo = (date: Date | null) => {\n    setSelectedDateTo(date);\n    getDateTo(date);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  };\n\n  const handleSearch = () => {\n    const from = moment(selectedDateFrom).format(\"YYYYMMDD\");\n    const to = moment(selectedDateTo).format(\"YYYYMMDD\");\n\n    const search = { from, to, text };\n    getSearchData(search);\n  };\n\n  const dateFormat = \"dd-MM-yyyy\";\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container spacing={3} justifyContent=\"flex-start\">\n        <Grid container>\n          <Grid item xs={6} className={classes.date}>\n            <DatePicker\n              autoOk\n              disableToolbar\n              format={dateFormat}\n              margin=\"normal\"\n              id=\"Form\"\n              label=\"ΑΠΟ\"\n              value={selectedDateFrom}\n              onChange={handleDateChangeFrom}\n            />\n          </Grid>\n          <Grid item xs={6} className={classes.date}>\n            <DatePicker\n              autoOk\n              disableToolbar\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"ΕΩΣ\"\n              format={dateFormat}\n              value={selectedDateTo}\n              onChange={handleDateChangeTo}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid container item xs={6} alignItems=\"flex-end\">\n            <Grid item>\n              <TextField\n                id=\"input-with-icon-grid\"\n                onChange={handleChange}\n                label=\"Κωδικός...\"\n              />\n            </Grid>\n            <Grid item>\n              <SearchIcon />\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n              ΑΝΑΖΗΤΗΣΗ{\" \"}\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default DatePickers;\n","import { createContext, useState } from \"react\";\nexport interface IAppProps {}\nexport const defaultValues: any = {};\nexport const BranchesContext = createContext(defaultValues);\n","import { FormControl, Select, MenuItem, InputLabel } from \"@material-ui/core\";\nimport React, { ReactElement, useContext, useEffect } from \"react\";\nimport { BranchesContext } from \"../../../context/BranchesContext\";\n\ninterface Props {}\n\nexport default function Branches({}: Props): ReactElement {\n  const { branch, selectedBranch, setSelectBranch } =\n    useContext(BranchesContext);\n\n  const handleSelectBranch = (e: any) => {\n    let val = e.target.value;\n    const selected = branch.find((data) => data.code === val);\n    setSelectBranch(selected);\n  };\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel className=\"branch\" id=\"demo-simple-select-label\">\n        ΚΑΤΑΣΤΗΜΑ\n      </InputLabel>\n      {branch.length > 0 && (\n        <Select\n          onChange={handleSelectBranch}\n          name=\"fincode\"\n          value={selectedBranch.code}\n        >\n          {branch.map((v: any, i) => (\n            <MenuItem value={v.code}>{v.address}</MenuItem>\n          ))}\n        </Select>\n      )}\n    </FormControl>\n  );\n}\n","\nimport * as React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Button, createStyles, makeStyles,Theme } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\ninterface IAppProps {}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    link:{\n      textDecoration: \"none\",\n    }\n  })\n);\n\nconst BackToMenu: React.FunctionComponent<IAppProps> = (props) => {\n \n const classes = useStyles();\n \n return (\n    <Link className={classes.link} to=\"/#\">\n      <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\n        Menu\n      </Button>\n    </Link>\n  );\n};\n\nexport default BackToMenu;\n","import { useEffect, useState, useContext } from \"react\";\nimport DataTable from \"../../components/table/Table\";\nimport { HeadCell } from \"../../types\";\n\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { PENDING } from \"../../constants\";\nimport OrderOptions from \"./components/OrderOptions\";\nimport DatePickers from \"./components/DatePickers\";\nimport Branches from \"../NewOrder/components/Branches\";\n\nimport { BranchesContext } from \"../../context/BranchesContext\";\n\nimport { Typography } from \"@material-ui/core\";\nimport BackToMenu from \"../../components/BackToMenu\";\nimport { fechOrders, downloadPdf } from \"../../api/fetch\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n    table: {\n      overflow: \"auto\",\n      marginTop: theme.spacing(4),\n    },\n    table_wrapper: {\n      padding: theme.spacing(2),\n      border: \"1px solid #e0e0e0\",\n      borderRadius: \"5px\",\n    },\n    title: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n    },\n    link: {\n      textDecoration: \"none\",\n    },\n  })\n);\n\nexport const Orders = ({ afm }: any) => {\n  const defaultData = {\n    Company: 1,\n    SearchValue: null,\n    BOption: 3,\n    DFrom: null,\n    DTo: null,\n    TakeRecs: null,\n    Id: null,\n    LastId: null,\n    AFM: afm,\n  };\n\n  const { selectedBranch, branch } = useContext(BranchesContext);\n  const classes = useStyles();\n  const [value, setValue] = useState(PENDING);\n  const [orderDetails, setDetails] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [query, setQuery] = useState(defaultData);\n\n  const [dateFrom, setDateFrom] = useState<Date | null>(null);\n  const [dateto, setDateTo] = useState<Date | null>(null);\n\n  const master = Object.keys(orders).map((key) => {\n    return orders[key][0];\n  });\n\n  const optionValue = (value: string) => {\n    value === PENDING && setQuery(defaultData);\n    setValue(value);\n    setDetails([]);\n  };\n\n  const getDetails = (data: any) => {\n    const { generatedKey } = data[0];\n    setDetails(orders[generatedKey]);\n  };\n\n  const getSearchData = (data) => {\n    const { text, from, to } = data;\n    // post with data\n    setQuery({ ...query, SearchValue: text, DFrom: dateFrom, DTo: dateto });\n  };\n\n  const headCells: HeadCell[] = [\n    { id: \"fincode\", numeric: false, label: \"ΠΑΡΑΓΓΕΛΙΑ\" },\n    { id: \"trndate\", numeric: false, label: \"ΗΜ/ΝΙΑ\" },\n    // { id: \"status\", numeric: false, label: \"STATUS\" },\n    { id: \"download\", numeric: false, label: \"ΕΚΤΥΠΩΣΗ\" },\n  ];\n\n  const headCellsDetails: any = [\n    { id: \"fincode\", numeric: false, label: \"ΠΑΡΑΓΓΕΛΙΑ\" },\n    { id: \"trndate\", numeric: false, label: \"ΗΜ/ΝΙΑ\" },\n    { id: \"status\", numeric: false, label: \"ΣΤΑΔΙΟ ΕΠΕΞΕΡΓΑΣΙΑΣ\" },\n    { id: \"sku\", numeric: false, label: \"ΚΩΔΙΚΟΣ\" },\n    { id: \"mtrlname\", numeric: false, label: \"ΠΕΡΙΓΡΑΦΗ\" },\n    { id: \"qtY2\", numeric: true, label: \"ΒΕΡΓΕΣ\" },\n    { id: \"qtY1\", numeric: true, label: \"ΚΙΛΑ\" },\n    { id: \"qtY2COV\", numeric: true, label: \"ΒΕΡΓΕΣ ΕΚΤΕΛΕΣΜΕΝΕΣ\" },\n    { id: \"qtY2REM\", numeric: true, label: \"ΒΕΡΓΕΣ ΑΝΕΚΤΕΛΕΣΤΕΣ\" },\n    // { id: \"mtcomments\", numeric: false, label: \"ΚΩΔΙΚΟΣ\" },\n    { id: \"xdocname\", numeric: false, label: \"ΤΟΜΗ\" },\n    { id: \"mtcommentS1\", numeric: false, label: \"ΠΑΡΑΤΗΡΗΣΕΙΣ\" },\n  ];\n\n  const getOrders = async (data) => {\n    const orders: any = await fechOrders(data);\n    setOrders(orders);\n  };\n\n  useEffect(() => {\n    if (afm && branch.length === 1) {\n      getOrders({ ...query, AFM: afm });\n    }\n    if (selectedBranch.trdbranch) {\n      getOrders({\n        ...query,\n        AFM: afm,\n        TrdrBranch: selectedBranch.trdbranch,\n      });\n    }\n  }, [afm, query, selectedBranch, branch]);\n\n  return (\n    <Grid container spacing={3} justifyContent=\"center\">\n      <BackToMenu />\n\n      <Grid item xs={12}>\n        <Typography className={classes.title}>ΑΝΑΖΗΤΗΣΗ ΠΑΡΑΓΓΕΛΙΑΣ</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={3} justifyContent=\"center\">\n          <Grid item>{branch.length > 1 && <Branches />}</Grid>\n        </Grid>\n        <Grid container spacing={3} justifyContent=\"center\">\n          <Grid item>\n            <OrderOptions optionValue={optionValue} />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {value !== PENDING && (\n              <DatePickers\n                getSearchData={getSearchData}\n                getDateFrom={setDateFrom}\n                getDateTo={setDateTo}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item lg={6} sm={12} className={classes.table}>\n        <div className={classes.table_wrapper}>\n          <DataTable\n            name=\"master\"\n            onRowclick={getDetails}\n            rows={orders && master}\n            headCells={headCells}\n            // maxCols={5}\n            selectedRow={orderDetails[0]}\n            getPdf={downloadPdf}\n            // pagination={false}\n          />\n        </div>\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item lg={12} sm={12} className={classes.table}>\n        <Grid item xs={12}>\n          <Typography className={classes.title}>ΑΝΑΛΥΣΗ ΠΑΡΑΓΓΕΛΙΑΣ</Typography>\n        </Grid>\n        {orderDetails[0]?.ficomments && (\n          <span>\n            Αιτιολογία: {orderDetails[0].ficomments}\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n        )}\n\n        {orderDetails[0]?.remarks && (\n          <span>Παρατηρήσεις: {orderDetails[0].remarks}</span>\n        )}\n\n        <DataTable\n          name=\"details\"\n          onRowclick={getDetails}\n          rows={orderDetails}\n          headCells={headCellsDetails}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import { useCallback, useContext } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NewOrderContext } from \"../NewOrderContext\";\nimport { getItems, IGetItems } from \"../../../api/fetch\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\ninterface IColorData {\n  ccCPOUDRAID: number;\n  sku: string;\n}\n\nexport default function ColorSelections() {\n  const {\n    setColorValue,\n    colorValue,\n    setSelectedColorCompany,\n    selectedColorCompany,\n  } = useContext(NewOrderContext);\n\n  const [colorTypes, setColorTypes] = useState([]);\n  const [colorType, setColorType] = useState(null);\n  const [manifacturer, setManifacturer] = useState([]);\n  const [colorCompany, setColorCompany] = useState([]);\n  const [selectedManifacturer, setSelectedManifacturer] = useState(\"\");\n  const [colorData, setColorData] = useState<IColorData[]>([]);\n\n  const handleGetCollorData = async (boption: number) => {\n    switch (boption) {\n      case 30:\n        const data30 = await getItems({ BOption: 30, Company: 1, AFM: \"\" });\n        setColorTypes(\n          data30.map((item: { id: number; name: string }) => ({\n            id: item.id,\n            name: item.name,\n          }))\n        );\n        break;\n      case 60:\n        const data60 = await getItems({ BOption: 60, Company: 1, AFM: \"\" });\n        setColorCompany(\n          data60.map((item: { trdr: number; name: string }) => ({\n            trdr: item.trdr,\n            name: item.name,\n          }))\n        );\n        break;\n      case 40:\n        const data40 = await getItems({ BOption: 40, Company: 1, AFM: \"\" });\n        setManifacturer(\n          data40.map((item: { id: number; code: string }) => ({\n            trdr: item.id,\n            name: item.code,\n          }))\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      //reset all values\n      setColorValue(null);\n      setManifacturer([]);\n      setColorCompany([]);\n      setColorData([]);\n      setSelectedColorCompany(\"\");\n      setSelectedManifacturer(\"\");\n      setColorType(event.target.value as string);\n    },\n    [setColorValue]\n  );\n\n  const handleChangeCompany = useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      setColorValue(null);\n      setSelectedColorCompany(event.target.value as string);\n    },\n    [setSelectedColorCompany, setColorValue]\n  );\n\n  const handleChangeManifacturer = useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      setColorValue(null);\n      setSelectedManifacturer(event.target.value as string);\n    },\n    [setColorValue]\n  );\n\n  const handleInputChange = useCallback(\n    (event: React.SyntheticEvent, newInputValue: string) => {\n      setColorValue(newInputValue);\n    },\n    [setColorValue]\n  );\n\n  const handleChangeColor = useCallback(\n    (event: React.SyntheticEvent, newValue: IColorData | string | null) => {\n      setColorValue(newValue ?? \"\");\n    },\n    [setColorValue]\n  );\n\n  const handleGetColor = useCallback(\n    async (id: number) => {\n      const data: IColorData[] = await getItems({\n        BOption: 50,\n        Company: 1,\n        AFM: \"\",\n        //if colorType is 3, then id is 20, else id is selectedManifacturer\n        id: Number(colorType) === 3 ? 20 : Number(selectedManifacturer),\n        LastId: Number(colorType),\n        SearchValue: colorValue,\n      });\n      //[{\"ccCPOUDRAID\":15606,\"sku\":\"SE802G-MATT-1002\"}]\n      setColorData(data);\n    },\n    [colorType, colorValue, selectedManifacturer]\n  );\n\n  useEffect(() => {\n    handleGetCollorData(30);\n  }, []);\n\n  useEffect(() => {\n    if (colorType === \"3\") {\n      handleGetCollorData(50);\n      return;\n    }\n    if (colorType) {\n      handleGetCollorData(60);\n    }\n  }, [colorType]);\n\n  useEffect(() => {\n    if (selectedColorCompany) {\n      handleGetCollorData(40);\n    }\n  }, [selectedColorCompany]);\n\n  useEffect(() => {\n    if (selectedManifacturer || colorType === 3) {\n      handleGetColor(50);\n    }\n  }, [colorType, handleGetColor, selectedManifacturer]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item md={3}>\n        <FormControl fullWidth style={{ maxWidth: 300 }}>\n          <InputLabel id=\"demo-simple-select-label\">\n            Τύπος Χρώματος 30\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={colorType}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            {colorTypes.map((colorType) => (\n              <MenuItem key={colorType.id} value={colorType.id}>\n                {colorType.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      {colorType && (\n        <Grid item xs={12} md={3}>\n          <FormControl fullWidth style={{ maxWidth: 300 }}>\n            <InputLabel id=\"demo-simple-select-label\">\n              Επιλογή Βαφείου\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-company-label\"\n              id=\"demo-simple-select-company\"\n              value={selectedColorCompany}\n              label=\"Επιλογή Βαφείου 60\"\n              onChange={handleChangeCompany}\n            >\n              {colorCompany.map(\n                (colorCompany: { trdr: number; name: string }) => (\n                  <MenuItem key={colorCompany.trdr} value={colorCompany.trdr}>\n                    {colorCompany.name}\n                  </MenuItem>\n                )\n              )}\n            </Select>\n          </FormControl>\n        </Grid>\n      )}\n      {selectedColorCompany && colorType !== 3 && (\n        <Grid item xs={12} md={3}>\n          <FormControl fullWidth style={{ maxWidth: 300 }}>\n            <InputLabel id=\"demo-simple-select-label\">\n              Επιλογή Κατασκευαστή\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-manifacturer-label\"\n              id=\"demo-simple-select-manifacturer\"\n              value={selectedManifacturer}\n              label=\"Επιλογή Κατασκευαστή 40\"\n              onChange={handleChangeManifacturer}\n            >\n              {manifacturer.map(\n                (manifacturer: { trdr: number; name: string }) => (\n                  <MenuItem key={manifacturer.trdr} value={manifacturer.trdr}>\n                    {manifacturer.name}\n                  </MenuItem>\n                )\n              )}\n            </Select>\n          </FormControl>\n        </Grid>\n      )}\n      {(selectedManifacturer || colorType === 3) && (\n        <Grid item xs={12} md={3}>\n          <Grid container spacing={3} alignItems=\"center\">\n            <Grid item xs={12} md={12} alignItems=\"center\">\n              <Autocomplete\n                style={{ maxWidth: 300 }}\n                freeSolo\n                value={colorValue?.value ?? \"\"}\n                onChange={handleChangeColor}\n                onInputChange={handleInputChange}\n                options={colorData}\n                getOptionLabel={(option) =>\n                  typeof option === \"string\" ? option : option.sku\n                }\n                renderInput={(params) => (\n                  <Grid\n                    container\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                    direction=\"row\"\n                  >\n                    <Grid item xs={12} md={10}>\n                      <Grid container alignItems=\"flex-end\">\n                        <Grid item xs={10}>\n                          <TextField fullWidth {...params} label=\"Κωδικός...\" />\n                        </Grid>\n                        <Grid item>\n                          <SearchIcon />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                )}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  withStyles,\n  Grid,\n  createStyles,\n  makeStyles,\n  Theme,\n  TextField,\n} from \"@material-ui/core\";\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { profilColors } from \"../../../constants\";\nimport { NewOrderContext } from \"../NewOrderContext\";\nimport Autocomplete from \"../../../components/AutoComplete\";\nimport { getItems } from \"../../../api/fetch\";\nimport ColorSelections from \"./ColorSelections\";\n\ntype Props = {\n  isDisabled: boolean;\n};\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    radios: {\n      textAlign: \"left\",\n    },\n  })\n);\n\nconst GreenRadio = withStyles(({ palette }) => ({\n  root: {\n    color: palette.primary.main,\n    \"&$checked\": {\n      color: palette.primary.main,\n    },\n  },\n\n  checked: {},\n}))((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst OrderOptions = ({ isDisabled }: Props) => {\n  const {\n    selectedInfo,\n    setOrderColor,\n    setColorValue,\n    orderColor,\n    actions,\n    setFinCode,\n    colorValue,\n  } = useContext(NewOrderContext);\n  const { comments } = selectedInfo.data;\n\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    actions.resetSelection();\n    const v = (event.target as HTMLInputElement).value;\n    // setValue(v);\n    setOrderColor(v);\n    setFinCode(selectedInfo.data.fincode);\n    // v !== \"2\" && setColorValue(\"\");\n  };\n  const handleChangeColor = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const c = (event.target as HTMLInputElement).value;\n    setColorValue(c);\n  };\n\n  // const handleGetCollorType = async () => {\n  //   const data = await getItems({ BOption: 40, Company: 1, AFM: \"\" });\n  //   console.log(data);\n  // };\n\n  // useEffect(() => {\n  //   if (orderColor === profilColors.COLOR) {\n  //     handleGetCollorType();\n  //   }\n  // }, [orderColor]);\n\n  return (\n    <FormControl component=\"fieldset\" fullWidth>\n      <Grid container spacing={3} alignItems=\"center\">\n        <Grid item>\n          <RadioGroup\n            aria-label=\"orders\"\n            row\n            name=\"orders\"\n            value={orderColor}\n            onChange={handleChangeType}\n          >\n            <Grid container spacing={3} alignItems=\"flex-end\">\n              <Grid item>\n                <FormControlLabel\n                  value={profilColors.BLANK}\n                  control={<GreenRadio />}\n                  label=\"Άβαφο\"\n                  disabled={isDisabled}\n                />\n              </Grid>\n\n              <Grid item>\n                <FormControlLabel\n                  value={profilColors.WHITE}\n                  disabled={isDisabled}\n                  control={<GreenRadio />}\n                  label=\"Λευκό\"\n                />\n              </Grid>\n\n              <Grid item>\n                <FormControlLabel\n                  value={profilColors.COLOR}\n                  disabled={isDisabled}\n                  control={<GreenRadio />}\n                  label=\"Χρώμα\"\n                />\n              </Grid>\n            </Grid>\n          </RadioGroup>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          {orderColor === profilColors.COLOR && <ColorSelections />}\n        </Grid>\n      </Grid>\n    </FormControl>\n  );\n};\n\nexport default OrderOptions;\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default function OrderDialog(props) {\n  const { onClose, getPdf, open, finDoc } = props;\n  // const [isOpen, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    window.location.reload();\n\n    onClose(false);\n  };\n\n  const completeOrder = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <BootstrapDialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          style={{ padding: \"16px 14px\" }}\n        >\n          Επιτυχής αποστολή\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>ΠΑΡΑΓΓΕΛΙΑ {finDoc}</Typography>\n        </DialogContent>\n        <DialogActions style={{ justifyContent: \"space-between\" }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            onClick={completeOrder}\n          >\n            συνεχεια\n          </Button>\n          <Button onClick={getPdf}>\n            <PictureAsPdfIcon style={{ color: \"red\", fontSize: \"40px\" }} />\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { useState, useCallback, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { NewOrderContext } from \"./NewOrderContext\";\n\nimport DataTable from \"../../components/table/Table\";\nimport BackToMenu from \"../../components/BackToMenu\";\n\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport OrderOptions from \"./components/OrderOptions\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { postData, downloadPdf } from \"../../api/fetch\";\nimport { BranchesContext } from \"../../context/BranchesContext\";\nimport Branches from \"./components/Branches\";\nimport OrderDialog from \"./Dialog\";\nimport { domain } from \"../../config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n    table: {\n      overflow: \"auto\",\n      marginTop: theme.spacing(4),\n    },\n    title: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n    },\n  })\n);\n\nconst defaultValues: any = {\n  data: {\n    search: null,\n    fincode: \"1\",\n    sku: \"\",\n    mtrlname: \"\",\n    qtY2: \"\",\n    qtY1: \"\",\n    xdocname: \"\",\n    commentS1: \"\",\n    comments: \"\",\n    qtY1Def: \"\",\n  },\n};\n\nexport const NewOrder = () => {\n  let history = useHistory();\n  const { selectedBranch, branch, setSelectBranch } =\n    useContext(BranchesContext);\n\n  const [rows, setRows] = useState([]);\n  const [orderColor, setOrderColor] = useState(\"1\");\n\n  const [selectedInfo, setSelectedInfo] = useState(defaultValues);\n  const getRows = useCallback((rows) => {\n    console.log(\"ROWS-ROWS\", rows);\n    setRows(rows);\n  }, []);\n\n  const [remarkValue, setRemarkValue] = useState(\"\");\n  const [isopen, setDialog] = useState(false);\n  const [finDoc, setFindoc] = useState(null);\n  const [pdfCode, setPdfCode] = useState(null);\n  const [colorValue, SetColorValue] = useState(null);\n  const [selectedColorCompany, setSelectedColorCompany] = useState(null);\n\n  const handleChangeRemark = (event) => {\n    setRemarkValue(event.target.value);\n  };\n\n  useEffect(() => {\n    if (branch.length > 1) setSelectBranch({});\n  }, []);\n\n  const getSelection = useCallback(\n    (selectionData) => {\n      setSelectedInfo({\n        ...selectedInfo,\n        data: {\n          ...selectedInfo.data,\n          search: selectionData.sku,\n          fincode: selectionData.u5NAME,\n          sku: selectionData.sku,\n          mtrlname: selectionData.name,\n          mtrl: selectionData.mtrl,\n          qtY1: selectionData.mU21,\n          qtY2: \"1\",\n          xdocname: selectionData.xdocname,\n          qtY1Def: selectionData.mU21,\n        },\n      });\n    },\n    [selectedInfo]\n  );\n\n  const setComments = useCallback(\n    (commentS1) => {\n      setSelectedInfo({\n        ...selectedInfo,\n        data: {\n          ...selectedInfo.data,\n          commentS1: commentS1,\n        },\n      });\n    },\n    [selectedInfo]\n  );\n\n  const setWeight = useCallback(\n    (selectionData) => {\n      const kg = (\n        parseFloat(selectionData) * parseFloat(selectedInfo.data.qtY1Def)\n      ).toFixed(2);\n      // eslint-disable-next-line no-new-wrappers\n      const newNum = new Number(kg);\n      const num = newNum.toLocaleString(\"el-GR\");\n      const convertedNum = newNum.toLocaleString(\"en-GB\");\n      setSelectedInfo({\n        ...selectedInfo,\n        data: {\n          ...selectedInfo.data,\n          qtY1: num,\n          qt1converted: convertedNum,\n          qtY2: selectionData,\n        },\n      });\n    },\n    [selectedInfo]\n  );\n\n  const resetSelection = useCallback(() => {\n    setSelectedInfo(defaultValues);\n  }, []);\n\n  const actions = {\n    getSelection,\n    resetSelection,\n  };\n\n  const classes = useStyles();\n\n  // Sets value of the radio buttons\n\n  //Orders created\n\n  const handleSetSelectedValue = (val) => {\n    setSelectedInfo({\n      ...selectedInfo,\n      data: { ...selectedInfo.data, search: val },\n    });\n  };\n\n  const setColorValue = useCallback((val) => {\n    SetColorValue(val);\n  }, []);\n\n  const setFinCode = (val) => {\n    setSelectedInfo({\n      ...selectedInfo,\n      data: { ...selectedInfo.data, fincode: val },\n    });\n  };\n  const headCellsDetails: any = [\n    { id: \"fincode\", numeric: false, label: \"ΟΜΑΔΑ\" },\n    { id: \"sku\", numeric: false, label: \"ΚΩΔΙΚΟΣ\" },\n    { id: \"mtrlname\", numeric: false, label: \"ΠΕΡΙΓΡΑΦΗ\" },\n    { id: \"qtY2\", numeric: true, label: \"ΒΕΡΓΕΣ\" },\n    { id: \"qtY1\", numeric: true, label: \"ΚΙΛΑ\" },\n    { id: \"xdocname\", numeric: false, label: \"ΤΟΜΗ\" },\n    { id: \"commentS1\", numeric: false, label: \"ΠΑΡΑΤΗΡΗΣΕΙΣ\" },\n    { id: \"action\", numeric: false, label: \"\" },\n  ];\n\n  const handleDownload = () => {\n    downloadPdf(pdfCode, finDoc);\n  };\n\n  // post order\n\n  const handlePostData = () => {\n    //   // eslint-disable-next-line no-new-wrappers\n    //   const number = new Number(num).toLocaleString(\"en-US\");\n    //   return number;\n    // };\n\n    const orderData: any = rows.map((orderItem) => {\n      return {\n        company: 10,\n        boption: orderColor,\n        trdr: selectedBranch.trdr,\n        trdbranch:\n          selectedBranch.trdbranch === 0 ? null : selectedBranch.trdbranch,\n        comments: colorValue && colorValue.ccCPOUDRAID,\n        mtrl: orderItem.mtrl,\n        commentS1: orderItem.commentS1,\n        qtY1: orderItem.qt1converted,\n        qtY2: orderItem.qtY2,\n        remarks: remarkValue,\n        CCCBAFIOID: selectedColorCompany,\n        ccCPOUDRAID: colorValue && colorValue.ccCPOUDRAID,\n      };\n    });\n\n    postData(`${domain}/erpapi/putorder`, orderData).then((data: any) => {\n      if (data.response.statusText === \"OK\") {\n        setDialog(true);\n        setFindoc(data.data.findoc);\n        setPdfCode(data.data.fincode);\n      }\n      console.log(data); // JSON data parsed by `data.json()` call\n    });\n  };\n  const stateData = {\n    selectedInfo,\n    actions,\n    orderColor,\n    colorValue,\n    handleSetSelectedValue,\n    setWeight,\n    setComments,\n    setOrderColor,\n    setColorValue,\n    setFinCode,\n    setSelectedColorCompany,\n    selectedColorCompany,\n  };\n\n  console.log(\"stateData\", stateData);\n\n  return (\n    <NewOrderContext.Provider value={stateData}>\n      <Grid container spacing={3} justifyContent=\"center\">\n        <BackToMenu />\n        <Grid item xs={12}>\n          <Typography className={classes.title}>ΝΕΑ ΠΑΡΑΓΓΕΛΙΑ</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <OrderOptions isDisabled={rows.length > 0} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={12} sm={12} className={classes.table}>\n          <DataTable\n            name=\"details\"\n            onRowclick={() => false}\n            headCells={headCellsDetails}\n            clearCell\n            rows={[]}\n            add\n            getRows={getRows}\n            pagination={false}\n            rowsPerPagenum={100}\n          />\n        </Grid>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <TextField\n              variant=\"outlined\"\n              id=\"outlined-multiline-flexible\"\n              label=\"ΠΑΡΑΤΗΡΗΣΕΙΣ\"\n              multiline\n              maxRows={4}\n              value={remarkValue}\n              onChange={handleChangeRemark}\n              style={{ width: 350 }}\n            />\n          </Grid>\n        </Grid>\n        <Grid item justifyContent=\"center\">\n          <Grid container spacing={3} justifyContent=\"center\">\n            {rows.length > 0 && (\n              <>\n                <Grid item xs={12} justifyContent=\"center\">\n                  <div style={{ textAlign: \"center\" }}>\n                    {branch.length > 1 && <Branches />}\n                  </div>\n                </Grid>\n                <Grid item xs={12} justifyContent=\"center\">\n                  {console.log(\"selectedBranch\", branch)}\n                  {selectedBranch && (\n                    <div style={{ textAlign: \"center\" }}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handlePostData}\n                      >\n                        ΑΠΟΣΤΟΛΗ ΠΑΡΑΓΓΕΛΙΑΣ\n                      </Button>\n                    </div>\n                  )}\n                </Grid>\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <OrderDialog\n        open={isopen}\n        finDoc={pdfCode}\n        onClose={() => setDialog(!isopen)}\n        getPdf={handleDownload}\n      />\n    </NewOrderContext.Provider>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Orders } from \"./pages/Orders/Orders\";\nimport { NewOrder } from \"./pages/NewOrder/NewOrder\";\nimport \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { getbranches } from \"./api/fetch\";\nimport { BranchesContext } from \"./context/BranchesContext\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Green lig alfa site.\n      main: \"#83bd00\",\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: \"#11cb5f\",\n    },\n    error: {\n      // This is green.A700 as hex.\n      main: \"#e53935\",\n    },\n  },\n});\n\nfunction App() {\n  const [afm, setAfm] = useState(null);\n  const [branch, setBranch] = useState([]);\n  const [selectedBranch, setSelectBranch] = useState({});\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    console.log(\"here\");\n    const afmValue: any = document.getElementById(\"userAfm\");\n    if (afmValue) {\n      getbranches(afmValue.value).then((data: any) => {\n        setBranch(data);\n        if (data?.length === 1) {\n          setSelectBranch(data[0]);\n        }\n        setAfm(afmValue.value);\n      });\n    }\n  }, [afm]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BranchesContext.Provider\n        value={{ branch, setBranch, selectedBranch, setSelectBranch }}\n      >\n        {/* <CompanyOptions /> */}\n        <div className=\"App\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Dashboard />\n              </Route>\n              <Route exact path=\"/erp-test\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/orders\">\n                <Orders afm={afm} />\n              </Route>\n              <Route path=\"/new\">\n                <NewOrder />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </BranchesContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}