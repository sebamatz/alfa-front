{"version":3,"sources":["pages/Dashboard.tsx","components/table/Head.tsx","config.ts","api/fetch.ts","pages/NewOrder/NewOrderContext.tsx","components/AutoComplete.tsx","components/table/NewRow.tsx","components/table/Table.tsx","constants.ts","pages/Orders/components/OrderOptions.tsx","pages/Orders/components/DatePickers.tsx","context/BranchesContext.tsx","pages/NewOrder/components/Branches.tsx","components/BackToMenu.tsx","pages/Orders/Orders.tsx","pages/NewOrder/components/OrderOptions.tsx","pages/NewOrder/Dialog.tsx","pages/NewOrder/NewOrder.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","dashboard","display","alignItems","height","justifyContent","textAlign","button","minWidth","marginBottom","link","textDecoration","Dashboard","props","classes","className","Grid","container","item","xs","lg","to","Button","variant","color","Typography","root","width","paper","spacing","table","visuallyHidden","border","clip","margin","overflow","padding","position","top","EnhancedTableHead","headCells","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","TableCell","sortDirection","id","TableSortLabel","active","direction","onClick","property","event","label","domain","document","getElementById","value","groupBy","keys","array","reduce","objectsByKeyValue","obj","key","join","concat","generatedKey","constructApi","url","params","encodeURIComponent","JSON","stringify","getData","a","short","fetch","response","json","data","groupFincodeStatus","fechOrders","result","fechGroups","Company","getbranches","afm","AFM","console","log","defaults","bOption","trdr","trdbranch","comments","mtrl","commentS1","qtY1","qtY2","method","headers","body","downloadPdf","payload","code","pdf","linkSource","downloadLink","createElement","fileName","href","download","click","Error","message","defaultValues","NewOrderContext","createContext","Asynchronous","useState","loading","setLoading","handleChange","e","v","target","length","setValue","useContext","selectedInfo","handleSetSelectedValue","actions","orderColor","fincode","search","getSelection","open","setOpen","options","setOptions","useEffect","SearchValue","BOption","DFrom","DTo","TakeRecs","Id","LastId","list","name","filterOptions","createFilterOptions","option","Autocomplete","style","onOpen","onClose","onChange","filter","d","getOptionSelected","renderOption","sku","renderInput","TextField","InputProps","endAdornment","CircularProgress","size","NewRow","saveOrder","setWeight","setComments","setFinCode","mtrlname","xdocname","groups","setGroups","group","setGroup","getGroups","useCallback","Qty1","toLocaleString","FormControl","Select","val","resetSelection","i","MenuItem","Input","disabled","title","type","alt","src","IconButton","alert","component","SaveRounded","descendingComparator","b","getComparator","stableSort","comparator","stabilizedThis","el","index","sort","DataTable","onRowclick","rows","clearCell","maxCols","add","orderCol","pagination","stickyHeader","getRows","selectedRow","rowsPerPagenum","getPdf","React","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","tableRows","setRow","addRow","setAddwRow","status","Math","min","TableContainer","Table","aria-labelledby","aria-label","rowCount","TableBody","slice","row","hover","rowData","preventDefault","handleRowClick","tabIndex","selected","r","moment","format","imagefile","path","fontSize","newtableRows","handleRemoveOrder","push","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","PENDING","profilColors","radios","GreenRadio","withStyles","palette","primary","main","checked","Radio","OrderOptions","optionValue","RadioGroup","FormControlLabel","control","borderRadius","shape","backgroundColor","alpha","common","white","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","date","DatePickers","getDateFrom","getDateTo","getSearchData","text","setText","Date","selectedDateFrom","setSelectedDateFrom","selectedDateTo","setSelectedDateTo","dateFormat","utils","DateFnsUtils","DatePicker","autoOk","disableToolbar","from","BranchesContext","Branches","branch","selectedBranch","setSelectBranch","fullWidth","InputLabel","find","address","BackToMenu","startIcon","flexGrow","secondary","marginTop","table_wrapper","Orders","defaultData","orderDetails","setDetails","orders","setOrders","query","setQuery","dateFrom","setDateFrom","dateto","setDateTo","master","Object","getDetails","getOrders","TrdrBranch","sm","numeric","ficomments","remarks","isDisabled","setOrderColor","setColorValue","colorValue","c","BootstrapDialog","styled","Dialog","OrderDialog","finDoc","window","location","reload","DialogTitle","DialogContent","dividers","gutterBottom","DialogActions","autoFocus","qtY1Def","NewOrder","useHistory","setRows","setSelectedInfo","remarkValue","setRemarkValue","isopen","setDialog","setFindoc","pdfCode","setPdfCode","SetColorValue","selectionData","u5NAME","mU21","kg","parseFloat","toFixed","newNum","Number","num","convertedNum","qt1converted","Provider","multiline","maxRows","orderData","orderItem","company","boption","postData","then","statusText","findoc","createTheme","error","App","setAfm","setBranch","afmValue","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4RASMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,OAAQ,OACRC,eAAgB,SAChBC,UAAW,UAEbC,OAAO,CACLC,SAAS,QACTC,aAAa,QAGfC,KAAK,CACHC,eAAgB,aAKTC,EAAY,SAACC,GACxB,IAAMC,EAAUjB,IAEhB,OACE,qBAAKkB,UAAWD,EAAQb,UAAxB,SACE,eAACe,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CAAML,UAAWD,EAAQJ,KAAMW,GAAG,UAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUT,UAAWD,EAAQP,OAA/D,SACE,cAACkB,EAAA,EAAD,8IAIN,cAACT,EAAA,EAAD,CAAME,MAAI,EAAEC,GAAI,GAAIC,GAAI,EAAxB,SACE,cAAC,IAAD,CAAML,UAAWD,EAAQJ,KAAMW,GAAG,OAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUT,UAAWD,EAAQP,OAA/D,SACE,cAACkB,EAAA,EAAD,0G,8KC9BI3B,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPlB,aAAcV,EAAM8B,QAAQ,IAE9BC,MAAO,CACLtB,SAAU,KAEZuB,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACN7B,OAAQ,EACR8B,QAAS,EACTC,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLX,MAAO,QAkBE,SAASY,EAAkB1B,GAA4B,IAC7D2B,EAAsD3B,EAAtD2B,UAAW1B,EAA2CD,EAA3CC,QAAS2B,EAAkC5B,EAAlC4B,MAAOC,EAA2B7B,EAA3B6B,QAASC,EAAkB9B,EAAlB8B,cAM3C,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGL,EAAUM,KAAI,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,CAEEC,cAAeP,IAAYK,EAASG,IAAKT,EAF3C,SAIE,eAACU,EAAA,EAAD,CACEC,OAAQV,IAAYK,EAASG,GAC7BG,UAAWX,IAAYK,EAASG,GAAKT,EAAQ,MAC7Ca,SAfTC,EAeoCR,EAASG,GAfhC,SAACM,GACbb,EAAca,EAAOD,KAWf,UAKGR,EAASU,MACTf,IAAYK,EAASG,GACpB,sBAAMnC,UAAWD,EAAQiB,eAAzB,SACa,SAAVU,EAAmB,oBAAsB,qBAE1C,SAbDM,EAASG,IATtB,IAACK,S,mECvDQG,EAFIC,SAASC,eAAe,UAEfC,M,2BCDpBC,EAAU,SAACC,GAAD,OAAe,SAACC,GAAD,OAC7BA,EAAMC,QAAO,SAACC,EAAwBC,GACpC,IAAMN,EAAQE,EAAKjB,KAAI,SAACsB,GAAD,OAAcD,EAAIC,MAAMC,KAAK,KAMpD,OALAH,EAAkBL,IAAUK,EAAkBL,IAAU,IAAIS,OAAhC,2BACvBH,GADsB,IAEzBI,aAAcV,KAGTK,IACN,MAECM,EAAe,SAACC,EAAKC,GAEzB,OAAOD,EADaE,mBAAmBC,KAAKC,UAAUH,KAIjD,SAAeI,IAAtB,+B,4CAAO,kDAAAC,EAAA,6DAAuBN,EAAvB,+BAA6B,GAAIC,EAAjC,+BAA+C,GAAIM,EAAnD,yCACkBC,MAAMT,EAAaC,EAAKC,IAD1C,cACCQ,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,OAGCC,EAAqBvB,EAAQ,CACjC,UACA,UACA,SACA,aAPG,kBASEkB,EAAQK,EAAmBD,GAAQA,GATrC,6C,sBAaA,IAAME,GAAU,uCAAG,WAAOF,GAAP,eAAAL,EAAA,sEACHD,EAAQ,GAAD,OACvBpB,EADuB,+BAE1B0B,GACA,GAJsB,cAClBG,EADkB,yBAMjBA,GANiB,2CAAH,sDASVC,GAAU,uCAAG,8BAAAT,EAAA,6DAClBK,EAAO,CACXK,QAAS,GAFa,SAKHX,EAAQ,GAAD,OAAIpB,EAAJ,2BAAqC0B,GALzC,cAKlBG,EALkB,gBAMXA,EANW,mFAAH,qDAWVG,GAAW,uCAAG,WAAOC,GAAP,iBAAAZ,EAAA,6DACnBK,EAAO,CACXK,QAAS,EACTG,IAAKD,GAHkB,SAMJb,EAAQ,GAAD,OAAIpB,EAAJ,iCAA2C0B,GAN9C,cAMnBG,EANmB,OAOzBM,QAAQC,IAAI,cAAeP,GAPF,kBAQlBA,GARkB,2CAAH,sDAWlBQ,GAAW,CACf,CACEN,QAAS,EACTO,QAAS,EACTC,KAAM,KACNC,UAAW,IACXC,SAAU,QACVC,KAAM,MACNC,UAAW,QACXC,KAAM,EACNC,KAAM,GAER,CACEd,QAAS,EACTO,QAAS,EACTC,KAAM,KACNC,UAAW,IACXC,SAAU,QACVC,KAAM,MACNC,UAAW,QACXC,KAAM,EACNC,KAAM,GAER,CACEd,QAAS,EACTO,QAAS,EACTC,KAAM,KACNC,UAAW,IACXC,SAAU,QACVC,KAAM,MACNC,UAAW,SACXC,KAAM,EACNC,KAAM,I,8CAKH,4CAAAxB,EAAA,6DAAwBN,EAAxB,+BAA8B,GAAIW,EAAlC,+BAAyCW,GAAzC,SAEkBd,MAAMR,EAAK,CAChC+B,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM9B,KAAKC,UAAUO,KAPlB,cAECF,EAFD,YAUIA,EAVJ,SAU0BA,EAASC,OAVnC,6CAUID,SAVJ,KAUcE,KAVd,oD,sBAgBA,SAAeuB,GAAtB,qC,8CAAO,WAA2BC,EAAcC,GAAzC,6BAAA9B,EAAA,sEAEGN,EAFH,UAEYf,EAFZ,wCAIoBuB,MAAMT,EAAaC,EAAK,CAAEgB,QAAS,EAAGvC,GAAI2D,IAAS,CACxEJ,QAAS,CACP,eAAgB,sBANjB,cAIGvB,EAJH,gBASeA,EAASC,OATxB,OASG2B,EATH,OAUGC,EAVH,sCAU+CD,GAC5CE,EAAerD,SAASsD,cAAc,KACtCC,EAZH,UAYiBN,EAZjB,QAaHI,EAAaG,KAAOJ,EACpBC,EAAaI,SAAWF,EACxBF,EAAaK,QAfV,wDAiBG,IAAIC,OAAM,2CAAKpC,gBAAL,mBAAeE,YAAf,eAAqByB,OAAQ,KAAIU,SAjB9C,2D,sBChHA,IAAMC,GAAqB,GACrBC,GAAkBC,wBAAcF,ICY9B,SAASG,KAAgB,IAAD,EACPC,oBAAS,GADF,mBAC9BC,EAD8B,KACrBC,EADqB,KAG/BC,EAAe,SAACC,GACpB,IAAMC,EAAID,EAAEE,OAAOrE,MACfoE,EAAEE,OAAS,IACbL,GAAW,GACXM,EAASH,KAPwB,EAWnCI,qBAAWZ,IADLa,EAV6B,EAU7BA,aAAcC,EAVe,EAUfA,uBAAwBC,EAVT,EAUSA,QAASC,EAVlB,EAUkBA,WAVlB,EAYTH,EAAalD,KAAjCsD,EAZ6B,EAY7BA,QAASC,EAZoB,EAYpBA,OAETC,EAAiBJ,EAAjBI,aAd6B,EAgBbhB,oBAAS,GAhBI,mBAgB9BiB,EAhB8B,KAgBxBC,EAhBwB,OAiBPlB,mBAAwB,IAjBjB,mBAiB9BmB,EAjB8B,KAiBrBC,EAjBqB,OAkBXpB,mBAAS,IAlBE,mBAkB9B/D,EAlB8B,KAkBvBuE,EAlBuB,KAqBrCa,qBAAU,WACR,IAAI7F,GAAS,EAEb,GAAKyE,EAmCL,OA/BA,sBAAC,gCAAA9C,EAAA,0DACKlB,EADL,uBAESuB,EAAO,CACXK,QAAS,EACTyD,YAAarF,EACbsF,QAASV,EACTW,MAAO,KACPC,IAAK,KACLC,SAAU,KACVC,GAAI,KACJC,OAAQ,KACR5D,IAAK8C,GAXV,SAc+B5D,EAAQ,GAAD,OAC9BpB,EAD8B,8BAEjC0B,GAhBL,OAcSF,EAdT,OAoBSuE,EAAYvE,EAASpC,KAAI,SAAC5B,GAC9B,MAAO,CAAEwI,KAAMxI,EAAKwI,KAAM7F,MAAO3C,EAAK2F,KAAMzB,KAAMlE,MAGhDkC,IACF4F,EAAWS,GAAc,IACzB3B,GAAW,IA1BhB,0CAAD,GA+BO,WACL1E,GAAS,KAEV,CAACS,IAEJoF,qBAAU,WACHJ,GACHG,EAAW,MAEZ,CAACH,IAQJ,IAAMc,EAAgBC,YAAoB,CACxC/E,UAAW,SAACgF,GAAD,OAAiBA,EAAOhG,SAErC,OACE,mCACE,cAACiG,EAAA,EAAD,CACEH,cAAeA,EACfzG,GAAG,oBACH6G,MAAO,CAAEpI,MAAO,KAChBkH,KAAMA,EACNmB,OAAQ,WACNlB,GAAQ,IAEVmB,QAAS,WACPnB,GAAQ,IAEVoB,SAAU,SAAClC,EAAGC,GACRA,EACmBc,EAAQoB,QAC3B,SAACC,GAAD,OAAYA,EAAEvG,QAAUoE,EAAEpE,UAEZ+E,EAAaX,EAAE7C,MAE/BmD,EAAuB,KAG3B8B,kBAAmB,SAACR,EAAQhG,GAAT,OAAmBgG,EAAOhD,OAAShD,EAAMgD,MAC5DyD,aAAc,SAACT,GAAD,uBACH,OAANA,QAAM,IAANA,GAAA,UAAAA,EAAQzE,YAAR,eAAcmF,MAAOV,EAAOzE,KAAKyB,KADxB,eACmCgD,EAAOH,OAExDX,QAASA,EACTlB,QAASA,EACThE,MAAO8E,EACP6B,YAAa,SAAC9F,GAAD,OACX,cAAC+F,EAAA,EAAD,2BACM/F,GADN,IAEEnD,QAAQ,WACR2I,SAAUnC,EACV2C,WAAU,2BACLhG,EAAOgG,YADF,IAERC,aACE,eAAC,WAAD,WACG9C,EACC,cAAC+C,EAAA,EAAD,CAAkBpJ,MAAM,UAAUqJ,KAAM,KACtC,KACHnG,EAAOgG,WAAWC,0BCjH9B,IAAMG,GAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAuB,EAE5C1C,qBAAWZ,IADLa,EADsC,EACtCA,aAAc0C,EADwB,EACxBA,UAAWxC,EADa,EACbA,QAASyC,EADI,EACJA,YAAaC,EADT,EACSA,WADT,EAK5C5C,EAAalD,KADP+F,EAJsC,EAItCA,SAAU7E,EAJ4B,EAI5BA,KAAMC,EAJsB,EAItBA,KAAM6E,EAJgB,EAIhBA,SAAU/E,EAJM,EAINA,UAAWsC,EAJL,EAIKA,OAJL,EAOlBf,mBAAS,IAPS,mBAOvCyD,EAPuC,KAO/BC,EAP+B,OAQpB1D,mBAASU,EAAalD,KAAKsD,SARP,mBAQvC6C,EARuC,KAQhCC,EARgC,KA2BxCC,EAAYC,sBAAW,sBAAC,4BAAA3G,EAAA,sEACFS,KADE,OACtB6F,EADsB,OAE5BC,EAAUD,GAGVG,EAASH,EAAO,GAAG3B,MACnBwB,EAAWG,EAAO,GAAG3B,MANO,2CAO3B,IAEHT,qBAAU,WACRwC,MACC,CAACA,IAEJ,IAWME,EAAOrF,EAAKsF,eAAe,SAQjC,OANA3C,qBAAU,WACK,MAAT1C,GACFyE,EAAUzE,KAEX,CAACA,IAGF,eAAC1D,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,UACE,cAAC6I,EAAA,EAAD,UACGR,EAAOlD,OAAS,GACf,cAAC2D,EAAA,EAAD,CAAQ5B,SA5CU,SAAClC,GAC3B,IAAI+D,EAAM/D,EAAEE,OAAOrE,MACnB2E,EAAQwD,iBACRR,EAASO,GACTb,EAAWa,IAwCoCrC,KAAK,UAAU7F,MAAO0H,EAA7D,SACGF,EAAOvI,KAAI,SAACmF,EAAQgE,GAAT,OACV,cAACC,EAAA,EAAD,CAAUrI,MAAOoE,EAAEyB,KAAnB,SAA0BzB,EAAEyB,gBAMtC,cAAC1G,EAAA,EAAD,UACE,cAAC,GAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAACmJ,EAAA,EAAD,CAAOtI,MAAOsH,EAAUiB,UAAQ,EAACC,MAAOlB,MAE1C,cAACnI,EAAA,EAAD,UACE,cAACyH,EAAA,EAAD,CACEvH,GAAG,SACHwG,KAAK,OACL7F,MAAO0C,EACP2D,SAzEa,SAAClC,GACpB,IAAI+D,EAAM/D,EAAEE,OAAOrE,MACnBmH,EAAUe,IAwEJO,KAAK,aAGT,cAACtJ,EAAA,EAAD,UACE,cAACmJ,EAAA,EAAD,CAAOzC,KAAK,OAAO7F,MAAO8H,EAAMS,UAAQ,MAE1C,cAACpJ,EAAA,EAAD,UACGoI,EACC,qBACEmB,IAAI,WACJC,IAAG,wEAAmEpB,GACtEhL,OAAO,OAGT,cAAC,IAAD,MAGJ,cAAC4C,EAAA,EAAD,UACE,cAACmJ,EAAA,EAAD,CACEzC,KAAK,YACL7F,MAAOwC,EACP6D,SA1FqB,SAAClC,GAC5B,IAAI+D,EAAM/D,EAAEE,OAAOrE,MACnBoH,EAAYc,QA2FTpD,GACC,cAAC3F,EAAA,EAAD,UACE,cAACyJ,EAAA,EAAD,CAAYnJ,QAtED,WAEjB,GADAuC,QAAQC,IAAI,eAAgBwC,EAAalD,MACrCkD,EAAalD,KAAKmB,KAAO,EAC3B,OAAOmG,MACL,8SAGJ3B,EAAUzC,EAAalD,MACvBoD,EAAQwD,kBA8D+BxK,MAAM,UAAUmL,UAAU,OAA3D,SACE,cAACC,EAAA,EAAD,YCjHZ,SAASC,GAAwB9H,EAAM+H,EAAMpK,GAC3C,OAAIoK,EAAEpK,GAAWqC,EAAErC,IACT,EAENoK,EAAEpK,GAAWqC,EAAErC,GACV,EAEF,EAKT,SAASqK,GACPtK,EACAC,GAKA,MAAiB,SAAVD,EACH,SAACsC,EAAG+H,GAAJ,OAAUD,GAAqB9H,EAAG+H,EAAGpK,IACrC,SAACqC,EAAG+H,GAAJ,OAAWD,GAAqB9H,EAAG+H,EAAGpK,IAG5C,SAASsK,GAAchJ,EAAYiJ,GACjC,IAAMC,EAAiBlJ,EAAMlB,KAAI,SAACqK,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACtI,EAAG+H,GACtB,IAAMrK,EAAQwK,EAAWlI,EAAE,GAAI+H,EAAE,IACjC,OAAc,IAAVrK,EAAoBA,EACjBsC,EAAE,GAAK+H,EAAE,MAEXI,EAAepK,KAAI,SAACqK,GAAD,OAAQA,EAAG,MAGvC,IAAMtN,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPlB,aAAcV,EAAM8B,QAAQ,IAE9BC,MAAO,CAELE,OAAQ,QAEVD,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACN7B,OAAQ,EACR8B,QAAS,EACTC,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLX,MAAO,QAsBE,SAAS2L,GAAUzM,GAAoB,IAElD0M,EAcE1M,EAdF0M,WACAC,EAaE3M,EAbF2M,KACAhL,EAYE3B,EAZF2B,UACAkH,EAWE7I,EAXF6I,KALiD,EAgB/C7I,EAVF4M,iBANiD,YAgB/C5M,EATF6M,QASE7M,EARF8M,YARiD,WAgB/C9M,EAPF+M,gBATiD,MAStC,GATsC,IAgB/C/M,EANFgN,kBAViD,SAWjDC,EAKEjN,EALFiN,aACAC,EAIElN,EAJFkN,QAZiD,EAgB/ClN,EAHFmN,mBAbiD,MAanC,KAbmC,IAgB/CnN,EAFFoN,sBAdiD,MAchC,GAdgC,EAejDC,EACErN,EADFqN,OAEIpN,EAAUjB,KAjBmC,EAkBzBsO,IAAMvG,SAAgB,OAlBG,mBAkB5CnF,EAlB4C,KAkBrC2L,EAlBqC,OAmBrBD,IAAMvG,SAAqBgG,GAnBN,mBAmB5ClL,EAnB4C,KAmBnC2L,EAnBmC,OAoB3BF,IAAMvG,SAAS,GApBY,mBAoB5C0G,EApB4C,KAoBtCC,EApBsC,OAqBbJ,IAAMvG,SAASqG,GArBF,mBAqB5CO,EArB4C,KAqB/BC,EArB+B,OAuBvB7G,mBAAS4F,GAvBc,oBAuB5CkB,GAvB4C,MAuBjCC,GAvBiC,SAwBtB/G,oBAAS,GAxBa,qBAwB5CgH,GAxB4C,MAwBpCC,GAxBoC,MA2B/CC,GAAS,KAgDb7F,qBAAU,YACP0E,GAAOgB,GAAOnB,KACd,CAACA,EAAMG,IAGMoB,KAAKC,IAAIR,EAAahB,EAAKrF,OAASmG,EAAOE,GAE3D,OACE,sBAAKzN,UAAWD,EAAQY,KAAxB,UACE,iCACE,cAACuN,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEpB,aAAcA,EACd/M,UAAWD,EAAQgB,MACnBqN,kBAAgB,aAChBtE,KAAM,SACNuE,aAAW,iBALb,UAOE,cAAC7M,EAAD,CACEzB,QAASA,EACT2B,MAAOA,EACPC,QAASA,EACTC,cApEc,SACxBa,EACAD,GAGA6K,EADc1L,IAAYa,GAAsB,QAAVd,EACrB,OAAS,OAC1B4L,EAAW9K,IA+DD8L,SAAU7B,EAAKrF,OACf3F,UAAWA,IAEb,eAAC8M,EAAA,EAAD,WACGtC,GAAW0B,GAAW3B,GAActK,EAAOC,IACzC6M,MAAMjB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C1L,KAAI,SAAC0M,EAAUpC,GACd,OACE,eAACvK,EAAA,EAAD,CACE4M,OAAK,EACLnM,QAAS,SAACE,GAAD,OAjDN,SAACA,EAAkCkM,GACxDlM,EAAMmM,iBACNpC,EAAW,CAACmC,IA+C0BE,CAAepM,EAAOgM,IAC1CK,UAAW,EAEXC,SAAUN,EAAI9G,WAAJ,OAAgBsF,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAatF,SALzC,UAOGlG,EAAUM,KAAI,SAACiN,EAAQ9D,GACtB,IAAI7G,EAAYoK,EAAIO,EAAE7M,IAUtB,GARa,YAAT6M,EAAE7M,KACJkC,EAAO4K,IAAOR,EAAIO,EAAE7M,KAAK+M,OAAO,aAGrB,SAATF,EAAE7M,KACJkC,EAAOA,EAAKwG,eAAe,UAGhB,aAATmE,EAAE7M,GAAmB,CACvB,IAAMgN,EAAYV,EAAIO,EAAE7M,IAClBiN,EAAI,wEAAoED,GAE9E9K,EAAO8K,EACL,qBAAK3D,IAAI,WAAWC,IAAK2D,EAAM/P,OAAO,OAEtC,cAAC,IAAD,IAYJ,MARa,WAAT2P,EAAE7M,KACJ2C,QAAQC,IAAI0J,EAAG,QACfV,GACoB,OAAlBU,EAAG,OACC,kBACA,aAGD,cAACxM,EAAA,EAAD,UAAoBoC,GAAJ6G,MAEf,WAATvC,GACC,cAAC1G,EAAA,EAAD,CAAW+G,MAAO,CAAE3H,QAAS,OAA7B,SACE,cAACd,EAAA,EAAD,CACEgC,QAAS,kBACP4K,EAAOsB,EAAG,QAAaA,EAAG,SAF9B,SAKE,cAAC,IAAD,CACEzF,MAAO,CAAEvI,MAAO,MAAO4O,SAAU,cAKxC3C,GACC,cAACzK,EAAA,EAAD,UACE,cAAC,IAAD,CACExB,MAAM,QACN8B,QAAS,kBAhHT,SAAC8J,GACzB,IAAMiD,EAAe3B,GAAUvE,QAAO,SAAC/E,EAAM6G,GAAP,OAAamB,IAAUnB,KAC7D8B,EAAQsC,GAER1B,GAAO0B,GAEPxB,IAAW,GA0G4ByB,CAAkBlD,OAHrC,UAAmBA,EAAnB,cAjDGA,MA2DZwB,IAAU,cAAC,GAAD,CAAQ7D,UA/HP,SAACtI,GACvBiM,GAAU6B,KAAK9N,GACfsL,EAAQW,IAERC,GAAOD,IAEPG,IAAW,MA0HAlB,GACC,qBAAK5D,MAAO,CAAE7H,OAAQ,UAAtB,SACE,cAACZ,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN8B,QA1IQ,SAACE,GACzBA,EAAMmM,iBACNd,IAAYD,KAqIE,SAKGA,GAAS,6CAAY,gBAYjCf,GACC,cAAC2C,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5B9D,UAAU,MACV+D,MAAOlD,EAAKrF,OACZqG,YAAaA,EACbF,KAAMA,EACNqC,aApIe,SAACnN,EAAgBoN,GACxCrC,EAAQqC,IAoIAC,oBAjIsB,SAC9BrN,GAEAiL,EAAeqC,SAAStN,EAAM0E,OAAOrE,MAAO,KAC5C0K,EAAQ,SAiILO,IAAmB,YAATpF,GACT,qBACE3I,UAAU,SACVwL,IAAI,WACJC,IAAG,wEAAmEsC,SChTzE,IACMiC,GAAU,UACVC,GACJ,IADIA,GAEJ,IAFIA,GAGJ,I,sCCaHnR,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiR,OAAQ,CACN3Q,UAAW,aAKX4Q,GAAaC,cAAW,gBAAGC,EAAH,EAAGA,QAAH,MAAkB,CAC9C1P,KAAM,CACJF,MAAO4P,EAAQC,QAAQC,KACvB,YAAa,CACX9P,MAAO4P,EAAQC,QAAQC,OAI3BC,QAAS,MARQJ,EASf,SAACtQ,GAAD,OAAuB,cAAC2Q,GAAA,EAAD,aAAOhQ,MAAM,WAAcX,OAyCvC4Q,GAvCM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAChB5Q,EAAUjB,KAD+B,EAGrB+H,mBAASmJ,IAHY,mBAGxClN,EAHwC,KAGjCuE,EAHiC,KAU/C,OACE,cAACyD,EAAA,EAAD,CAAac,UAAU,WAAvB,SACE,cAACgF,GAAA,EAAD,CACEvC,aAAW,SACX1F,KAAK,SACL7F,MAAOA,EACPqG,SAXe,SAAC1G,GACpB,IAAMyE,EAAKzE,EAAM0E,OAA4BrE,MAC7CuE,EAASH,GACTyJ,EAAYzJ,IAIV,SAME,eAACjH,EAAA,EAAD,CAAMC,WAAS,EAACF,UAAWD,EAAQmQ,OAAnC,UACE,cAACjQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACyQ,GAAA,EAAD,CACE/N,MAAOkN,GACPc,QAAS,cAACX,GAAD,IACTzN,MAAM,kJAGV,cAACzC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACyQ,GAAA,EAAD,CACE/N,MDjEa,aCkEbgO,QAAS,cAACX,GAAD,IACTzN,MAAM,gH,kEC9Cd5D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2I,OAAO,cACL3G,OAAQ,YACRK,SAAU,WACVyP,aAAc/R,EAAMgS,MAAMD,aAC1BE,gBAAiBC,aAAMlS,EAAMqR,QAAQc,OAAOC,MAAO,KACnD,UAAW,CACTH,gBAAiBC,aAAMlS,EAAMqR,QAAQc,OAAOC,MAAO,MAErDC,WAAY,EACZzQ,MAAO,QACN5B,EAAMsS,YAAYC,GAAG,MAAQ,CAC5BF,WAAYrS,EAAM8B,QAAQ,GAC1BF,MAAO,SAGX4Q,WAAY,CACVnQ,QAASrC,EAAM8B,QAAQ,EAAG,GAC1BzB,OAAQ,OACRiC,SAAU,WACVmQ,cAAe,OACftS,QAAS,OACTC,WAAY,SACZE,eAAgB,UAElBoS,UAAW,CACTjR,MAAO,WAETkR,WAAW,cACTtQ,QAASrC,EAAM8B,QAAQ,EAAG,EAAG,EAAG,GAEhC8Q,YAAY,cAAD,OAAgB5S,EAAM8B,QAAQ,GAA9B,OACX+Q,WAAY7S,EAAM8S,YAAYC,OAAO,SACrCnR,MAAO,QACN5B,EAAMsS,YAAYC,GAAG,MAAQ,CAC5B3Q,MAAO,OACP,UAAW,CACTA,MAAO,UAIboR,KAAM,CACJzS,UAAW,aA2FF0S,GAtFK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,cACvCrS,EAAUjB,KADwD,EAGhD+H,mBAAS,IAHuC,mBAGjEwL,EAHiE,KAG3DC,EAH2D,OAMxBzL,mBAC9C,IAAI0L,MAPkE,mBAMjEC,EANiE,KAM/CC,EAN+C,OAS5B5L,mBAAsB,IAAI0L,MATE,mBASjEG,EATiE,KASjDC,EATiD,KA+BlEC,EAAa,aAEnB,OACE,cAAC,KAAD,CAAyBC,MAAOC,KAAhC,SACE,eAAC7S,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,aAA3C,UACE,eAACW,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGJ,UAAWD,EAAQiS,KAArC,SACE,cAACe,GAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACd/D,OAAQ0D,EACRzR,OAAO,SACPgB,GAAG,OACHO,MAAM,qBACNI,MAAO0P,EACPrJ,SApCiB,SAAC6I,GAC5BS,EAAoBT,GACpBE,EAAYF,QAqCN,cAAC/R,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGJ,UAAWD,EAAQiS,KAArC,SACE,cAACe,GAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACd9R,OAAO,SACPgB,GAAG,qBACHO,MAAM,qBACNwM,OAAQ0D,EACR9P,MAAO4P,EACPvJ,SA5Ce,SAAC6I,GAC1BW,EAAkBX,GAClBG,EAAUH,WA8CN,eAAC/R,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,WAAvC,UACE,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,EAAGhB,WAAW,WAAvC,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACuJ,EAAA,EAAD,CACEvH,GAAG,uBACHgH,SAhDO,SAAClC,GACpBqL,EAAQrL,EAAEE,OAAOrE,QAgDLJ,MAAM,oDAGV,cAACzC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,KAAD,SAGJ,cAACF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAU8B,QArDjC,WACnB,IAAM2Q,EAAOjE,IAAOuD,GAAkBtD,OAAO,YACvC5O,EAAK2O,IAAOyD,GAAgBxD,OAAO,YAGzCkD,EADe,CAAEc,OAAM5S,KAAI+R,UAiDnB,mEACY,kB,oBChJX5L,GAAqB,GACrB0M,GAAkBxM,wBAAcF,ICG9B,SAAS2M,GAAT,GAA4C,sBAEvD9L,qBAAW6L,IADLE,EADgD,EAChDA,OAAQC,EADwC,EACxCA,eAAgBC,EADwB,EACxBA,gBAShC,OACE,eAACzI,EAAA,EAAD,CAAa0I,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,CAAYzT,UAAU,SAASmC,GAAG,2BAAlC,oEAGCkR,EAAOjM,OAAS,GACf,cAAC2D,EAAA,EAAD,CACE5B,SAbmB,SAAClC,GAC1B,IAAI+D,EAAM/D,EAAEE,OAAOrE,MACbiM,EAAWsE,EAAOK,MAAK,SAACrP,GAAD,OAAUA,EAAKyB,OAASkF,KACrDuI,EAAgBxE,IAWVpG,KAAK,UACL7F,MAAOwQ,EAAexN,KAHxB,SAKGuN,EAAOtR,KAAI,SAACmF,EAAQgE,GAAT,OACV,cAACC,EAAA,EAAD,CAAUrI,MAAOoE,EAAEpB,KAAnB,SAA0BoB,EAAEyM,kB,yBClBlC7U,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXU,KAAK,CACHC,eAAgB,aAkBPgU,GAbwC,SAAC9T,GAEvD,IAAMC,EAAUjB,KAEhB,OACG,cAAC,IAAD,CAAMkB,UAAWD,EAAQJ,KAAMW,GAAG,KAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUoT,UAAW,cAAC,KAAD,IAAvD,qBCPA/U,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJmT,SAAU,GAEZjT,MAAO,CACLQ,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,SACXkB,MAAOzB,EAAMqR,QAAQgC,KAAK0B,WAE5BhT,MAAO,CACLK,SAAU,OACV4S,UAAWhV,EAAM8B,QAAQ,IAE3BmT,cAAe,CACb5S,QAASrC,EAAM8B,QAAQ,GACvBG,OAAQ,oBACR8P,aAAc,OAEhBzF,MAAO,CACLjK,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,UAEbI,KAAM,CACJC,eAAgB,aAKTsU,GAAS,SAAC,GAAkB,IAAD,IAAftP,EAAe,EAAfA,IACjBuP,EAAc,CAClBzP,QAAS,EACTyD,YAAa,KACbC,QAAS,EACTC,MAAO,KACPC,IAAK,KACLC,SAAU,KACVC,GAAI,KACJC,OAAQ,KACR5D,IAAKD,GAV+B,EAaH0C,qBAAW6L,IAAtCG,EAb8B,EAa9BA,eAAgBD,EAbc,EAadA,OAClBtT,EAAUjB,KAdsB,EAeZ+H,mBAASmJ,IAfG,mBAe/BlN,EAf+B,KAexBuE,EAfwB,OAgBHR,mBAAS,IAhBN,mBAgB/BuN,EAhB+B,KAgBjBC,EAhBiB,OAiBVxN,mBAAS,IAjBC,mBAiB/ByN,EAjB+B,KAiBvBC,EAjBuB,OAkBZ1N,mBAASsN,GAlBG,mBAkB/BK,EAlB+B,KAkBxBC,EAlBwB,OAoBN5N,mBAAsB,MApBhB,mBAoB/B6N,EApB+B,KAoBrBC,EApBqB,OAqBV9N,mBAAsB,MArBZ,mBAqB/B+N,EArB+B,KAqBvBC,EArBuB,KAuBhCC,EAASC,OAAO/R,KAAKsR,GAAQvS,KAAI,SAACsB,GACtC,OAAOiR,EAAOjR,GAAK,MASf2R,EAAa,SAAC3Q,GAAe,IACzBb,EAAiBa,EAAK,GAAtBb,aACR6Q,EAAWC,EAAO9Q,KA+BdyR,EAAS,uCAAG,WAAO5Q,GAAP,eAAAL,EAAA,sEACUO,GAAWF,GADrB,OACViQ,EADU,OAEhBC,EAAUD,GAFM,2CAAH,sDAkBf,OAbApM,qBAAU,WACJtD,GAAyB,IAAlByO,EAAOjM,QAChB6N,EAAU,2BAAKT,GAAN,IAAa3P,IAAKD,KAEzB0O,EAAenO,WACjB8P,EAAU,2BACLT,GADI,IAEP3P,IAAKD,EACLsQ,WAAY5B,EAAenO,eAG9B,CAACP,EAAK4P,EAAOlB,EAAgBD,IAG9B,eAACpT,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,UACE,cAAC,GAAD,IAEA,cAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACM,EAAA,EAAD,CAAYV,UAAWD,EAAQuL,MAA/B,yIAEF,eAACrL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,SACE,cAACW,EAAA,EAAD,CAAME,MAAI,EAAV,SAAYkT,EAAOjM,OAAS,GAAK,cAACgM,GAAD,QAEnC,eAACnT,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,UACE,cAACW,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CAAcwQ,YAtEJ,SAAC7N,GACnBA,IAAUkN,IAAWyE,EAASN,GAC9B9M,EAASvE,GACTuR,EAAW,SAqEL,cAACpU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI+U,GAAI,EAAvB,SACGrS,IAAUkN,IACT,cAAC,GAAD,CACEoC,cAhEQ,SAAC/N,GAAU,IACvBgO,EAAmBhO,EAAnBgO,KAAmBhO,EAAb6O,KAAa7O,EAAP/D,GAEpBmU,EAAS,2BAAKD,GAAN,IAAarM,YAAakK,EAAMhK,MAAOqM,EAAUpM,IAAKsM,MA8DlD1C,YAAayC,EACbxC,UAAW0C,YAMrB,cAAC5U,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,EAAG8U,GAAI,GAAInV,UAAWD,EAAQgB,MAA7C,SACE,qBAAKf,UAAWD,EAAQkU,cAAxB,SACE,cAAC1H,GAAD,CACE5D,KAAK,SACL6D,WAAYwI,EACZvI,KAAM6H,GAAUQ,EAChBrT,UAxEoB,CAC5B,CAAEU,GAAI,UAAWiT,SAAS,EAAO1S,MAAO,gEACxC,CAAEP,GAAI,UAAWiT,SAAS,EAAO1S,MAAO,mCAExC,CAAEP,GAAI,WAAYiT,SAAS,EAAO1S,MAAO,qDAsEjCuK,YAAamH,EAAa,GAC1BjH,OAAQvH,SAKd,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,eAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAI8U,GAAI,GAAInV,UAAWD,EAAQgB,MAA9C,UACE,cAACd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACM,EAAA,EAAD,CAAYV,UAAWD,EAAQuL,MAA/B,8HAED,UAAA8I,EAAa,UAAb,eAAiBiB,aAChB,kGACejB,EAAa,GAAGiB,WAD/B,2BAMD,UAAAjB,EAAa,UAAb,eAAiBkB,UAChB,8GAAqBlB,EAAa,GAAGkB,WAGvC,cAAC/I,GAAD,CACE5D,KAAK,UACL6D,WAAYwI,EACZvI,KAAM2H,EACN3S,UA7FsB,CAC5B,CAAEU,GAAI,UAAWiT,SAAS,EAAO1S,MAAO,gEACxC,CAAEP,GAAI,UAAWiT,SAAS,EAAO1S,MAAO,mCACxC,CAAEP,GAAI,SAAUiT,SAAS,EAAO1S,MAAO,iHACvC,CAAEP,GAAI,MAAOiT,SAAS,EAAO1S,MAAO,8CACpC,CAAEP,GAAI,WAAYiT,SAAS,EAAO1S,MAAO,0DACzC,CAAEP,GAAI,OAAQiT,SAAS,EAAM1S,MAAO,wCACpC,CAAEP,GAAI,OAAQiT,SAAS,EAAM1S,MAAO,4BACpC,CAAEP,GAAI,UAAWiT,SAAS,EAAM1S,MAAO,iHACvC,CAAEP,GAAI,UAAWiT,SAAS,EAAM1S,MAAO,iHAEvC,CAAEP,GAAI,WAAYiT,SAAS,EAAO1S,MAAO,4BACzC,CAAEP,GAAI,cAAeiT,SAAS,EAAO1S,MAAO,sFChF1CyN,IARYpR,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiR,OAAQ,CACN3Q,UAAW,aAKE6Q,cAAW,gBAAGC,EAAH,EAAGA,QAAH,MAAkB,CAC9C1P,KAAM,CACJF,MAAO4P,EAAQC,QAAQC,KACvB,YAAa,CACX9P,MAAO4P,EAAQC,QAAQC,OAI3BC,QAAS,MARQJ,EASf,SAACtQ,GAAD,OAAuB,cAAC2Q,GAAA,EAAD,aAAOhQ,MAAM,WAAcX,QAuFvC4Q,GArFM,SAAC,GAA2B,IAAzB6E,EAAwB,EAAxBA,WAAwB,EAS1CjO,qBAAWZ,IAPba,EAF4C,EAE5CA,aACAiO,EAH4C,EAG5CA,cACAC,EAJ4C,EAI5CA,cACA/N,EAL4C,EAK5CA,WACAD,EAN4C,EAM5CA,QACA0C,EAP4C,EAO5CA,WACAuL,EAR4C,EAQ5CA,WAEmBnO,EAAalD,KAA1Be,SAcR,OACE,cAAC0F,EAAA,EAAD,CAAac,UAAU,WAAvB,SACE,cAACgF,GAAA,EAAD,CACEvC,aAAW,SACXI,KAAG,EACH9F,KAAK,SACL7F,MAAO4E,EACPyB,SAnBmB,SAAC1G,GACxBgF,EAAQwD,iBACR,IAAM/D,EAAKzE,EAAM0E,OAA4BrE,MAE7C0S,EAActO,GACdiD,EAAW5C,EAAalD,KAAKsD,UAS3B,SAOE,eAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,WAAvC,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC0Q,GAAA,EAAD,CACE/N,MAAOmN,GACPa,QAAS,cAAC,GAAD,IACTpO,MAAM,iCACN2I,SAAUkK,MAId,cAACtV,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC0Q,GAAA,EAAD,CACE/N,MAAOmN,GACP5E,SAAUkK,EACVzE,QAAS,cAAC,GAAD,IACTpO,MAAM,qCAIV,cAACzC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC0Q,GAAA,EAAD,CACE/N,MAAOmN,GACP5E,SAAUkK,EACVzE,QAAS,cAAC,GAAD,IACTpO,MAAM,qCAITgF,IAAeuI,IACd,cAAChQ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACF,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAG1B,WAAW,WAAvC,UACE,cAACa,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACuJ,EAAA,EAAD,CACEvH,GAAG,uBACHgH,SA/CQ,SAAC1G,GACzB,IAAMkT,EAAKlT,EAAM0E,OAA4BrE,MAC7C2S,EAAcE,IA8CEjT,MAAM,gDACN2I,SAAUkK,EACVzS,MAAO4S,MAGX,cAACzV,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,KAAD,mB,kDCtGZyV,GAAkBC,aAAOC,KAAPD,EAAe,gBAAG7W,EAAH,EAAGA,MAAH,MAAgB,CACrD,2BAA4B,CAC1BqC,QAASrC,EAAM8B,QAAQ,IAEzB,2BAA4B,CAC1BO,QAASrC,EAAM8B,QAAQ,QAUZ,SAASiV,GAAYjW,GAAQ,IAClCoJ,EAAkCpJ,EAAlCoJ,QAASiE,EAAyBrN,EAAzBqN,OAAQrF,EAAiBhI,EAAjBgI,KAAMkO,EAAWlW,EAAXkW,OAa/B,OACE,8BACE,eAACJ,GAAD,CACEpC,WAAW,EACXtK,QAdc,WAClB+M,OAAOC,SAASC,SAEhBjN,GAAQ,IAYJkF,kBAAgB,0BAChBtG,KAAMA,EAJR,UAME,cAACsO,GAAA,EAAD,CACEjU,GAAG,0BACH6G,MAAO,CAAE3H,QAAS,aAFpB,+GAMA,cAACgV,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,eAAC5V,EAAA,EAAD,CAAY6V,cAAY,EAAxB,0EAAqCP,OAEvC,eAACQ,GAAA,EAAD,CAAexN,MAAO,CAAE1J,eAAgB,iBAAxC,UACE,cAACiB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNgW,WAAS,EACTlU,QA1BY,WACpB0T,OAAOC,SAASC,UAqBV,8DAQA,cAAC5V,EAAA,EAAD,CAAQgC,QAAS4K,EAAjB,SACE,cAAC,IAAD,CAAkBnE,MAAO,CAAEvI,MAAO,MAAO4O,SAAU,oBClD/D,IAAMvQ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0B,KAAM,CACJmT,SAAU,GAEZjT,MAAO,CACLQ,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,SACXkB,MAAOzB,EAAMqR,QAAQgC,KAAK0B,WAE5BhT,MAAO,CACLK,SAAU,OACV4S,UAAWhV,EAAM8B,QAAQ,IAE3BwK,MAAO,CACLjK,QAASrC,EAAM8B,QAAQ,GACvBvB,UAAW,eAKXkH,GAAqB,CACzBpC,KAAM,CACJuD,OAAQ,KACRD,QAAS,IACT6B,IAAK,GACLY,SAAU,GACV5E,KAAM,GACND,KAAM,GACN8E,SAAU,GACV/E,UAAW,GACXF,SAAU,GACVsR,QAAS,KAIAC,GAAW,WACRC,cAAd,IAD4B,EAG1BtP,qBAAW6L,IADLG,EAFoB,EAEpBA,eAAgBD,EAFI,EAEJA,OAAQE,EAFJ,EAEIA,gBAFJ,EAKJ1M,mBAAS,IALL,mBAKrB4F,EALqB,KAKfoK,EALe,OAMQhQ,mBAAS,KANjB,mBAMrBa,EANqB,KAMT8N,EANS,OAQY3O,mBAASJ,IARrB,mBAQrBc,EARqB,KAQPuP,EARO,KAStB9J,EAAUrC,uBAAY,SAAC8B,GAC3B3H,QAAQC,IAAI,YAAa0H,GACzBoK,EAAQpK,KACP,IAZyB,EAcU5F,mBAAS,IAdnB,mBAcrBkQ,EAdqB,KAcRC,EAdQ,OAeAnQ,oBAAS,GAfT,mBAerBoQ,EAfqB,KAebC,EAfa,OAgBArQ,mBAAS,MAhBT,mBAgBrBmP,EAhBqB,KAgBbmB,EAhBa,OAiBEtQ,mBAAS,MAjBX,mBAiBrBuQ,EAjBqB,KAiBZC,EAjBY,OAkBQxQ,mBAAS,MAlBjB,mBAkBrB6O,EAlBqB,KAkBT4B,EAlBS,KAwB5BpP,qBAAU,WACJmL,EAAOjM,OAAS,GAAGmM,EAAgB,MACtC,IAEH,IAAM1L,EAAe8C,uBACnB,SAAC4M,GACCT,EAAgB,2BACXvP,GADU,IAEblD,KAAK,2BACAkD,EAAalD,MADd,IAEFuD,OAAQ2P,EAAc/N,IACtB7B,QAAS4P,EAAcC,OACvBhO,IAAK+N,EAAc/N,IACnBY,SAAUmN,EAAc5O,KACxBtD,KAAMkS,EAAclS,KACpBE,KAAMgS,EAAcE,KACpBjS,KAAM,IACN6E,SAAUkN,EAAclN,SACxBqM,QAASa,EAAcE,YAI7B,CAAClQ,IAGG2C,EAAcS,uBAClB,SAACrF,GACCwR,EAAgB,2BACXvP,GADU,IAEblD,KAAK,2BACAkD,EAAalD,MADd,IAEFiB,UAAWA,SAIjB,CAACiC,IAGG0C,EAAYU,uBAChB,SAAC4M,GACC,IAAMG,GACJC,WAAWJ,GAAiBI,WAAWpQ,EAAalD,KAAKqS,UACzDkB,QAAQ,GAEJC,EAAS,IAAIC,OAAOJ,GACpBK,EAAMF,EAAOhN,eAAe,SAC5BmN,EAAeH,EAAOhN,eAAe,SAC3CiM,EAAgB,2BACXvP,GADU,IAEblD,KAAK,2BACAkD,EAAalD,MADd,IAEFkB,KAAMwS,EACNE,aAAcD,EACdxS,KAAM+R,SAIZ,CAAChQ,IAOGE,EAAU,CACdI,eACAoD,eANqBN,uBAAY,WACjCmM,EAAgBrQ,MACf,KAOG1G,EAAUjB,KAuEhB,OACE,eAAC4H,GAAgBwR,SAAjB,CACEpV,MAAO,CACLyE,eACAE,UACAC,aACAgO,aACAlO,uBAxEyB,SAACwD,GAC9B8L,EAAgB,2BACXvP,GADU,IAEblD,KAAK,2BAAMkD,EAAalD,MAApB,IAA0BuD,OAAQoD,QAsEpCf,YACAC,cACAsL,gBACAC,cArEgB,SAACzK,GACrBsM,EAActM,IAqEVb,WAlEa,SAACa,GAClB8L,EAAgB,2BACXvP,GADU,IAEblD,KAAK,2BAAMkD,EAAalD,MAApB,IAA0BsD,QAASqD,SAoDzC,UAcE,eAAC/K,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,UACE,cAAC,GAAD,IACA,cAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACM,EAAA,EAAD,CAAYV,UAAWD,EAAQuL,MAA/B,+FAEF,cAACrL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAzB,SACE,cAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI+U,GAAI,EAAvB,SACE,cAAC,GAAD,CAAcI,WAAY9I,EAAKrF,OAAS,UAI9C,cAACnH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAI8U,GAAI,GAAInV,UAAWD,EAAQgB,MAA9C,SACE,cAACwL,GAAD,CACE5D,KAAK,UACL6D,WAAY,kBAAM,GAClB/K,UA/EoB,CAC5B,CAAEU,GAAI,UAAWiT,SAAS,EAAO1S,MAAO,kCACxC,CAAEP,GAAI,MAAOiT,SAAS,EAAO1S,MAAO,8CACpC,CAAEP,GAAI,WAAYiT,SAAS,EAAO1S,MAAO,0DACzC,CAAEP,GAAI,OAAQiT,SAAS,EAAM1S,MAAO,wCACpC,CAAEP,GAAI,OAAQiT,SAAS,EAAM1S,MAAO,4BACpC,CAAEP,GAAI,WAAYiT,SAAS,EAAO1S,MAAO,4BACzC,CAAEP,GAAI,YAAaiT,SAAS,EAAO1S,MAAO,4EAC1C,CAAEP,GAAI,SAAUiT,SAAS,EAAO1S,MAAO,KAwE/BgK,WAAS,EACTD,KAAM,GACNG,KAAG,EACHI,QAASA,EACTF,YAAY,EACZI,eAAgB,QAGpB,cAACjN,EAAA,EAAD,CAAMC,WAAS,EAACZ,eAAe,SAA/B,SACE,cAACW,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACuJ,EAAA,EAAD,CACElJ,QAAQ,WACR2B,GAAG,8BACHO,MAAM,2EACNyV,WAAS,EACTC,QAAS,EACTtV,MAAOiU,EACP5N,SAjMe,SAAC1G,GAC1BuU,EAAevU,EAAM0E,OAAOrE,QAiMlBkG,MAAO,CAAEpI,MAAO,WAItB,cAACX,EAAA,EAAD,CAAME,MAAI,EAACb,eAAe,SAA1B,SACE,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGxB,eAAe,SAA3C,SACGmN,EAAKrF,OAAS,GACb,qCACE,cAACnH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAId,eAAe,SAAlC,SACE,qBAAK0J,MAAO,CAAEzJ,UAAW,UAAzB,SACG8T,EAAOjM,OAAS,GAAK,cAACgM,GAAD,QAG1B,eAACnT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAId,eAAe,SAAlC,UACGwF,QAAQC,IAAI,iBAAkBsO,GAC9BC,GACC,qBAAKtK,MAAO,CAAEzJ,UAAW,UAAzB,SACE,cAACgB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN8B,QArGC,WAMrB,IAAM8V,EAAiB5L,EAAK1K,KAAI,SAACuW,GAC/B,MAAO,CACLC,QAAS,EACTC,QAAS9Q,EACTxC,KAAMoO,EAAepO,KACrBC,UAC+B,IAA7BmO,EAAenO,UAAkB,KAAOmO,EAAenO,UACzDC,SAAUsQ,EACVrQ,KAAMiT,EAAUjT,KAChBC,UAAWgT,EAAUhT,UACrBC,KAAM+S,EAAUL,aAChBzS,KAAM8S,EAAU9S,KAChB8P,QAASyB,Od3GV,WAAP,iCc+GI0B,CAAS,GAAD,OAAI9V,EAAJ,oBAA8B0V,GAAWK,MAAK,SAACrU,GACpB,OAA7BA,EAAKF,SAASwU,aAChBzB,GAAU,GACVC,EAAU9S,EAAKA,KAAKuU,QACpBvB,EAAWhT,EAAKA,KAAKsD,UAEvB7C,QAAQC,IAAIV,OAsEI,gJAehB,cAAC0R,GAAD,CACEjO,KAAMmP,EACNjB,OAAQoB,EACRlO,QAAS,kBAAMgO,GAAWD,IAC1B9J,OA3HiB,WACrBvH,GAAYwR,EAASpB,U,6BC3KnBhX,GAAQ6Z,aAAY,CACxBxI,QAAS,CACPC,QAAS,CAEPC,KAAM,WAERwD,UAAW,CAETxD,KAAM,WAERuI,MAAO,CAELvI,KAAM,cAuDGwI,OAlDf,WAAgB,IAAD,EACSlS,mBAAS,MADlB,mBACNjC,EADM,KACDoU,EADC,OAEenS,mBAAS,IAFxB,mBAENwM,EAFM,KAEE4F,EAFF,OAG6BpS,mBAAS,IAHtC,mBAGNyM,EAHM,KAGUC,EAHV,KAqBb,OAdArL,qBAAU,WACRpD,QAAQC,IAAI,QACZ,IAAMmU,EAAgBtW,SAASC,eAAe,WAC1CqW,GACFvU,GAAYuU,EAASpW,OAAO4V,MAAK,SAACrU,GAChC4U,EAAU5U,GACW,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM+C,SACRmM,EAAgBlP,EAAK,IAEvB2U,EAAOE,EAASpW,YAGnB,CAAC8B,IAGF,cAACuU,GAAA,EAAD,CAAena,MAAOA,GAAtB,SACE,cAACmU,GAAgB+E,SAAjB,CACEpV,MAAO,CAAEuQ,SAAQ4F,YAAW3F,iBAAgBC,mBAD9C,SAIE,qBAAKvT,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoZ,OAAK,EAAChK,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOgK,OAAK,EAAChK,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,CAAQxK,IAAKA,MAEf,cAAC,IAAD,CAAOwK,KAAK,OAAZ,SACE,cAAC,GAAD,kBCtDDiK,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnX,SAASC,eAAe,SAM1BwW,O","file":"static/js/main.193b3afa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    dashboard: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      height: \"75vh\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n    button:{\r\n      minWidth:\"250px\",\r\n      marginBottom:\"20px\"\r\n\r\n    },\r\n    link:{\r\n      textDecoration: \"none\",\r\n    }\r\n  })\r\n);\r\n\r\nexport const Dashboard = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.dashboard}>\r\n      <Grid container >\r\n        <Grid item xs={12} lg={6} >\r\n          <Link className={classes.link} to=\"/orders\">\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n              <Typography>ΑΝΑΖΗΤΗΣΗ ΠΑΡΑΓΓΕΛΙΑΣ</Typography>\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item  xs={12} lg={6}>\r\n          <Link className={classes.link} to=\"/new\">\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n              <Typography>ΝΕΑ ΠΑΡΑΓΓΕΛΙΑ</Typography>\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    createStyles,\r\n    makeStyles,\r\n    Theme,\r\n  } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport {HeadCell,Data} from '../../types'\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      width: \"100%\",\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: \"rect(0 0 0 0)\",\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: \"hidden\",\r\n      padding: 0,\r\n      position: \"absolute\",\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })\r\n);\r\n\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property\r\n  ) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n  headCells: HeadCell[]\r\n}\r\n\r\nexport default function EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {headCells, classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler =\r\n    (property) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n","const ulr: any = document.getElementById(\"apiUrl\");\r\n\r\nexport const domain = ulr.value;\r\n","import { domain } from \"../config\";\r\nconst groupBy = (keys: any) => (array: any) =>\r\n  array.reduce((objectsByKeyValue: any, obj: any) => {\r\n    const value = keys.map((key: any) => obj[key]).join(\"-\");\r\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat({\r\n      ...obj,\r\n      generatedKey: value,\r\n    });\r\n\r\n    return objectsByKeyValue;\r\n  }, {});\r\n\r\nconst constructApi = (url, params) => {\r\n  const queryString = encodeURIComponent(JSON.stringify(params));\r\n  return url + queryString;\r\n};\r\n\r\nexport async function getData(url = \"\", params: any = {}, short = false) {\r\n  const response = await fetch(constructApi(url, params));\r\n  const data = await response.json(); // parses JSON response into native JavaScript objects\r\n  const groupFincodeStatus = groupBy([\r\n    \"trndate\",\r\n    \"fincode\",\r\n    \"status\",\r\n    \"comments\",\r\n  ]);\r\n  return short ? groupFincodeStatus(data) : data;\r\n}\r\n\r\n// returs client orders\r\nexport const fechOrders = async (data) => {\r\n  const result = await getData(\r\n    `${domain}/erpapi/getorders/obj?pars=`,\r\n    data,\r\n    true\r\n  );\r\n  return result;\r\n};\r\n\r\nexport const fechGroups = async () => {\r\n  const data = {\r\n    Company: 1,\r\n  };\r\n\r\n  const result = await getData(`${domain}/erpapi/getgroups?pars=`, data);\r\n  return await result;\r\n};\r\n\r\n//GET /erpapi/getbranches/obj\r\n\r\nexport const getbranches = async (afm: string) => {\r\n  const data = {\r\n    Company: 1,\r\n    AFM: afm,\r\n  };\r\n\r\n  const result = await getData(`${domain}/erpapi/getbranches/obj?pars=`, data);\r\n  console.log(\"getbranches\", result);\r\n  return result;\r\n};\r\n//put order\r\nconst defaults = [\r\n  {\r\n    Company: 1,\r\n    bOption: 0,\r\n    trdr: 3975,\r\n    trdbranch: 125,\r\n    comments: \"test1\",\r\n    mtrl: 10069,\r\n    commentS1: \"test1\",\r\n    qtY1: 0,\r\n    qtY2: 0,\r\n  },\r\n  {\r\n    Company: 1,\r\n    bOption: 0,\r\n    trdr: 3975,\r\n    trdbranch: 125,\r\n    comments: \"test2\",\r\n    mtrl: 10069,\r\n    commentS1: \"test2\",\r\n    qtY1: 0,\r\n    qtY2: 0,\r\n  },\r\n  {\r\n    Company: 1,\r\n    bOption: 0,\r\n    trdr: 3975,\r\n    trdbranch: 125,\r\n    comments: \"test3\",\r\n    mtrl: 10069,\r\n    commentS1: \"test13\",\r\n    qtY1: 0,\r\n    qtY2: 0,\r\n  },\r\n];\r\n\r\n// Example POST method implementation:\r\nexport async function postData(url = \"\", data = defaults) {\r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  });\r\n\r\n  return { response, data: await response.json() }; // parses JSON response into native JavaScript objects\r\n}\r\n\r\n// /erpapi/putorder\r\n//${domain}/erpapi/getorders/pdf?pars=%7B%22Company%22%3A1%2C%22Id%22%3A%22179631%22%7D//\r\n\r\nexport async function downloadPdf(payload: any, code) {\r\n  try {\r\n    const url = `${domain}/erpapi/getorders/pdf?pars=`;\r\n\r\n    const response = await fetch(constructApi(url, { Company: 1, id: code }), {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const pdf = await response.json();\r\n    const linkSource = `data:application/pdf;base64,${pdf}`;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = `${payload}.pdf`;\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.click();\r\n  } catch (err: any) {\r\n    throw new Error(err?.response?.data?.code || err.message);\r\n  }\r\n}\r\n","import {createContext} from \"react\";\r\nexport interface IAppProps {}\r\nexport const defaultValues: any = {};\r\nexport const NewOrderContext = createContext(defaultValues);\r\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport { domain } from \"../config\";\r\nimport { Fragment, useContext, useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { getData } from \"../api/fetch\";\r\nimport { NewOrderContext } from \"../pages/NewOrder/NewOrderContext\";\r\n\r\ninterface CountryType {\r\n  name: string;\r\n  data: any;\r\n}\r\n\r\nexport default function Asynchronous() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const v = e.target.value;\r\n    if (v.length > 2) {\r\n      setLoading(true);\r\n      setValue(v);\r\n    }\r\n  };\r\n  const { selectedInfo, handleSetSelectedValue, actions, orderColor } =\r\n    useContext(NewOrderContext);\r\n  const { fincode, search } = selectedInfo.data;\r\n\r\n  const { getSelection } = actions;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState<CountryType[]>([]);\r\n  const [value, setValue] = useState(\"\");\r\n  // const [selectedValue, setSelectedValue] = useState(searchValue);\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      if (value) {\r\n        const data = {\r\n          Company: 1,\r\n          SearchValue: value,\r\n          BOption: orderColor,\r\n          DFrom: null,\r\n          DTo: null,\r\n          TakeRecs: null,\r\n          Id: null,\r\n          LastId: null,\r\n          AFM: fincode,\r\n        };\r\n\r\n        const response: any = await getData(\r\n          `${domain}/erpapi/getitems/obj?pars=`,\r\n          data\r\n        );\r\n        //await sleep(1e3); // For demo purposes.\r\n\r\n        const list: any = response.map((item: any) => {\r\n          return { name: item.name, value: item.code, data: item };\r\n        });\r\n\r\n        if (active) {\r\n          setOptions(list ? list : []);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  // useEffect(() => {\r\n  //   if(!search){\r\n  //   setSelectedValue(search)\r\n  //   }\r\n  // },[search]);\r\n\r\n  const filterOptions = createFilterOptions({\r\n    stringify: (option: any) => option.value,\r\n  });\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        filterOptions={filterOptions}\r\n        id=\"asynchronous-demo\"\r\n        style={{ width: 300 }}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        onChange={(e, v) => {\r\n          if (v) {\r\n            const selectedData = options.filter(\r\n              (d: any) => d.value === v.value\r\n            );\r\n            selectedData && getSelection(v.data);\r\n          } else {\r\n            handleSetSelectedValue(\"\");\r\n          }\r\n        }}\r\n        getOptionSelected={(option, value) => option.code === value.code}\r\n        renderOption={(option) =>\r\n          `${option?.data?.sku || option.data.code} -- ${option.name}`\r\n        }\r\n        options={options}\r\n        loading={loading}\r\n        value={search}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <Fragment>\r\n                  {loading ? (\r\n                    <CircularProgress color=\"inherit\" size={20} />\r\n                  ) : null}\r\n                  {params.InputProps.endAdornment}\r\n                </Fragment>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport {\r\n  TableRow,\r\n  Input,\r\n  TableCell,\r\n  IconButton,\r\n  FormControl,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { SaveRounded } from \"@material-ui/icons\";\r\n\r\nimport Autocomplete from \"../AutoComplete\";\r\n\r\nimport { fechGroups } from \"../../api/fetch\";\r\nimport { NewOrderContext } from \"../../pages/NewOrder/NewOrderContext\";\r\n\r\ninterface Props {\r\n  saveOrder: (values: any) => void;\r\n}\r\n\r\nexport const NewRow = ({ saveOrder }: Props) => {\r\n  const { selectedInfo, setWeight, actions, setComments, setFinCode } =\r\n    useContext(NewOrderContext);\r\n\r\n  const { mtrlname, qtY1, qtY2, xdocname, commentS1, search } =\r\n    selectedInfo.data;\r\n\r\n  const [groups, setGroups] = useState([]);\r\n  const [group, setGroup] = useState(selectedInfo.data.fincode);\r\n\r\n  const handleChange = (e: any) => {\r\n    let val = e.target.value;\r\n    setWeight(val);\r\n  };\r\n\r\n  const handleChangeComments = (e: any) => {\r\n    let val = e.target.value;\r\n    setComments(val);\r\n  };\r\n\r\n  const handleSelectFincode = (e: any) => {\r\n    let val = e.target.value;\r\n    actions.resetSelection();\r\n    setGroup(val);\r\n    setFinCode(val);\r\n  };\r\n\r\n  const getGroups = useCallback(async () => {\r\n    const groups: any = await fechGroups();\r\n    setGroups(groups);\r\n\r\n    //sets default value\r\n    setGroup(groups[0].name);\r\n    setFinCode(groups[0].name);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, [getGroups]);\r\n\r\n  const handleSave = () => {\r\n    console.log(\"selectedInfo\", selectedInfo.data);\r\n    if (selectedInfo.data.qtY2 < 1) {\r\n      return alert(\r\n        \"Δεν έχει συμπληρωθεί το πεδίο – βέργες έλαχιστη ποσότητα 1\"\r\n      );\r\n    }\r\n    saveOrder(selectedInfo.data);\r\n    actions.resetSelection();\r\n  };\r\n\r\n  const Qty1 = qtY1.toLocaleString(\"el-GR\");\r\n\r\n  useEffect(() => {\r\n    if (qtY2 === \"1\") {\r\n      setWeight(qtY2);\r\n    }\r\n  }, [qtY2]);\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <FormControl>\r\n          {groups.length > 0 && (\r\n            <Select onChange={handleSelectFincode} name=\"fincode\" value={group}>\r\n              {groups.map((v: any, i) => (\r\n                <MenuItem value={v.name}>{v.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </FormControl>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete />\r\n      </TableCell>\r\n      <TableCell>\r\n        <Input value={mtrlname} disabled title={mtrlname} />\r\n      </TableCell>\r\n      <TableCell>\r\n        <TextField\r\n          id=\"number\"\r\n          name=\"qtY2\"\r\n          value={qtY2}\r\n          onChange={handleChange}\r\n          type=\"number\"\r\n        />\r\n      </TableCell>\r\n      <TableCell>\r\n        <Input name=\"qtY1\" value={Qty1} disabled />\r\n      </TableCell>\r\n      <TableCell>\r\n        {xdocname ? (\r\n          <img\r\n            alt=\"xdocname\"\r\n            src={`https://alfa-press.gr/wp-content/themes/porto-child/erp/icons/${xdocname}`}\r\n            height=\"90\"\r\n          />\r\n        ) : (\r\n          <ImageIcon />\r\n        )}\r\n      </TableCell>\r\n      <TableCell>\r\n        <Input\r\n          name=\"commentS1\"\r\n          value={commentS1}\r\n          onChange={handleChangeComments}\r\n        />\r\n      </TableCell>\r\n      {search && (\r\n        <TableCell>\r\n          <IconButton onClick={handleSave} color=\"primary\" component=\"span\">\r\n            <SaveRounded />\r\n          </IconButton>\r\n        </TableCell>\r\n      )}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport moment from \"moment\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\n\r\nimport EnhancedTableHead from \"./Head\";\r\nimport { NewRow } from \"./NewRow\";\r\n\r\nimport { HeadCell, Data } from \"../../types\";\r\nimport { AnyTxtRecord } from \"dns\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { SignalCellularConnectedNoInternet0BarTwoTone } from \"@material-ui/icons\";\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\nfunction getComparator<Key extends keyof Data>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string }\r\n) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      width: \"100%\",\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      // minWidth: 750,\r\n      border: \"none\",\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: \"rect(0 0 0 0)\",\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: \"hidden\",\r\n      padding: 0,\r\n      position: \"absolute\",\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })\r\n);\r\n\r\ntype TableProps = {\r\n  onRowclick: (data: any) => void;\r\n  rows: Data[];\r\n  headCells: any;\r\n  name: string;\r\n  clearCell?: boolean;\r\n  maxCols?: number;\r\n  add?: boolean;\r\n  orderCol?: any;\r\n  getRows?: (data: any) => void;\r\n  pagination?: boolean;\r\n  stickyHeader?: boolean;\r\n  selectedRow?: any;\r\n  rowsPerPagenum?: number;\r\n  getPdf?: any;\r\n};\r\n\r\nexport default function DataTable(props: TableProps) {\r\n  const {\r\n    onRowclick,\r\n    rows,\r\n    headCells,\r\n    name,\r\n    clearCell = false,\r\n    maxCols = 100,\r\n    add = false,\r\n    orderCol = \"\",\r\n    pagination = true,\r\n    stickyHeader,\r\n    getRows,\r\n    selectedRow = null,\r\n    rowsPerPagenum = 25,\r\n    getPdf,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>(orderCol);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(rowsPerPagenum);\r\n\r\n  const [tableRows, setRow] = useState(rows);\r\n  const [addRow, setAddwRow] = useState(false);\r\n  // const [status, setStatus] = useState(null);\r\n\r\n  let status = null;\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Data\r\n  ) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n  const handleAddRowClick = (event: React.MouseEvent<unknown>) => {\r\n    event.preventDefault();\r\n    setAddwRow(!addRow);\r\n  };\r\n\r\n  const handleSaveOrder = (order: any) => {\r\n    tableRows.push(order);\r\n    getRows(tableRows);\r\n\r\n    setRow(tableRows);\r\n\r\n    setAddwRow(false);\r\n  };\r\n  const handleRemoveOrder = (index: any) => {\r\n    const newtableRows = tableRows.filter((data, i) => index !== i);\r\n    getRows(newtableRows);\r\n\r\n    setRow(newtableRows);\r\n\r\n    setAddwRow(false);\r\n  };\r\n\r\n  const handleRowClick = (event: React.MouseEvent<unknown>, rowData: Data) => {\r\n    event.preventDefault();\r\n    onRowclick([rowData]);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    !add && setRow(rows);\r\n  }, [rows, add]);\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form>\r\n        <TableContainer>\r\n          <Table\r\n            stickyHeader={stickyHeader}\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={\"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(tableRows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row: any, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleRowClick(event, row)}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={row.fincode === selectedRow?.fincode}\r\n                    >\r\n                      {headCells.map((r: any, i: number) => {\r\n                        let data: any = row[r.id];\r\n\r\n                        if (r.id === \"trndate\") {\r\n                          data = moment(row[r.id]).format(\"DD/MM/YY\");\r\n                        }\r\n\r\n                        if (r.id === \"qtY1\") {\r\n                          data = data.toLocaleString(\"el-GR\");\r\n                        }\r\n\r\n                        if (r.id === \"xdocname\") {\r\n                          const imagefile = row[r.id];\r\n                          const path = `https://alfa-press.gr/wp-content/themes/porto-child/erp/icons/${imagefile}`;\r\n\r\n                          data = imagefile ? (\r\n                            <img alt=\"xdocname\" src={path} height=\"90\" />\r\n                          ) : (\r\n                            <ImageIcon />\r\n                          );\r\n                        }\r\n\r\n                        if (r.id === \"status\") {\r\n                          console.log(row[\"series\"]);\r\n                          status =\r\n                            row[\"series\"] === 9021\r\n                              ? \"AVAFO_LEYKO.jpg\"\r\n                              : \"XRWMA.jpg\";\r\n                        }\r\n\r\n                        return <TableCell key={i}>{data}</TableCell>;\r\n                      })}\r\n                      {name === \"master\" && (\r\n                        <TableCell style={{ padding: \"0px\" }}>\r\n                          <Button\r\n                            onClick={() =>\r\n                              getPdf(row[\"fincode\"], row[\"findoc\"])\r\n                            }\r\n                          >\r\n                            <PictureAsPdfIcon\r\n                              style={{ color: \"red\", fontSize: \"40px\" }}\r\n                            />\r\n                          </Button>\r\n                        </TableCell>\r\n                      )}\r\n                      {clearCell && (\r\n                        <TableCell key={`${index}-cancel`}>\r\n                          <CancelIcon\r\n                            color=\"error\"\r\n                            onClick={() => handleRemoveOrder(index)}\r\n                          />\r\n                        </TableCell>\r\n                      )}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {addRow && <NewRow saveOrder={handleSaveOrder} />}\r\n              {add && (\r\n                <div style={{ margin: \"20px 0\" }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleAddRowClick}\r\n                  >\r\n                    {addRow ? \"ΑΚΥΡΩΣΗ\" : \"+\"}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              {/* {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )} */}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {pagination && (\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        )}\r\n      </form>\r\n      {status && name === \"details\" && (\r\n        <img\r\n          className=\"status\"\r\n          alt=\"xdocname\"\r\n          src={`https://alfa-press.gr/wp-content/themes/porto-child/erp/icons/${status}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export const DATE_SEARCH = \"dateSearch\";\r\nexport const PENDING = \"pending\";\r\nexport const profilColors = {\r\n  BLANK: \"1\",\r\n  WHITE: \"2\",\r\n  COLOR: \"3\",\r\n};\r\n\r\nexport const companies = {\r\n  ALFA: \"ALFA\",\r\n  ALOUSYSTEM: \"ALOUSYSTEM\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  withStyles,\r\n  Grid,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\r\n\r\nimport { PENDING, DATE_SEARCH } from \"../../../constants\";\r\n\r\ntype Props = {\r\n  optionValue: (value: string) => void;\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    radios: {\r\n      textAlign: \"left\",\r\n    },\r\n  })\r\n);\r\n\r\nconst GreenRadio = withStyles(({ palette }) => ({\r\n  root: {\r\n    color: palette.primary.main,\r\n    \"&$checked\": {\r\n      color: palette.primary.main,\r\n    },\r\n  },\r\n\r\n  checked: {},\r\n}))((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst OrderOptions = ({ optionValue }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = useState(PENDING);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const v = (event.target as HTMLInputElement).value;\r\n    setValue(v);\r\n    optionValue(v);\r\n  };\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup\r\n        aria-label=\"orders\"\r\n        name=\"orders\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <Grid container className={classes.radios}>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              value={PENDING}\r\n              control={<GreenRadio />}\r\n              label=\"Ανεκτέλεστες Παραγγελίες\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              value={DATE_SEARCH}\r\n              control={<GreenRadio />}\r\n              label=\"Σύνθετη Αναζήτηση\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default OrderOptions;\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  alpha,\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport moment from \"moment\";\r\n\r\ntype Props = {\r\n  getDateFrom: (date: Date | null) => void;\r\n  getDateTo: (date: Date | null) => void;\r\n  getSearchData: (data: {}) => void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    search: {\r\n      border: \"solid 1px\",\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"auto\",\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"12ch\",\r\n        \"&:focus\": {\r\n          width: \"20ch\",\r\n        },\r\n      },\r\n    },\r\n    date: {\r\n      textAlign: \"left\",\r\n    },\r\n  })\r\n);\r\n\r\nconst DatePickers = ({ getDateFrom, getDateTo, getSearchData }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // The first commit of Material-UI\r\n  const [selectedDateFrom, setSelectedDateFrom] = useState<Date | null>(\r\n    new Date()\r\n  );\r\n  const [selectedDateTo, setSelectedDateTo] = useState<Date | null>(new Date());\r\n  const handleDateChangeFrom = (date: Date | null) => {\r\n    setSelectedDateFrom(date);\r\n    getDateFrom(date);\r\n  };\r\n  const handleDateChangeTo = (date: Date | null) => {\r\n    setSelectedDateTo(date);\r\n    getDateTo(date);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const from = moment(selectedDateFrom).format(\"YYYYMMDD\");\r\n    const to = moment(selectedDateTo).format(\"YYYYMMDD\");\r\n\r\n    const search = { from, to, text };\r\n    getSearchData(search);\r\n  };\r\n\r\n  const dateFormat = \"dd-MM-yyyy\";\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container spacing={3} justifyContent=\"flex-start\">\r\n        <Grid container>\r\n          <Grid item xs={6} className={classes.date}>\r\n            <DatePicker\r\n              autoOk\r\n              disableToolbar\r\n              format={dateFormat}\r\n              margin=\"normal\"\r\n              id=\"Form\"\r\n              label=\"ΑΠΟ\"\r\n              value={selectedDateFrom}\r\n              onChange={handleDateChangeFrom}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.date}>\r\n            <DatePicker\r\n              autoOk\r\n              disableToolbar\r\n              margin=\"normal\"\r\n              id=\"date-picker-dialog\"\r\n              label=\"ΕΩΣ\"\r\n              format={dateFormat}\r\n              value={selectedDateTo}\r\n              onChange={handleDateChangeTo}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid container item xs={6} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <TextField\r\n                id=\"input-with-icon-grid\"\r\n                onChange={handleChange}\r\n                label=\"Κωδικός...\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <SearchIcon />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\r\n              ΑΝΑΖΗΤΗΣΗ{\" \"}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default DatePickers;\r\n","import { createContext, useState } from \"react\";\r\nexport interface IAppProps {}\r\nexport const defaultValues: any = {};\r\nexport const BranchesContext = createContext(defaultValues);\r\n","import { FormControl, Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\nimport React, { ReactElement, useContext, useEffect } from \"react\";\r\nimport { BranchesContext } from \"../../../context/BranchesContext\";\r\n\r\ninterface Props {}\r\n\r\nexport default function Branches({}: Props): ReactElement {\r\n  const { branch, selectedBranch, setSelectBranch } =\r\n    useContext(BranchesContext);\r\n\r\n  const handleSelectBranch = (e: any) => {\r\n    let val = e.target.value;\r\n    const selected = branch.find((data) => data.code === val);\r\n    setSelectBranch(selected);\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel className=\"branch\" id=\"demo-simple-select-label\">\r\n        ΚΑΤΑΣΤΗΜΑ\r\n      </InputLabel>\r\n      {branch.length > 0 && (\r\n        <Select\r\n          onChange={handleSelectBranch}\r\n          name=\"fincode\"\r\n          value={selectedBranch.code}\r\n        >\r\n          {branch.map((v: any, i) => (\r\n            <MenuItem value={v.code}>{v.address}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      )}\r\n    </FormControl>\r\n  );\r\n}\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, createStyles, makeStyles,Theme } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\ninterface IAppProps {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    link:{\r\n      textDecoration: \"none\",\r\n    }\r\n  })\r\n);\r\n\r\nconst BackToMenu: React.FunctionComponent<IAppProps> = (props) => {\r\n \r\n const classes = useStyles();\r\n \r\n return (\r\n    <Link className={classes.link} to=\"/#\">\r\n      <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n        Menu\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default BackToMenu;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport DataTable from \"../../components/table/Table\";\r\nimport { HeadCell } from \"../../types\";\r\n\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { PENDING } from \"../../constants\";\r\nimport OrderOptions from \"./components/OrderOptions\";\r\nimport DatePickers from \"./components/DatePickers\";\r\nimport Branches from \"../NewOrder/components/Branches\";\r\n\r\nimport { BranchesContext } from \"../../context/BranchesContext\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport BackToMenu from \"../../components/BackToMenu\";\r\nimport { fechOrders, downloadPdf } from \"../../api/fetch\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    table: {\r\n      overflow: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    table_wrapper: {\r\n      padding: theme.spacing(2),\r\n      border: \"1px solid #e0e0e0\",\r\n      borderRadius: \"5px\",\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const Orders = ({ afm }: any) => {\r\n  const defaultData = {\r\n    Company: 1,\r\n    SearchValue: null,\r\n    BOption: 3,\r\n    DFrom: null,\r\n    DTo: null,\r\n    TakeRecs: null,\r\n    Id: null,\r\n    LastId: null,\r\n    AFM: afm,\r\n  };\r\n\r\n  const { selectedBranch, branch } = useContext(BranchesContext);\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(PENDING);\r\n  const [orderDetails, setDetails] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [query, setQuery] = useState(defaultData);\r\n\r\n  const [dateFrom, setDateFrom] = useState<Date | null>(null);\r\n  const [dateto, setDateTo] = useState<Date | null>(null);\r\n\r\n  const master = Object.keys(orders).map((key) => {\r\n    return orders[key][0];\r\n  });\r\n\r\n  const optionValue = (value: string) => {\r\n    value === PENDING && setQuery(defaultData);\r\n    setValue(value);\r\n    setDetails([]);\r\n  };\r\n\r\n  const getDetails = (data: any) => {\r\n    const { generatedKey } = data[0];\r\n    setDetails(orders[generatedKey]);\r\n  };\r\n\r\n  const getSearchData = (data) => {\r\n    const { text, from, to } = data;\r\n    // post with data\r\n    setQuery({ ...query, SearchValue: text, DFrom: dateFrom, DTo: dateto });\r\n  };\r\n\r\n  const headCells: HeadCell[] = [\r\n    { id: \"fincode\", numeric: false, label: \"ΠΑΡΑΓΓΕΛΙΑ\" },\r\n    { id: \"trndate\", numeric: false, label: \"ΗΜ/ΝΙΑ\" },\r\n    // { id: \"status\", numeric: false, label: \"STATUS\" },\r\n    { id: \"download\", numeric: false, label: \"ΕΚΤΥΠΩΣΗ\" },\r\n  ];\r\n\r\n  const headCellsDetails: any = [\r\n    { id: \"fincode\", numeric: false, label: \"ΠΑΡΑΓΓΕΛΙΑ\" },\r\n    { id: \"trndate\", numeric: false, label: \"ΗΜ/ΝΙΑ\" },\r\n    { id: \"status\", numeric: false, label: \"ΣΤΑΔΙΟ ΕΠΕΞΕΡΓΑΣΙΑΣ\" },\r\n    { id: \"sku\", numeric: false, label: \"ΚΩΔΙΚΟΣ\" },\r\n    { id: \"mtrlname\", numeric: false, label: \"ΠΕΡΙΓΡΑΦΗ\" },\r\n    { id: \"qtY2\", numeric: true, label: \"ΒΕΡΓΕΣ\" },\r\n    { id: \"qtY1\", numeric: true, label: \"ΚΙΛΑ\" },\r\n    { id: \"qtY2COV\", numeric: true, label: \"ΒΕΡΓΕΣ ΕΚΤΕΛΕΣΜΕΝΕΣ\" },\r\n    { id: \"qtY2REM\", numeric: true, label: \"ΒΕΡΓΕΣ ΑΝΕΚΤΕΛΕΣΤΕΣ\" },\r\n    // { id: \"mtcomments\", numeric: false, label: \"ΚΩΔΙΚΟΣ\" },\r\n    { id: \"xdocname\", numeric: false, label: \"ΤΟΜΗ\" },\r\n    { id: \"mtcommentS1\", numeric: false, label: \"ΠΑΡΑΤΗΡΗΣΕΙΣ\" },\r\n  ];\r\n\r\n  const getOrders = async (data) => {\r\n    const orders: any = await fechOrders(data);\r\n    setOrders(orders);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (afm && branch.length === 1) {\r\n      getOrders({ ...query, AFM: afm });\r\n    }\r\n    if (selectedBranch.trdbranch) {\r\n      getOrders({\r\n        ...query,\r\n        AFM: afm,\r\n        TrdrBranch: selectedBranch.trdbranch,\r\n      });\r\n    }\r\n  }, [afm, query, selectedBranch, branch]);\r\n\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\">\r\n      <BackToMenu />\r\n\r\n      <Grid item xs={12}>\r\n        <Typography className={classes.title}>ΑΝΑΖΗΤΗΣΗ ΠΑΡΑΓΓΕΛΙΑΣ</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3} justifyContent=\"center\">\r\n          <Grid item>{branch.length > 1 && <Branches />}</Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} justifyContent=\"center\">\r\n          <Grid item>\r\n            <OrderOptions optionValue={optionValue} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {value !== PENDING && (\r\n              <DatePickers\r\n                getSearchData={getSearchData}\r\n                getDateFrom={setDateFrom}\r\n                getDateTo={setDateTo}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item lg={6} sm={12} className={classes.table}>\r\n        <div className={classes.table_wrapper}>\r\n          <DataTable\r\n            name=\"master\"\r\n            onRowclick={getDetails}\r\n            rows={orders && master}\r\n            headCells={headCells}\r\n            // maxCols={5}\r\n            selectedRow={orderDetails[0]}\r\n            getPdf={downloadPdf}\r\n            // pagination={false}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={6} />\r\n      <Grid item lg={12} sm={12} className={classes.table}>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.title}>ΑΝΑΛΥΣΗ ΠΑΡΑΓΓΕΛΙΑΣ</Typography>\r\n        </Grid>\r\n        {orderDetails[0]?.ficomments && (\r\n          <span>\r\n            Αιτιολογία: {orderDetails[0].ficomments}\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          </span>\r\n        )}\r\n\r\n        {orderDetails[0]?.remarks && (\r\n          <span>Παρατηρήσεις: {orderDetails[0].remarks}</span>\r\n        )}\r\n\r\n        <DataTable\r\n          name=\"details\"\r\n          onRowclick={getDetails}\r\n          rows={orderDetails}\r\n          headCells={headCellsDetails}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  withStyles,\r\n  Grid,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport { profilColors } from \"../../../constants\";\r\nimport { NewOrderContext } from \"../NewOrderContext\";\r\n\r\ntype Props = {\r\n  isDisabled: boolean;\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    radios: {\r\n      textAlign: \"left\",\r\n    },\r\n  })\r\n);\r\n\r\nconst GreenRadio = withStyles(({ palette }) => ({\r\n  root: {\r\n    color: palette.primary.main,\r\n    \"&$checked\": {\r\n      color: palette.primary.main,\r\n    },\r\n  },\r\n\r\n  checked: {},\r\n}))((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst OrderOptions = ({ isDisabled }: Props) => {\r\n  const {\r\n    selectedInfo,\r\n    setOrderColor,\r\n    setColorValue,\r\n    orderColor,\r\n    actions,\r\n    setFinCode,\r\n    colorValue,\r\n  } = useContext(NewOrderContext);\r\n  const { comments } = selectedInfo.data;\r\n\r\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    actions.resetSelection();\r\n    const v = (event.target as HTMLInputElement).value;\r\n    // setValue(v);\r\n    setOrderColor(v);\r\n    setFinCode(selectedInfo.data.fincode);\r\n    // v !== \"2\" && setColorValue(\"\");\r\n  };\r\n  const handleChangeColor = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const c = (event.target as HTMLInputElement).value;\r\n    setColorValue(c);\r\n  };\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup\r\n        aria-label=\"orders\"\r\n        row\r\n        name=\"orders\"\r\n        value={orderColor}\r\n        onChange={handleChangeType}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <FormControlLabel\r\n              value={profilColors.BLANK}\r\n              control={<GreenRadio />}\r\n              label=\"Άβαφο\"\r\n              disabled={isDisabled}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <FormControlLabel\r\n              value={profilColors.WHITE}\r\n              disabled={isDisabled}\r\n              control={<GreenRadio />}\r\n              label=\"Λευκό\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <FormControlLabel\r\n              value={profilColors.COLOR}\r\n              disabled={isDisabled}\r\n              control={<GreenRadio />}\r\n              label=\"Χρώμα\"\r\n            />\r\n          </Grid>\r\n\r\n          {orderColor === profilColors.COLOR && (\r\n            <Grid item>\r\n              <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"input-with-icon-grid\"\r\n                    onChange={handleChangeColor}\r\n                    label=\"Κωδικός...\"\r\n                    disabled={isDisabled}\r\n                    value={colorValue}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <SearchIcon />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default OrderOptions;\r\n","import * as React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function OrderDialog(props) {\r\n  const { onClose, getPdf, open, finDoc } = props;\r\n  // const [isOpen, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    window.location.reload();\r\n\r\n    onClose(false);\r\n  };\r\n\r\n  const completeOrder = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BootstrapDialog\r\n        fullWidth={true}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          style={{ padding: \"16px 14px\" }}\r\n        >\r\n          Επιτυχής αποστολή\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>ΠΑΡΑΓΓΕΛΙΑ {finDoc}</Typography>\r\n        </DialogContent>\r\n        <DialogActions style={{ justifyContent: \"space-between\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            onClick={completeOrder}\r\n          >\r\n            συνεχεια\r\n          </Button>\r\n          <Button onClick={getPdf}>\r\n            <PictureAsPdfIcon style={{ color: \"red\", fontSize: \"40px\" }} />\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NewOrderContext } from \"./NewOrderContext\";\r\n\r\nimport DataTable from \"../../components/table/Table\";\r\nimport BackToMenu from \"../../components/BackToMenu\";\r\n\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport OrderOptions from \"./components/OrderOptions\";\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { postData, downloadPdf } from \"../../api/fetch\";\r\nimport { BranchesContext } from \"../../context/BranchesContext\";\r\nimport Branches from \"./components/Branches\";\r\nimport OrderDialog from \"./Dialog\";\r\nimport { domain } from \"../../config\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    table: {\r\n      overflow: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\nconst defaultValues: any = {\r\n  data: {\r\n    search: null,\r\n    fincode: \"1\",\r\n    sku: \"\",\r\n    mtrlname: \"\",\r\n    qtY2: \"\",\r\n    qtY1: \"\",\r\n    xdocname: \"\",\r\n    commentS1: \"\",\r\n    comments: \"\",\r\n    qtY1Def: \"\",\r\n  },\r\n};\r\n\r\nexport const NewOrder = () => {\r\n  let history = useHistory();\r\n  const { selectedBranch, branch, setSelectBranch } =\r\n    useContext(BranchesContext);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [orderColor, setOrderColor] = useState(\"1\");\r\n\r\n  const [selectedInfo, setSelectedInfo] = useState(defaultValues);\r\n  const getRows = useCallback((rows) => {\r\n    console.log(\"ROWS-ROWS\", rows);\r\n    setRows(rows);\r\n  }, []);\r\n\r\n  const [remarkValue, setRemarkValue] = useState(\"\");\r\n  const [isopen, setDialog] = useState(false);\r\n  const [finDoc, setFindoc] = useState(null);\r\n  const [pdfCode, setPdfCode] = useState(null);\r\n  const [colorValue, SetColorValue] = useState(null);\r\n\r\n  const handleChangeRemark = (event) => {\r\n    setRemarkValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (branch.length > 1) setSelectBranch({});\r\n  }, []);\r\n\r\n  const getSelection = useCallback(\r\n    (selectionData) => {\r\n      setSelectedInfo({\r\n        ...selectedInfo,\r\n        data: {\r\n          ...selectedInfo.data,\r\n          search: selectionData.sku,\r\n          fincode: selectionData.u5NAME,\r\n          sku: selectionData.sku,\r\n          mtrlname: selectionData.name,\r\n          mtrl: selectionData.mtrl,\r\n          qtY1: selectionData.mU21,\r\n          qtY2: \"1\",\r\n          xdocname: selectionData.xdocname,\r\n          qtY1Def: selectionData.mU21,\r\n        },\r\n      });\r\n    },\r\n    [selectedInfo]\r\n  );\r\n\r\n  const setComments = useCallback(\r\n    (commentS1) => {\r\n      setSelectedInfo({\r\n        ...selectedInfo,\r\n        data: {\r\n          ...selectedInfo.data,\r\n          commentS1: commentS1,\r\n        },\r\n      });\r\n    },\r\n    [selectedInfo]\r\n  );\r\n\r\n  const setWeight = useCallback(\r\n    (selectionData) => {\r\n      const kg = (\r\n        parseFloat(selectionData) * parseFloat(selectedInfo.data.qtY1Def)\r\n      ).toFixed(2);\r\n      // eslint-disable-next-line no-new-wrappers\r\n      const newNum = new Number(kg);\r\n      const num = newNum.toLocaleString(\"el-GR\");\r\n      const convertedNum = newNum.toLocaleString(\"en-GB\");\r\n      setSelectedInfo({\r\n        ...selectedInfo,\r\n        data: {\r\n          ...selectedInfo.data,\r\n          qtY1: num,\r\n          qt1converted: convertedNum,\r\n          qtY2: selectionData,\r\n        },\r\n      });\r\n    },\r\n    [selectedInfo]\r\n  );\r\n\r\n  const resetSelection = useCallback(() => {\r\n    setSelectedInfo(defaultValues);\r\n  }, []);\r\n\r\n  const actions = {\r\n    getSelection,\r\n    resetSelection,\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  // Sets value of the radio buttons\r\n\r\n  //Orders created\r\n\r\n  const handleSetSelectedValue = (val) => {\r\n    setSelectedInfo({\r\n      ...selectedInfo,\r\n      data: { ...selectedInfo.data, search: val },\r\n    });\r\n  };\r\n\r\n  const setColorValue = (val) => {\r\n    SetColorValue(val);\r\n  };\r\n\r\n  const setFinCode = (val) => {\r\n    setSelectedInfo({\r\n      ...selectedInfo,\r\n      data: { ...selectedInfo.data, fincode: val },\r\n    });\r\n  };\r\n  const headCellsDetails: any = [\r\n    { id: \"fincode\", numeric: false, label: \"ΟΜΑΔΑ\" },\r\n    { id: \"sku\", numeric: false, label: \"ΚΩΔΙΚΟΣ\" },\r\n    { id: \"mtrlname\", numeric: false, label: \"ΠΕΡΙΓΡΑΦΗ\" },\r\n    { id: \"qtY2\", numeric: true, label: \"ΒΕΡΓΕΣ\" },\r\n    { id: \"qtY1\", numeric: true, label: \"ΚΙΛΑ\" },\r\n    { id: \"xdocname\", numeric: false, label: \"ΤΟΜΗ\" },\r\n    { id: \"commentS1\", numeric: false, label: \"ΠΑΡΑΤΗΡΗΣΕΙΣ\" },\r\n    { id: \"action\", numeric: false, label: \"\" },\r\n  ];\r\n\r\n  const handleDownload = () => {\r\n    downloadPdf(pdfCode, finDoc);\r\n  };\r\n\r\n  // post order\r\n\r\n  const handlePostData = () => {\r\n    //   // eslint-disable-next-line no-new-wrappers\r\n    //   const number = new Number(num).toLocaleString(\"en-US\");\r\n    //   return number;\r\n    // };\r\n\r\n    const orderData: any = rows.map((orderItem) => {\r\n      return {\r\n        company: 1,\r\n        boption: orderColor,\r\n        trdr: selectedBranch.trdr,\r\n        trdbranch:\r\n          selectedBranch.trdbranch === 0 ? null : selectedBranch.trdbranch,\r\n        comments: colorValue,\r\n        mtrl: orderItem.mtrl,\r\n        commentS1: orderItem.commentS1,\r\n        qtY1: orderItem.qt1converted,\r\n        qtY2: orderItem.qtY2,\r\n        remarks: remarkValue,\r\n      };\r\n    });\r\n\r\n    postData(`${domain}/erpapi/putorder`, orderData).then((data: any) => {\r\n      if (data.response.statusText === \"OK\") {\r\n        setDialog(true);\r\n        setFindoc(data.data.findoc);\r\n        setPdfCode(data.data.fincode);\r\n      }\r\n      console.log(data); // JSON data parsed by `data.json()` call\r\n    });\r\n  };\r\n  return (\r\n    <NewOrderContext.Provider\r\n      value={{\r\n        selectedInfo,\r\n        actions,\r\n        orderColor,\r\n        colorValue,\r\n        handleSetSelectedValue,\r\n        setWeight,\r\n        setComments,\r\n        setOrderColor,\r\n        setColorValue,\r\n        setFinCode,\r\n      }}\r\n    >\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <BackToMenu />\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.title}>ΝΕΑ ΠΑΡΑΓΓΕΛΙΑ</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <OrderOptions isDisabled={rows.length > 0} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item lg={12} sm={12} className={classes.table}>\r\n          <DataTable\r\n            name=\"details\"\r\n            onRowclick={() => false}\r\n            headCells={headCellsDetails}\r\n            clearCell\r\n            rows={[]}\r\n            add\r\n            getRows={getRows}\r\n            pagination={false}\r\n            rowsPerPagenum={100}\r\n          />\r\n        </Grid>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              id=\"outlined-multiline-flexible\"\r\n              label=\"ΠΑΡΑΤΗΡΗΣΕΙΣ\"\r\n              multiline\r\n              maxRows={4}\r\n              value={remarkValue}\r\n              onChange={handleChangeRemark}\r\n              style={{ width: 350 }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item justifyContent=\"center\">\r\n          <Grid container spacing={3} justifyContent=\"center\">\r\n            {rows.length > 0 && (\r\n              <>\r\n                <Grid item xs={12} justifyContent=\"center\">\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    {branch.length > 1 && <Branches />}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} justifyContent=\"center\">\r\n                  {console.log(\"selectedBranch\", branch)}\r\n                  {selectedBranch && (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handlePostData}\r\n                      >\r\n                        ΑΠΟΣΤΟΛΗ ΠΑΡΑΓΓΕΛΙΑΣ\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <OrderDialog\r\n        open={isopen}\r\n        finDoc={pdfCode}\r\n        onClose={() => setDialog(!isopen)}\r\n        getPdf={handleDownload}\r\n      />\r\n    </NewOrderContext.Provider>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Dashboard } from \"./pages/Dashboard\";\r\nimport { Orders } from \"./pages/Orders/Orders\";\r\nimport { NewOrder } from \"./pages/NewOrder/NewOrder\";\r\nimport \"./App.css\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { getbranches } from \"./api/fetch\";\r\nimport { BranchesContext } from \"./context/BranchesContext\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      // Green lig alfa site.\r\n      main: \"#83bd00\",\r\n    },\r\n    secondary: {\r\n      // This is green.A700 as hex.\r\n      main: \"#11cb5f\",\r\n    },\r\n    error: {\r\n      // This is green.A700 as hex.\r\n      main: \"#e53935\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [afm, setAfm] = useState(null);\r\n  const [branch, setBranch] = useState([]);\r\n  const [selectedBranch, setSelectBranch] = useState({});\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    console.log(\"here\");\r\n    const afmValue: any = document.getElementById(\"userAfm\");\r\n    if (afmValue) {\r\n      getbranches(afmValue.value).then((data: any) => {\r\n        setBranch(data);\r\n        if (data?.length === 1) {\r\n          setSelectBranch(data[0]);\r\n        }\r\n        setAfm(afmValue.value);\r\n      });\r\n    }\r\n  }, [afm]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BranchesContext.Provider\r\n        value={{ branch, setBranch, selectedBranch, setSelectBranch }}\r\n      >\r\n        {/* <CompanyOptions /> */}\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Dashboard />\r\n              </Route>\r\n              <Route exact path=\"/erp-test\">\r\n                <Dashboard />\r\n              </Route>\r\n              <Route path=\"/orders\">\r\n                <Orders afm={afm} />\r\n              </Route>\r\n              <Route path=\"/new\">\r\n                <NewOrder />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </BranchesContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}